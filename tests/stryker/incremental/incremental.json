{
  "files": {
    "app/App.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "0",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toHaveBeenCalledExactlyOnceWith(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected mock function to have been called exactly once with \u001b[32mArray [\n  Object {\n    \"htmlAttrs\": Object {\n      \"lang\": \"fr\",\n    },\n    \"meta\": Array [\n      Object {\n        \"content\": \"App.meta.description\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"Antoine ZANARDI\",\n  },\n]\u001b[39m, but it was called with \u001b[31mObject {}\u001b[39m",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "127",
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 37
            },
            "start": {
              "column": 9,
              "line": 33
            }
          }
        },
        {
          "id": "1",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toHaveBeenCalledExactlyOnceWith(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected mock function to have been called exactly once with \u001b[32mArray [\n  Object {\n    \"htmlAttrs\": Object {\n      \"lang\": \"fr\",\n    },\n    \"meta\": Array [\n      Object {\n        \"content\": \"App.meta.description\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"Antoine ZANARDI\",\n  },\n]\u001b[39m, but it was called with \u001b[31mObject {\n  \"htmlAttrs\": Object {\n    \"lang\": \"fr\",\n  },\n  \"meta\": Array [\n    Object {\n      \"content\": \"App.meta.description\",\n      \"name\": \"description\",\n    },\n  ],\n  \"title\": \"\",\n}\u001b[39m",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "127",
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 34
            },
            "start": {
              "column": 10,
              "line": 34
            }
          }
        },
        {
          "id": "2",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toHaveBeenCalledExactlyOnceWith(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected mock function to have been called exactly once with \u001b[32mArray [\n  Object {\n    \"htmlAttrs\": Object {\n      \"lang\": \"fr\",\n    },\n    \"meta\": Array [\n      Object {\n        \"content\": \"App.meta.description\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"Antoine ZANARDI\",\n  },\n]\u001b[39m, but it was called with \u001b[31mObject {\n  \"htmlAttrs\": Object {\n    \"lang\": \"fr\",\n  },\n  \"meta\": Array [],\n  \"title\": \"Antoine ZANARDI\",\n}\u001b[39m",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "127",
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 70,
              "line": 35
            },
            "start": {
              "column": 9,
              "line": 35
            }
          }
        },
        {
          "id": "3",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toHaveBeenCalledExactlyOnceWith(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected mock function to have been called exactly once with \u001b[32mArray [\n  Object {\n    \"htmlAttrs\": Object {\n      \"lang\": \"fr\",\n    },\n    \"meta\": Array [\n      Object {\n        \"content\": \"App.meta.description\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"Antoine ZANARDI\",\n  },\n]\u001b[39m, but it was called with \u001b[31mObject {\n  \"htmlAttrs\": Object {\n    \"lang\": \"fr\",\n  },\n  \"meta\": Array [\n    Object {},\n  ],\n  \"title\": \"Antoine ZANARDI\",\n}\u001b[39m",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "127",
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 69,
              "line": 35
            },
            "start": {
              "column": 10,
              "line": 35
            }
          }
        },
        {
          "id": "4",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toHaveBeenCalledExactlyOnceWith(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected mock function to have been called exactly once with \u001b[32mArray [\n  Object {\n    \"htmlAttrs\": Object {\n      \"lang\": \"fr\",\n    },\n    \"meta\": Array [\n      Object {\n        \"content\": \"App.meta.description\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"Antoine ZANARDI\",\n  },\n]\u001b[39m, but it was called with \u001b[31mObject {\n  \"htmlAttrs\": Object {\n    \"lang\": \"fr\",\n  },\n  \"meta\": Array [\n    Object {\n      \"content\": \"App.meta.description\",\n      \"name\": \"\",\n    },\n  ],\n  \"title\": \"Antoine ZANARDI\",\n}\u001b[39m",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "127",
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 35
            },
            "start": {
              "column": 18,
              "line": 35
            }
          }
        },
        {
          "id": "5",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toHaveBeenCalledExactlyOnceWith(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected mock function to have been called exactly once with \u001b[32mArray [\n  Object {\n    \"htmlAttrs\": Object {\n      \"lang\": \"fr\",\n    },\n    \"meta\": Array [\n      Object {\n        \"content\": \"App.meta.description\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"Antoine ZANARDI\",\n  },\n]\u001b[39m, but it was called with \u001b[31mObject {\n  \"htmlAttrs\": Object {\n    \"lang\": \"fr\",\n  },\n  \"meta\": Array [\n    Object {\n      \"content\": \"\",\n      \"name\": \"description\",\n    },\n  ],\n  \"title\": \"Antoine ZANARDI\",\n}\u001b[39m",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "127",
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 66,
              "line": 35
            },
            "start": {
              "column": 44,
              "line": 35
            }
          }
        },
        {
          "id": "6",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toHaveBeenCalledExactlyOnceWith(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected mock function to have been called exactly once with \u001b[32mArray [\n  Object {\n    \"htmlAttrs\": Object {\n      \"lang\": \"fr\",\n    },\n    \"meta\": Array [\n      Object {\n        \"content\": \"App.meta.description\",\n        \"name\": \"description\",\n      },\n    ],\n    \"title\": \"Antoine ZANARDI\",\n  },\n]\u001b[39m, but it was called with \u001b[31mObject {\n  \"htmlAttrs\": Object {},\n  \"meta\": Array [\n    Object {\n      \"content\": \"App.meta.description\",\n      \"name\": \"description\",\n    },\n  ],\n  \"title\": \"Antoine ZANARDI\",\n}\u001b[39m",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "128"
          ],
          "coveredBy": [
            "127",
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 36
            },
            "start": {
              "column": 14,
              "line": 36
            }
          }
        },
        {
          "id": "7",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toHaveBeenCalledExactlyOnceWith(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected mock function to have been called exactly once, but it was called \u001b[31m0\u001b[39m times",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "129"
          ],
          "coveredBy": [
            "127",
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 45
            },
            "start": {
              "column": 17,
              "line": 39
            }
          }
        },
        {
          "id": "8",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "127"
          ],
          "coveredBy": [
            "127",
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 86,
              "line": 41
            },
            "start": {
              "column": 56,
              "line": 41
            }
          }
        },
        {
          "id": "9",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Ignored using a comment",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 83,
              "line": 43
            },
            "start": {
              "column": 30,
              "line": 43
            }
          }
        },
        {
          "id": "10",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toHaveBeenCalledExactlyOnceWith(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected mock function to have been called exactly once with \u001b[32mArray [\n  \"👋 Hey ! J'ai aussi créé 💮 `dev-stamp` qui a généré ce message ! Retrouvez le sur GitHub ou npm !\",\n]\u001b[39m, but it was called with \u001b[31m\"\"\u001b[39m",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "129"
          ],
          "coveredBy": [
            "127",
            "128",
            "129"
          ],
          "location": {
            "end": {
              "column": 115,
              "line": 44
            },
            "start": {
              "column": 15,
              "line": 44
            }
          }
        }
      ],
      "source": "<template>\n  <div>\n    <NavBar/>\n\n    <main class=\"app-content\">\n      <MyProfile/>\n\n      <AboutMe/>\n\n      <MySkills/>\n\n      <MyPortfolio/>\n\n      <MyExperience/>\n\n      <MyEducation/>\n\n      <PageFooter/>\n    </main>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport aos from \"aos\";\nimport { stampInHtml } from \"dev-stamp\";\n\nimport { AboutMe, MyProfile, MySkills, MyPortfolio, MyExperience, MyEducation, PageFooter, NavBar } from \"#components\";\nimport { onMounted, useNuxtApp, useHead } from \"#imports\";\n\nconst { t, locale } = useI18n();\nconst { $bootstrap } = useNuxtApp();\n\nuseHead({\n  title: \"Antoine ZANARDI\",\n  meta: [{ name: \"description\", content: t(\"App.meta.description\") }],\n  htmlAttrs: { lang: locale.value },\n});\n\nonMounted(() => {\n  aos.init();\n  const tooltipTriggerList = document.querySelectorAll(\"[data-bs-toggle=\\\"tooltip\\\"]\");\n  // Stryker disable next-line all\n  tooltipTriggerList.forEach((tooltip: Element) => new $bootstrap.Tooltip(tooltip));\n  stampInHtml(\"👋 Hey ! J'ai aussi créé 💮 `dev-stamp` qui a généré ce message ! Retrouvez le sur GitHub ou npm !\");\n});\n</script>"
    },
    "app/components/AboutMe/AboutMyPersonalInfo/AboutMyPersonalInfo.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "11",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `AboutMyPersonalInfo Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59",
            "60",
            "61",
            "62",
            "63"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 198
            },
            "start": {
              "column": 36,
              "line": 193
            }
          }
        },
        {
          "id": "12",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `AboutMyPersonalInfo Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59",
            "60",
            "61",
            "62",
            "63"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 194
            },
            "start": {
              "column": 29,
              "line": 194
            }
          }
        },
        {
          "id": "13",
          "mutatorName": "ArithmeticOperator",
          "replacement": "new Date(Date.now() - birthday.getTime()).getUTCFullYear() + epochYear",
          "statusReason": "Snapshot `AboutMyPersonalInfo Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59",
            "60",
            "61",
            "62",
            "63"
          ],
          "location": {
            "end": {
              "column": 80,
              "line": 197
            },
            "start": {
              "column": 10,
              "line": 197
            }
          }
        },
        {
          "id": "14",
          "mutatorName": "ArithmeticOperator",
          "replacement": "Date.now() + birthday.getTime()",
          "statusReason": "Snapshot `AboutMyPersonalInfo Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59",
            "60",
            "61",
            "62",
            "63"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 197
            },
            "start": {
              "column": 19,
              "line": 197
            }
          }
        },
        {
          "id": "15",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `AboutMyPersonalInfo Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59",
            "60",
            "61",
            "62",
            "63"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 204
            },
            "start": {
              "column": 53,
              "line": 200
            }
          }
        },
        {
          "id": "16",
          "mutatorName": "Regex",
          "replacement": "/./gu",
          "statusReason": "Snapshot `AboutMyPersonalInfo Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59",
            "60",
            "61",
            "62",
            "63"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 201
            },
            "start": {
              "column": 51,
              "line": 201
            }
          }
        },
        {
          "id": "17",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `AboutMyPersonalInfo Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "59"
          ],
          "coveredBy": [
            "59",
            "60",
            "61",
            "62",
            "63"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 203
            },
            "start": {
              "column": 33,
              "line": 203
            }
          }
        },
        {
          "id": "18",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be '?' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "62"
          ],
          "coveredBy": [
            "62"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 203
            },
            "start": {
              "column": 40,
              "line": 203
            }
          }
        }
      ],
      "source": "<template>\n  <div>\n    <div class=\"card-body\">\n      <h3 class=\"h3 mb-2 mt-0 title\">\n        <WrappedFontAwesomeIcon\n          classes=\"me-2\"\n          icon=\"fa-id-card\"\n        />\n\n        <span>\n          {{ $t('AboutMyPersonalInfo.personalInfo') }}\n        </span>\n      </h3>\n\n      <hr>\n\n      <div class=\"row\">\n        <div class=\"col-sm-4\">\n          <b\n            class=\"text-uppercase\"\n          >\n            {{ `${$t('AboutMyPersonalInfo.genre')} :` }}\n          </b>\n        </div>\n\n        <div\n          id=\"genre\"\n          class=\"col-sm-8\"\n        >\n          {{ $t('AboutMyPersonalInfo.male') }}\n        </div>\n      </div>\n\n      <div class=\"mt-3 row\">\n        <div class=\"col-sm-4\">\n          <b\n            class=\"text-uppercase\"\n          >\n            {{ `${$t('AboutMyPersonalInfo.age')} :` }}\n          </b>\n        </div>\n\n        <div\n          id=\"age\"\n          class=\"col-sm-8\"\n        >\n          {{ $t('AboutMyPersonalInfo.yearsOld', { age }) }}\n        </div>\n      </div>\n\n      <div class=\"mt-3 row\">\n        <div class=\"col-sm-4\">\n          <b\n            class=\"text-uppercase\"\n          >\n            {{ `${$t('AboutMyPersonalInfo.email')} :` }}\n          </b>\n        </div>\n\n        <div class=\"col-sm-8\">\n          <b>\n            <a\n              :aria-label=\"$t('AboutMyPersonalInfo.emailLink', { 'email': config.public.email })\"\n              :href=\"`mailto:${config.public.email}`\"\n            >\n              {{ config.public.email }}\n            </a>\n          </b>\n        </div>\n      </div>\n\n      <div class=\"mt-3 row\">\n        <div class=\"col-sm-4\">\n          <b\n            class=\"text-uppercase\"\n          >\n            {{ `${$t('AboutMyPersonalInfo.phone')} :` }}\n          </b>\n        </div>\n\n        <div class=\"col-sm-8\">\n          <b>\n            <a\n              id=\"phone-number\"\n              :aria-label=\"$t('AboutMyPersonalInfo.phoneLink', { 'phone': formattedPhoneNumber })\"\n              :href=\"`tel:${config.public.phoneNumber}`\"\n            >\n              {{ formattedPhoneNumber }}\n            </a>\n          </b>\n        </div>\n      </div>\n\n      <div class=\"mt-3 row\">\n        <div class=\"col-sm-4\">\n          <b\n            class=\"text-uppercase\"\n          >\n            {{ `${$t('AboutMyPersonalInfo.address')} :` }}\n          </b>\n        </div>\n\n        <div\n          id=\"address\"\n          class=\"col-sm-8\"\n        >\n          {{ config.public.address }}\n        </div>\n      </div>\n\n      <div class=\"mt-3 row\">\n        <div class=\"col-sm-4\">\n          <b\n            class=\"text-uppercase\"\n          >\n            {{ `${$t('AboutMyPersonalInfo.languages')} :` }}\n          </b>\n        </div>\n\n        <div\n          class=\"col-sm-8\"\n        >\n          {{ $t('AboutMyPersonalInfo.englishAndFrench') }}\n        </div>\n      </div>\n\n      <div class=\"align-items-center mt-3 row\">\n        <div class=\"col-sm-4\">\n          <b\n            class=\"text-uppercase\"\n          >\n            {{ `${$t('AboutMyPersonalInfo.licenses')} :` }}\n          </b>\n        </div>\n\n        <div class=\"col-sm-8 d-flex\">\n          <WrappedFontAwesomeIcon\n            :aria-label=\"$t('AboutMyPersonalInfo.car')\"\n            class=\"me-2\"\n            data-bs-toggle=\"tooltip\"\n            icon=\"fa-car\"\n            role=\"img\"\n            size=\"2x\"\n            :title=\"$t('AboutMyPersonalInfo.car')\"\n          />\n\n          <WrappedFontAwesomeIcon\n            :aria-label=\"$t('AboutMyPersonalInfo.boat')\"\n            class=\"me-2\"\n            data-bs-toggle=\"tooltip\"\n            icon=\"fa-anchor\"\n            role=\"img\"\n            size=\"2x\"\n            :title=\"$t('AboutMyPersonalInfo.boat')\"\n          />\n        </div>\n      </div>\n\n      <div class=\"align-items-center mt-3 row\">\n        <div class=\"col-sm-4\">\n          <b\n            class=\"text-uppercase\"\n          >\n            {{ `${$t('AboutMyPersonalInfo.workingAt')} :` }}\n          </b>\n        </div>\n\n        <div class=\"col-sm-8\">\n          <a\n            :aria-label=\"$t('AboutMyPersonalInfo.companyLink', { 'company': 'Daveo' })\"\n            href=\"https://www.daveo.fr/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <NuxtImg\n              alt=\"Daveo\"\n              class=\"daveo-logo\"\n              loading=\"lazy\"\n              src=\"/images/logos/daveo-logo.webp\"\n            />\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport WrappedFontAwesomeIcon from \"~/components/shared/Icons/WrappedFontAwesomeIcon/WrappedFontAwesomeIcon.vue\";\n\nconst config = useRuntimeConfig();\n\nconst age = computed<number>(() => {\n  const birthday = new Date(\"1996-04-14\");\n  const epochYear = 1970;\n\n  return new Date(Date.now() - birthday.getTime()).getUTCFullYear() - epochYear;\n});\n\nconst formattedPhoneNumber = computed<string>(() => {\n  const matches = config.public.phoneNumber.match(/.{2}/gu);\n\n  return matches ? matches.join(\" \") : \"?\";\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.daveo-logo {\n  margin-left: -5px;\n  width: 150px;\n}\n</style>"
    },
    "app/components/MyEducation/EducationDegreeCard/EducationDegreeCard.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "19",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Education Degree Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58"
          ],
          "location": {
            "end": {
              "column": 101,
              "line": 74
            },
            "start": {
              "column": 38,
              "line": 74
            }
          }
        },
        {
          "id": "20",
          "mutatorName": "LogicalOperator",
          "replacement": "props.educationDegree.school.image && \"college-icon.webp\"",
          "statusReason": "Snapshot `Education Degree Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58"
          ],
          "location": {
            "end": {
              "column": 101,
              "line": 74
            },
            "start": {
              "column": 44,
              "line": 74
            }
          }
        },
        {
          "id": "21",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be 'college-icon.webp' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "51"
          ],
          "coveredBy": [
            "51"
          ],
          "location": {
            "end": {
              "column": 101,
              "line": 74
            },
            "start": {
              "column": 82,
              "line": 74
            }
          }
        },
        {
          "id": "22",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Education Degree Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 83
            },
            "start": {
              "column": 44,
              "line": 76
            }
          }
        },
        {
          "id": "23",
          "mutatorName": "LogicalOperator",
          "replacement": "school.translatedName && \"?\"",
          "statusReason": "Snapshot `Education Degree Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 78
            },
            "start": {
              "column": 15,
              "line": 78
            }
          }
        },
        {
          "id": "24",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be '?' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "56"
          ],
          "coveredBy": [
            "50",
            "51",
            "56"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 78
            },
            "start": {
              "column": 40,
              "line": 78
            }
          }
        },
        {
          "id": "25",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected 'Schools.epitech, undefined' to be 'Schools.epitech' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 11,
          "static": false,
          "killedBy": [
            "55"
          ],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 79
            },
            "start": {
              "column": 7,
              "line": 79
            }
          }
        },
        {
          "id": "26",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Education Degree Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 79
            },
            "start": {
              "column": 7,
              "line": 79
            }
          }
        },
        {
          "id": "27",
          "mutatorName": "EqualityOperator",
          "replacement": "school.city === undefined",
          "statusReason": "Snapshot `Education Degree Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 79
            },
            "start": {
              "column": 7,
              "line": 79
            }
          }
        },
        {
          "id": "28",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Education Degree Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 81
            },
            "start": {
              "column": 34,
              "line": 79
            }
          }
        },
        {
          "id": "29",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Education Degree Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 80
            },
            "start": {
              "column": 14,
              "line": 80
            }
          }
        },
        {
          "id": "30",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Education Degree Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 85
            },
            "start": {
              "column": 41,
              "line": 85
            }
          }
        },
        {
          "id": "31",
          "mutatorName": "LogicalOperator",
          "replacement": "props.educationDegree.school.translatedName && \"?\"",
          "statusReason": "Snapshot `Education Degree Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 85
            },
            "start": {
              "column": 47,
              "line": 85
            }
          }
        },
        {
          "id": "32",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '' to be '?' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "50"
          ],
          "coveredBy": [
            "50",
            "51",
            "56"
          ],
          "location": {
            "end": {
              "column": 97,
              "line": 85
            },
            "start": {
              "column": 94,
              "line": 85
            }
          }
        },
        {
          "id": "33",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Education Degree Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 94
            },
            "start": {
              "column": 53,
              "line": 87
            }
          }
        },
        {
          "id": "34",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Education Degree Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 90
            },
            "start": {
              "column": 12,
              "line": 90
            }
          }
        },
        {
          "id": "35",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Education Degree Card Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "45"
          ],
          "coveredBy": [
            "45",
            "46",
            "47",
            "48",
            "49",
            "50",
            "51",
            "52",
            "53",
            "54",
            "55",
            "56",
            "57",
            "58"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 93
            },
            "start": {
              "column": 61,
              "line": 90
            }
          }
        }
      ],
      "source": "<template>\n  <div class=\"card\">\n    <div class=\"row\">\n      <div\n        class=\"background-primary col-md-3\"\n        data-aos=\"fade-right\"\n        data-aos-duration=\"500\"\n        data-aos-offset=\"50\"\n      >\n        <div class=\"card-body cc-education-header\">\n          <PeriodTimeline\n            class=\"education-timeline\"\n            does-show-year-only\n            :finished-at=\"educationDegree.degree.obtainedAt\"\n            :image=\"schoolImage\"\n            :image-alt=\"schoolImageAlt\"\n            :period-dates-aria-label=\"periodDatesAriaLabel\"\n            :started-at=\"educationDegree.degree.startedAt\"\n            :url=\"educationDegree.school.url\"\n          />\n        </div>\n      </div>\n\n      <div\n        class=\"col-md-9\"\n        data-aos=\"fade-left\"\n        data-aos-duration=\"500\"\n        data-aos-offset=\"50\"\n      >\n        <div class=\"card-body\">\n          <h3\n            class=\"degree-name font-weight-bold h4 mb-2 mt-0\"\n          >\n            {{ educationDegree.degree.name }}\n          </h3>\n\n          <div class=\"d-flex\">\n            <p\n              class=\"category font-weight-bold mb-0 school-name\"\n            >\n              {{ schoolLabel }}\n            </p>\n\n            <CountryFlag\n              class=\"ms-2 school-flag\"\n              :country=\"educationDegree.school.country\"\n            />\n          </div>\n\n          <hr>\n\n          <p\n            v-for=\"(paragraph, index) in educationDegree.degree.description\"\n            :key=\"index\"\n            class=\"degree-description\"\n          >\n            {{ paragraph }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport type { EducationDegreeCardProps } from \"~/components/MyEducation/EducationDegreeCard/education-degree-card.types\";\nimport CountryFlag from \"~/components/shared/Images/CountryFlag/CountryFlag.vue\";\nimport PeriodTimeline from \"~/components/shared/Period/PeriodTimeline.vue\";\n\nconst props = defineProps<EducationDegreeCardProps>();\n\nconst { t } = useI18n();\n\nconst schoolImage = computed<string>(() => props.educationDegree.school.image ?? \"college-icon.webp\");\n\nconst schoolLabel = computed<string>(() => {\n  const { school } = props.educationDegree;\n  let label = school.translatedName ?? \"?\";\n  if (school.city !== undefined) {\n    label += `, ${school.city}`;\n  }\n  return label;\n});\n\nconst schoolImageAlt = computed<string>(() => props.educationDegree.school.translatedName ?? \"?\");\n\nconst periodDatesAriaLabel = computed<string>(() => {\n  const finishedAtYear = props.educationDegree.degree.obtainedAt.getFullYear().toString();\n\n  return t(\"EducationDegreeCard.degreeObtainedAtAriaLabel\", {\n    degreeName: props.educationDegree.degree.name,\n    obtainedAt: finishedAtYear,\n  });\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.cc-education-header {\n  padding-top: 25px !important;\n}\n@media (max-width: 768px) {\n  .cc-education-header {\n    padding-right: 1.25rem !important;\n  }\n}\n</style>"
    },
    "app/components/MyEducation/MyEducation.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "36",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "Snapshot `MyEducation Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 96
            },
            "start": {
              "column": 45,
              "line": 35
            }
          }
        },
        {
          "id": "37",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 46
            },
            "start": {
              "column": 3,
              "line": 36
            }
          }
        },
        {
          "id": "38",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `MyEducation Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 41
            },
            "start": {
              "column": 13,
              "line": 37
            }
          }
        },
        {
          "id": "39",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `MyEducation Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 38
            },
            "start": {
              "column": 15,
              "line": 38
            }
          }
        },
        {
          "id": "40",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expected { degree: { …(3) }, school: { …(5) } } to strictly equal { degree: { …(3) }, school: { …(5) } }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 39
            },
            "start": {
              "column": 20,
              "line": 39
            }
          }
        },
        {
          "id": "41",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { degree: { …(3) }, school: { …(5) } } to strictly equal { degree: { …(3) }, school: { …(5) } }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 39
            },
            "start": {
              "column": 23,
              "line": 39
            }
          }
        },
        {
          "id": "42",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { degree: { …(3) }, school: { …(5) } } to strictly equal { degree: { …(3) }, school: { …(5) } }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 40
            },
            "start": {
              "column": 28,
              "line": 40
            }
          }
        },
        {
          "id": "43",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected { degree: { …(3) }, school: {} } to strictly equal { degree: { …(3) }, school: { …(5) } }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 45
            },
            "start": {
              "column": 13,
              "line": 42
            }
          }
        },
        {
          "id": "44",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { degree: { …(3) }, school: { …(5) } } to strictly equal { degree: { …(3) }, school: { …(5) } }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "133"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 44
            },
            "start": {
              "column": 25,
              "line": 44
            }
          }
        },
        {
          "id": "45",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 56
            },
            "start": {
              "column": 6,
              "line": 46
            }
          }
        },
        {
          "id": "46",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `MyEducation Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 51
            },
            "start": {
              "column": 13,
              "line": 47
            }
          }
        },
        {
          "id": "47",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `MyEducation Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 48
            },
            "start": {
              "column": 15,
              "line": 48
            }
          }
        },
        {
          "id": "48",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expected { degree: { …(3) }, school: { …(5) } } to strictly equal { degree: { …(3) }, school: { …(5) } }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "134"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 49
            },
            "start": {
              "column": 20,
              "line": 49
            }
          }
        },
        {
          "id": "49",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { degree: { …(3) }, school: { …(5) } } to strictly equal { degree: { …(3) }, school: { …(5) } }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "134"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 60,
              "line": 49
            },
            "start": {
              "column": 23,
              "line": 49
            }
          }
        },
        {
          "id": "50",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { degree: { …(3) }, school: { …(5) } } to strictly equal { degree: { …(3) }, school: { …(5) } }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "134"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 50
            },
            "start": {
              "column": 28,
              "line": 50
            }
          }
        },
        {
          "id": "51",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected { degree: { …(3) }, school: {} } to strictly equal { degree: { …(3) }, school: { …(5) } }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "134"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 55
            },
            "start": {
              "column": 13,
              "line": 52
            }
          }
        },
        {
          "id": "52",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { degree: { …(3) }, school: { …(5) } } to strictly equal { degree: { …(3) }, school: { …(5) } }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "134"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 54
            },
            "start": {
              "column": 25,
              "line": 54
            }
          }
        },
        {
          "id": "53",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 70
            },
            "start": {
              "column": 6,
              "line": 56
            }
          }
        },
        {
          "id": "54",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `MyEducation Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 65
            },
            "start": {
              "column": 13,
              "line": 57
            }
          }
        },
        {
          "id": "55",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `MyEducation Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 58
            },
            "start": {
              "column": 15,
              "line": 58
            }
          }
        },
        {
          "id": "56",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expected { degree: { …(4) }, school: { …(6) } } to strictly equal { degree: { …(4) }, school: { …(6) } }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "135"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 62
            },
            "start": {
              "column": 20,
              "line": 59
            }
          }
        },
        {
          "id": "57",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { degree: { …(4) }, school: { …(6) } } to strictly equal { degree: { …(4) }, school: { …(6) } }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "135"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 60
            },
            "start": {
              "column": 11,
              "line": 60
            }
          }
        },
        {
          "id": "58",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { degree: { …(4) }, school: { …(6) } } to strictly equal { degree: { …(4) }, school: { …(6) } }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "135"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 61
            },
            "start": {
              "column": 11,
              "line": 61
            }
          }
        },
        {
          "id": "59",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { degree: { …(4) }, school: { …(6) } } to strictly equal { degree: { …(4) }, school: { …(6) } }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "135"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 63
            },
            "start": {
              "column": 27,
              "line": 63
            }
          }
        },
        {
          "id": "60",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { degree: { …(4) }, school: { …(6) } } to strictly equal { degree: { …(4) }, school: { …(6) } }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "135"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 64
            },
            "start": {
              "column": 28,
              "line": 64
            }
          }
        },
        {
          "id": "61",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected { degree: { …(4) }, school: {} } to strictly equal { degree: { …(4) }, school: { …(6) } }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "135"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 69
            },
            "start": {
              "column": 13,
              "line": 66
            }
          }
        },
        {
          "id": "62",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { degree: { …(4) }, school: { …(6) } } to strictly equal { degree: { …(4) }, school: { …(6) } }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "135"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 68
            },
            "start": {
              "column": 25,
              "line": 68
            }
          }
        },
        {
          "id": "63",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 84
            },
            "start": {
              "column": 6,
              "line": 70
            }
          }
        },
        {
          "id": "64",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `MyEducation Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 79
            },
            "start": {
              "column": 13,
              "line": 71
            }
          }
        },
        {
          "id": "65",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `MyEducation Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 72
            },
            "start": {
              "column": 15,
              "line": 72
            }
          }
        },
        {
          "id": "66",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expected { degree: { …(4) }, school: { …(6) } } to strictly equal { degree: { …(4) }, school: { …(6) } }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "136"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 76
            },
            "start": {
              "column": 20,
              "line": 73
            }
          }
        },
        {
          "id": "67",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { degree: { …(4) }, school: { …(6) } } to strictly equal { degree: { …(4) }, school: { …(6) } }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "136"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 61,
              "line": 74
            },
            "start": {
              "column": 11,
              "line": 74
            }
          }
        },
        {
          "id": "68",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { degree: { …(4) }, school: { …(6) } } to strictly equal { degree: { …(4) }, school: { …(6) } }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "136"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 75
            },
            "start": {
              "column": 11,
              "line": 75
            }
          }
        },
        {
          "id": "69",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { degree: { …(4) }, school: { …(6) } } to strictly equal { degree: { …(4) }, school: { …(6) } }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "136"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 77
            },
            "start": {
              "column": 27,
              "line": 77
            }
          }
        },
        {
          "id": "70",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { degree: { …(4) }, school: { …(6) } } to strictly equal { degree: { …(4) }, school: { …(6) } }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "136"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 78
            },
            "start": {
              "column": 28,
              "line": 78
            }
          }
        },
        {
          "id": "71",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected { degree: { …(4) }, school: {} } to strictly equal { degree: { …(4) }, school: { …(6) } }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "136"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 83
            },
            "start": {
              "column": 13,
              "line": 80
            }
          }
        },
        {
          "id": "72",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { degree: { …(4) }, school: { …(6) } } to strictly equal { degree: { …(4) }, school: { …(6) } }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "136"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 82
            },
            "start": {
              "column": 25,
              "line": 82
            }
          }
        },
        {
          "id": "73",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 95
            },
            "start": {
              "column": 6,
              "line": 84
            }
          }
        },
        {
          "id": "74",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `MyEducation Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 90
            },
            "start": {
              "column": 13,
              "line": 85
            }
          }
        },
        {
          "id": "75",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `MyEducation Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 86
            },
            "start": {
              "column": 15,
              "line": 86
            }
          }
        },
        {
          "id": "76",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expected { degree: { …(4) }, school: { …(5) } } to strictly equal { degree: { …(4) }, school: { …(5) } }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "137"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 65,
              "line": 87
            },
            "start": {
              "column": 20,
              "line": 87
            }
          }
        },
        {
          "id": "77",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { degree: { …(4) }, school: { …(5) } } to strictly equal { degree: { …(4) }, school: { …(5) } }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "137"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 63,
              "line": 87
            },
            "start": {
              "column": 23,
              "line": 87
            }
          }
        },
        {
          "id": "78",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { degree: { …(4) }, school: { …(5) } } to strictly equal { degree: { …(4) }, school: { …(5) } }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "137"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 88
            },
            "start": {
              "column": 27,
              "line": 88
            }
          }
        },
        {
          "id": "79",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { degree: { …(4) }, school: { …(5) } } to strictly equal { degree: { …(4) }, school: { …(5) } }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "137"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 89
            },
            "start": {
              "column": 28,
              "line": 89
            }
          }
        },
        {
          "id": "80",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected { degree: { …(4) }, school: {} } to strictly equal { degree: { …(4) }, school: { …(5) } }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "137"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 94
            },
            "start": {
              "column": 13,
              "line": 91
            }
          }
        },
        {
          "id": "81",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { degree: { …(4) }, school: { …(5) } } to strictly equal { degree: { …(4) }, school: { …(5) } }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "137"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 93
            },
            "start": {
              "column": 25,
              "line": 93
            }
          }
        },
        {
          "id": "82",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `MyEducation Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 100
            },
            "start": {
              "column": 90,
              "line": 98
            }
          }
        },
        {
          "id": "83",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `MyEducation Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 99
            },
            "start": {
              "column": 10,
              "line": 99
            }
          }
        },
        {
          "id": "84",
          "mutatorName": "ArithmeticOperator",
          "replacement": "index - 1",
          "statusReason": "Snapshot `MyEducation Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "131"
          ],
          "coveredBy": [
            "131",
            "132",
            "133",
            "134",
            "135",
            "136",
            "137"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 99
            },
            "start": {
              "column": 13,
              "line": 99
            }
          }
        }
      ],
      "source": "<template>\n  <section\n    id=\"education\"\n    aria-labelledby=\"education-title\"\n    class=\"section\"\n  >\n    <div class=\"cc-education container\">\n      <SectionTitle\n        id=\"education-title\"\n        icon=\"fa fa-graduation-cap\"\n        icon-color=\"#F05033\"\n        :title=\"$t('MyEducation.education')\"\n      />\n\n      <EducationDegreeCard\n        v-for=\"(educationDegree, index) in educationDegrees\"\n        :key=\"index\"\n        :aria-label=\"getEducationDegreeAriaLabel(educationDegree.degree.name, index)\"\n        class=\"education-degree-card\"\n        :education-degree=\"educationDegree\"\n        role=\"region\"\n      />\n    </div>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport type { EducationDegree } from \"~/models/education-degree/education-degree.types\";\nimport { SCHOOLS } from \"~/models/school/school.constants\";\nimport EducationDegreeCard from \"~/components/MyEducation/EducationDegreeCard/EducationDegreeCard.vue\";\nimport SectionTitle from \"~/components/shared/Layouts/SectionTitle/SectionTitle.vue\";\n\nconst { t } = useI18n();\n\nconst educationDegrees: EducationDegree[] = [\n  {\n    degree: {\n      name: t(`Degrees.gcpACE`),\n      description: [t(\"MyEducation.gcpACECertification\")],\n      obtainedAt: new Date(\"2022-12-01\"),\n    },\n    school: {\n      ...SCHOOLS.google,\n      translatedName: t(`Schools.${SCHOOLS.google.name}`),\n    },\n  }, {\n    degree: {\n      name: t(`Degrees.CKAD`),\n      description: [t(\"MyEducation.kubernetesCertification\")],\n      obtainedAt: new Date(\"2022-08-01\"),\n    },\n    school: {\n      ...SCHOOLS.cloudNativeComputingFoundation,\n      translatedName: t(`Schools.${SCHOOLS.cloudNativeComputingFoundation.name}`),\n    },\n  }, {\n    degree: {\n      name: t(`Degrees.ITMasterDegree`),\n      description: [\n        t(\"MyEducation.firstThreeYearsInEpitech\"),\n        t(\"MyEducation.lastYearsInEpitech\"),\n      ],\n      startedAt: new Date(\"2014-01-01\"),\n      obtainedAt: new Date(\"2019-01-01\"),\n    },\n    school: {\n      ...SCHOOLS.epitech,\n      translatedName: t(`Schools.${SCHOOLS.epitech.name}`),\n    },\n  }, {\n    degree: {\n      name: t(`Degrees.ITCertification`),\n      description: [\n        t(\"MyEducation.internationalExperienceForManagement\"),\n        t(\"MyEducation.softManagementSkills\"),\n      ],\n      startedAt: new Date(\"2017-01-01\"),\n      obtainedAt: new Date(\"2018-01-01\"),\n    },\n    school: {\n      ...SCHOOLS.laval,\n      translatedName: t(`Schools.${SCHOOLS.laval.name}`),\n    },\n  }, {\n    degree: {\n      name: t(`Degrees.highSchoolDiploma`),\n      description: [t(\"MyEducation.scientistHighSchoolDiploma\")],\n      startedAt: new Date(\"2011-01-01\"),\n      obtainedAt: new Date(\"2014-01-01\"),\n    },\n    school: {\n      ...SCHOOLS.vimeu,\n      translatedName: t(`Schools.${SCHOOLS.vimeu.name}`),\n    },\n  },\n];\n\nfunction getEducationDegreeAriaLabel(educationDegreeName: string, index: number): string {\n  return `${index + 1} - ${educationDegreeName}`;\n}\n</script>"
    },
    "app/components/MyExperience/MyExperience.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "85",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "Snapshot `My Experience Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 95
            },
            "start": {
              "column": 59,
              "line": 35
            }
          }
        },
        {
          "id": "86",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 49
            },
            "start": {
              "column": 3,
              "line": 36
            }
          }
        },
        {
          "id": "87",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `My Experience Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 47
            },
            "start": {
              "column": 10,
              "line": 37
            }
          }
        },
        {
          "id": "88",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `My Experience Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 38
            },
            "start": {
              "column": 15,
              "line": 38
            }
          }
        },
        {
          "id": "89",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expected { job: { …(3) }, company: { …(3) } } to strictly equal { …(2) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 45
            },
            "start": {
              "column": 20,
              "line": 39
            }
          }
        },
        {
          "id": "90",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(3) }, company: { …(3) } } to strictly equal { …(2) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 40
            },
            "start": {
              "column": 11,
              "line": 40
            }
          }
        },
        {
          "id": "91",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(3) }, company: { …(3) } } to strictly equal { …(2) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 41
            },
            "start": {
              "column": 11,
              "line": 41
            }
          }
        },
        {
          "id": "92",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(3) }, company: { …(3) } } to strictly equal { …(2) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 42
            },
            "start": {
              "column": 11,
              "line": 42
            }
          }
        },
        {
          "id": "93",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(3) }, company: { …(3) } } to strictly equal { …(2) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 43
            },
            "start": {
              "column": 11,
              "line": 43
            }
          }
        },
        {
          "id": "94",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(3) }, company: { …(3) } } to strictly equal { …(2) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 44
            },
            "start": {
              "column": 11,
              "line": 44
            }
          }
        },
        {
          "id": "95",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(3) }, company: { …(3) } } to strictly equal { …(2) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "86"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 46
            },
            "start": {
              "column": 27,
              "line": 46
            }
          }
        },
        {
          "id": "96",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 62
            },
            "start": {
              "column": 6,
              "line": 49
            }
          }
        },
        {
          "id": "97",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `My Experience Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 60
            },
            "start": {
              "column": 10,
              "line": 50
            }
          }
        },
        {
          "id": "98",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `My Experience Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 51
            },
            "start": {
              "column": 15,
              "line": 51
            }
          }
        },
        {
          "id": "99",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 8,
              "line": 57
            },
            "start": {
              "column": 20,
              "line": 52
            }
          }
        },
        {
          "id": "100",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 53
            },
            "start": {
              "column": 11,
              "line": 53
            }
          }
        },
        {
          "id": "101",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 54
            },
            "start": {
              "column": 11,
              "line": 54
            }
          }
        },
        {
          "id": "102",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 55
            },
            "start": {
              "column": 11,
              "line": 55
            }
          }
        },
        {
          "id": "103",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 56
            },
            "start": {
              "column": 11,
              "line": 56
            }
          }
        },
        {
          "id": "104",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 58
            },
            "start": {
              "column": 27,
              "line": 58
            }
          }
        },
        {
          "id": "105",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "87"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 59
            },
            "start": {
              "column": 28,
              "line": 59
            }
          }
        },
        {
          "id": "106",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 70
            },
            "start": {
              "column": 6,
              "line": 62
            }
          }
        },
        {
          "id": "107",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `My Experience Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 68
            },
            "start": {
              "column": 10,
              "line": 63
            }
          }
        },
        {
          "id": "108",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `My Experience Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 54,
              "line": 64
            },
            "start": {
              "column": 15,
              "line": 64
            }
          }
        },
        {
          "id": "109",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "88"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 98,
              "line": 65
            },
            "start": {
              "column": 20,
              "line": 65
            }
          }
        },
        {
          "id": "110",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "88"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 65
            },
            "start": {
              "column": 23,
              "line": 65
            }
          }
        },
        {
          "id": "111",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "88"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 96,
              "line": 65
            },
            "start": {
              "column": 62,
              "line": 65
            }
          }
        },
        {
          "id": "112",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "88"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 66
            },
            "start": {
              "column": 27,
              "line": 66
            }
          }
        },
        {
          "id": "113",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "88"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 67
            },
            "start": {
              "column": 28,
              "line": 67
            }
          }
        },
        {
          "id": "114",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 78
            },
            "start": {
              "column": 6,
              "line": 70
            }
          }
        },
        {
          "id": "115",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `My Experience Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 76
            },
            "start": {
              "column": 10,
              "line": 71
            }
          }
        },
        {
          "id": "116",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `My Experience Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 54,
              "line": 72
            },
            "start": {
              "column": 15,
              "line": 72
            }
          }
        },
        {
          "id": "117",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "89"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 105,
              "line": 73
            },
            "start": {
              "column": 20,
              "line": 73
            }
          }
        },
        {
          "id": "118",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "89"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 73
            },
            "start": {
              "column": 23,
              "line": 73
            }
          }
        },
        {
          "id": "119",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "89"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 73
            },
            "start": {
              "column": 63,
              "line": 73
            }
          }
        },
        {
          "id": "120",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "89"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 74
            },
            "start": {
              "column": 27,
              "line": 74
            }
          }
        },
        {
          "id": "121",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { company: { …(3) }, job: { …(4) } }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "89"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 75
            },
            "start": {
              "column": 28,
              "line": 75
            }
          }
        },
        {
          "id": "122",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 86
            },
            "start": {
              "column": 6,
              "line": 78
            }
          }
        },
        {
          "id": "123",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `My Experience Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 84
            },
            "start": {
              "column": 10,
              "line": 79
            }
          }
        },
        {
          "id": "124",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `My Experience Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 80
            },
            "start": {
              "column": 15,
              "line": 80
            }
          }
        },
        {
          "id": "125",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { …(2) }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "90"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 100,
              "line": 81
            },
            "start": {
              "column": 20,
              "line": 81
            }
          }
        },
        {
          "id": "126",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { …(2) }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "90"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 81
            },
            "start": {
              "column": 23,
              "line": 81
            }
          }
        },
        {
          "id": "127",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { …(2) }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "90"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 98,
              "line": 81
            },
            "start": {
              "column": 63,
              "line": 81
            }
          }
        },
        {
          "id": "128",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { …(2) }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "90"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 82
            },
            "start": {
              "column": 27,
              "line": 82
            }
          }
        },
        {
          "id": "129",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { …(2) }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "90"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 83
            },
            "start": {
              "column": 28,
              "line": 83
            }
          }
        },
        {
          "id": "130",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Hook timed out in 10000ms.\nIf this is a long-running hook, pass a timeout value as the last argument or configure it globally with \"hookTimeout\".",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 94
            },
            "start": {
              "column": 6,
              "line": 86
            }
          }
        },
        {
          "id": "131",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `My Experience Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 92
            },
            "start": {
              "column": 10,
              "line": 87
            }
          }
        },
        {
          "id": "132",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `My Experience Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 54,
              "line": 88
            },
            "start": {
              "column": 15,
              "line": 88
            }
          }
        },
        {
          "id": "133",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { …(2) }",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "91"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 55,
              "line": 89
            },
            "start": {
              "column": 20,
              "line": 89
            }
          }
        },
        {
          "id": "134",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { …(2) }",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "91"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 89
            },
            "start": {
              "column": 23,
              "line": 89
            }
          }
        },
        {
          "id": "135",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { …(2) }",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "91"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 90
            },
            "start": {
              "column": 27,
              "line": 90
            }
          }
        },
        {
          "id": "136",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { job: { …(4) }, company: { …(3) } } to strictly equal { …(2) }",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "91"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 91
            },
            "start": {
              "column": 28,
              "line": 91
            }
          }
        },
        {
          "id": "137",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `My Experience Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 99
            },
            "start": {
              "column": 73,
              "line": 97
            }
          }
        },
        {
          "id": "138",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `My Experience Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 98
            },
            "start": {
              "column": 10,
              "line": 98
            }
          }
        },
        {
          "id": "139",
          "mutatorName": "ArithmeticOperator",
          "replacement": "index - 1",
          "statusReason": "Snapshot `My Experience Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "84"
          ],
          "coveredBy": [
            "84",
            "85",
            "86",
            "87",
            "88",
            "89",
            "90",
            "91"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 98
            },
            "start": {
              "column": 13,
              "line": 98
            }
          }
        }
      ],
      "source": "<template>\n  <section\n    id=\"experience\"\n    aria-labelledby=\"experience-title\"\n    class=\"section\"\n  >\n    <div class=\"cc-experience container\">\n      <SectionTitle\n        id=\"experience-title\"\n        icon=\"fa fa-briefcase\"\n        icon-color=\"#4D9344\"\n        :title=\"$t('MyExperience.professionalExperience')\"\n      />\n\n      <ProfessionalExperienceCard\n        v-for=\"(professionalExperience, index) in professionalExperiences\"\n        :key=\"index\"\n        :aria-label=\"getExperienceAriaLabel(professionalExperience.job.name, index)\"\n        class=\"professional-experience-card\"\n        :professional-experience=\"professionalExperience\"\n        role=\"region\"\n      />\n    </div>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport ProfessionalExperienceCard from \"~/components/MyExperience/ProfessionalExperienceCard/ProfessionalExperienceCard.vue\";\nimport SectionTitle from \"~/components/shared/Layouts/SectionTitle/SectionTitle.vue\";\nimport { COMPANIES } from \"~/models/company/company.constants\";\nimport type { ProfessionalExperience } from \"~/models/professional-experience/professional-experience.types\";\n\nconst { t } = useI18n();\n\nconst professionalExperiences: ProfessionalExperience[] = [\n  {\n    job: {\n      name: t(\"MyExperience.fullStackDeveloperConsultant\"),\n      description: [\n        t(\"MyExperience.iJoinedDaveo\"),\n        t(\"MyExperience.whatIsConsulting\"),\n        t(\"MyExperience.myMissionsAsConsultant\"),\n        t(\"MyExperience.cloudProductCertifications\"),\n        t(\"MyExperience.conferenceAndWorkshops\"),\n      ],\n      startedAt: new Date(\"2022-04-01\"),\n    },\n    company: COMPANIES.Daveo,\n  }, {\n    job: {\n      name: t(\"MyExperience.itR&DEngineer\"),\n      description: [\n        t(\"MyExperience.firstPermanentContract\"),\n        t(\"MyExperience.asProjectManager\"),\n        t(\"MyExperience.softSkills\"),\n        t(\"MyExperience.expertiseAndTechnicalSkills\"),\n      ],\n      startedAt: new Date(\"2019-09-01\"),\n      finishedAt: new Date(\"2022-03-31\"),\n    },\n    company: COMPANIES.OhMyCode,\n  }, {\n    job: {\n      name: t(\"MyExperience.internFullStackDeveloper\"),\n      description: [t(\"MyExperience.distributionProject\"), t(\"MyExperience.thisFinalInternship\")],\n      startedAt: new Date(\"2018-09-01\"),\n      finishedAt: new Date(\"2019-08-30\"),\n    },\n    company: COMPANIES.OhMyCode,\n  }, {\n    job: {\n      name: t(\"MyExperience.internFullStackDeveloper\"),\n      description: [t(\"MyExperience.firstStepsInOhMyCode\"), t(\"MyExperience.allFunctionalitiesInOnApp\")],\n      startedAt: new Date(\"2016-09-01\"),\n      finishedAt: new Date(\"2017-04-30\"),\n    },\n    company: COMPANIES.OhMyCode,\n  }, {\n    job: {\n      name: t(\"MyExperience.freelanceFullStackDeveloper\"),\n      description: [t(\"MyExperience.reiterateAsFreelance\"), t(\"MyExperience.moreResponsibilities\")],\n      startedAt: new Date(\"2016-02-01\"),\n      finishedAt: new Date(\"2016-08-30\"),\n    },\n    company: COMPANIES.SoBook,\n  }, {\n    job: {\n      name: t(\"MyExperience.internFullStackDeveloper\"),\n      description: [t(\"MyExperience.firstInternship\")],\n      startedAt: new Date(\"2015-07-01\"),\n      finishedAt: new Date(\"2015-12-31\"),\n    },\n    company: COMPANIES.SoBook,\n  },\n];\n\nfunction getExperienceAriaLabel(jobName: string, index: number): string {\n  return `${index + 1} - ${jobName}`;\n}\n</script>"
    },
    "app/components/MyPortfolio/MyPortfolio.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "140",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: '.portfolio.name', …(3) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "107"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 47
            },
            "start": {
              "column": 25,
              "line": 47
            }
          }
        },
        {
          "id": "141",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "Snapshot `My Portfolio Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "105"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 73
            },
            "start": {
              "column": 29,
              "line": 48
            }
          }
        },
        {
          "id": "142",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "107"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 54
            },
            "start": {
              "column": 3,
              "line": 49
            }
          }
        },
        {
          "id": "143",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { name: '', …(3) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "107"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 50
            },
            "start": {
              "column": 13,
              "line": 50
            }
          }
        },
        {
          "id": "144",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(4) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "107"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 62,
              "line": 51
            },
            "start": {
              "column": 20,
              "line": 51
            }
          }
        },
        {
          "id": "145",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(4) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "107"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 52
            },
            "start": {
              "column": 12,
              "line": 52
            }
          }
        },
        {
          "id": "146",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(4) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "107"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 53
            },
            "start": {
              "column": 10,
              "line": 53
            }
          }
        },
        {
          "id": "147",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "108"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 60
            },
            "start": {
              "column": 3,
              "line": 55
            }
          }
        },
        {
          "id": "148",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { name: '', …(3) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "108"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 58,
              "line": 56
            },
            "start": {
              "column": 13,
              "line": 56
            }
          }
        },
        {
          "id": "149",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(4) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "108"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 72,
              "line": 57
            },
            "start": {
              "column": 20,
              "line": 57
            }
          }
        },
        {
          "id": "150",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(4) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "108"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 49,
              "line": 58
            },
            "start": {
              "column": 12,
              "line": 58
            }
          }
        },
        {
          "id": "151",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(4) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "108"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 59
            },
            "start": {
              "column": 10,
              "line": 59
            }
          }
        },
        {
          "id": "152",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "109"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 66
            },
            "start": {
              "column": 3,
              "line": 61
            }
          }
        },
        {
          "id": "153",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { name: '', …(3) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "109"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 62
            },
            "start": {
              "column": 13,
              "line": 62
            }
          }
        },
        {
          "id": "154",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(4) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "109"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 65,
              "line": 63
            },
            "start": {
              "column": 20,
              "line": 63
            }
          }
        },
        {
          "id": "155",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(4) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "109"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 64
            },
            "start": {
              "column": 12,
              "line": 64
            }
          }
        },
        {
          "id": "156",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(4) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "109"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 42,
              "line": 65
            },
            "start": {
              "column": 10,
              "line": 65
            }
          }
        },
        {
          "id": "157",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "110"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 72
            },
            "start": {
              "column": 3,
              "line": 67
            }
          }
        },
        {
          "id": "158",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { name: '', …(3) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "110"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 68
            },
            "start": {
              "column": 13,
              "line": 68
            }
          }
        },
        {
          "id": "159",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected { …(4) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "110"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 59,
              "line": 69
            },
            "start": {
              "column": 20,
              "line": 69
            }
          }
        },
        {
          "id": "160",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(4) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "110"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 70
            },
            "start": {
              "column": 12,
              "line": 70
            }
          }
        },
        {
          "id": "161",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(4) } to strictly equal { …(4) }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "110"
          ],
          "coveredBy": [
            "105",
            "106",
            "107",
            "108",
            "109",
            "110"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 71
            },
            "start": {
              "column": 10,
              "line": 71
            }
          }
        }
      ],
      "source": "<template>\n  <section\n    id=\"portfolio\"\n    aria-labelledby=\"portfolio-title\"\n    class=\"section\"\n  >\n    <div class=\"container\">\n      <SectionTitle\n        id=\"portfolio-title\"\n        icon=\"fa fa-star\"\n        icon-color=\"#EEC624\"\n        :title=\"$t('MyPortfolio.portfolio')\"\n      />\n\n      <div class=\"gallery tab-content\">\n        <div\n          id=\"web-development\"\n          class=\"active tab-pane\"\n        >\n          <div class=\"me-auto ms-auto\">\n            <div class=\"align-items-center row\">\n              <div\n                v-for=\"project in projects\"\n                :key=\"project.name\"\n                class=\"col-md-6\"\n              >\n                <MyProject\n                  class=\"project\"\n                  :project=\"project\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup lang=\"ts\">\nimport MyProject from \"~/components/MyPortfolio/MyProject/MyProject.vue\";\nimport SectionTitle from \"~/components/shared/Layouts/SectionTitle/SectionTitle.vue\";\nimport type { Project } from \"~/models/project/project.types\";\n\nconst { t } = useI18n();\n\nconst i18nProjectPath = \"MyPortfolio.projects\";\nconst projects: Project[] = [\n  {\n    name: t(`${i18nProjectPath}.portfolio.name`),\n    description: t(`${i18nProjectPath}.portfolio.description`),\n    image: \"portfolio-thumbnail.webp\",\n    url: \"https://www.antoinezanardi.fr\",\n  },\n  {\n    name: t(`${i18nProjectPath}.werewolvesAssistant.name`),\n    description: t(`${i18nProjectPath}.werewolvesAssistant.description`),\n    image: \"werewolves-assistant-thumbnail.webp\",\n    url: \"https://werewolves-assistant.com\",\n  },\n  {\n    name: t(`${i18nProjectPath}.distribution.name`),\n    description: t(`${i18nProjectPath}.distribution.description`),\n    image: \"distribution-thumbnail.webp\",\n    url: \"https://www.airvey-editions.fr\",\n  },\n  {\n    name: t(`${i18nProjectPath}.gitHub.name`),\n    description: t(`${i18nProjectPath}.gitHub.description`),\n    image: \"github.webp\",\n    url: \"https://github.com/antoinezanardi\",\n  },\n];\n</script>"
    },
    "app/components/MySkills/MySkills.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "162",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.html', …(4) } to strictly equal { name: 'MySkills.html', …(4) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 54,
              "line": 79
            },
            "start": {
              "column": 17,
              "line": 79
            }
          }
        },
        {
          "id": "163",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.css', …(4) } to strictly equal { name: 'MySkills.css', …(4) }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "3"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 76,
              "line": 80
            },
            "start": {
              "column": 16,
              "line": 80
            }
          }
        },
        {
          "id": "164",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.javascript', …(4) } to strictly equal { name: 'MySkills.javascript', …(4) }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "4"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 57,
              "line": 81
            },
            "start": {
              "column": 15,
              "line": 81
            }
          }
        },
        {
          "id": "165",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.typescript', …(4) } to strictly equal { name: 'MySkills.typescript', …(4) }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "5"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 82
            },
            "start": {
              "column": 15,
              "line": 82
            }
          }
        },
        {
          "id": "166",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.vue', …(4) } to strictly equal { name: 'MySkills.vue', …(4) }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "6"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 83
            },
            "start": {
              "column": 16,
              "line": 83
            }
          }
        },
        {
          "id": "167",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.nuxt', …(4) } to strictly equal { name: 'MySkills.nuxt', …(4) }",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "7"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 84
            },
            "start": {
              "column": 17,
              "line": 84
            }
          }
        },
        {
          "id": "168",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.mysql', …(4) } to strictly equal { name: 'MySkills.mysql', …(4) }",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "8"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 85
            },
            "start": {
              "column": 18,
              "line": 85
            }
          }
        },
        {
          "id": "169",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.mongodb', …(4) } to strictly equal { name: 'MySkills.mongodb', …(4) }",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 86
            },
            "start": {
              "column": 20,
              "line": 86
            }
          }
        },
        {
          "id": "170",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.rust', …(4) } to strictly equal { name: 'MySkills.rust', …(4) }",
          "status": "Killed",
          "testsCompleted": 11,
          "static": false,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 87
            },
            "start": {
              "column": 17,
              "line": 87
            }
          }
        },
        {
          "id": "171",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "Snapshot `My Skills Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "0"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 152
            },
            "start": {
              "column": 25,
              "line": 88
            }
          }
        },
        {
          "id": "172",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { name: 'MySkills.html', …(4) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 95
            },
            "start": {
              "column": 3,
              "line": 89
            }
          }
        },
        {
          "id": "173",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: '', …(4) } to strictly equal { name: 'MySkills.html', …(4) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 90
            },
            "start": {
              "column": 13,
              "line": 90
            }
          }
        },
        {
          "id": "174",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.html', …(4) } to strictly equal { name: 'MySkills.html', …(4) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 91
            },
            "start": {
              "column": 18,
              "line": 91
            }
          }
        },
        {
          "id": "175",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.html', …(4) } to strictly equal { name: 'MySkills.html', …(4) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 92
            },
            "start": {
              "column": 12,
              "line": 92
            }
          }
        },
        {
          "id": "176",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.html', …(4) } to strictly equal { name: 'MySkills.html', …(4) }",
          "status": "Killed",
          "testsCompleted": 3,
          "static": false,
          "killedBy": [
            "2"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 93
            },
            "start": {
              "column": 14,
              "line": 93
            }
          }
        },
        {
          "id": "177",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { name: 'MySkills.css', …(4) }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "3"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 102
            },
            "start": {
              "column": 3,
              "line": 96
            }
          }
        },
        {
          "id": "178",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: '', …(4) } to strictly equal { name: 'MySkills.css', …(4) }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "3"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 97
            },
            "start": {
              "column": 13,
              "line": 97
            }
          }
        },
        {
          "id": "179",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.css', …(4) } to strictly equal { name: 'MySkills.css', …(4) }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "3"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 98
            },
            "start": {
              "column": 18,
              "line": 98
            }
          }
        },
        {
          "id": "180",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.css', …(4) } to strictly equal { name: 'MySkills.css', …(4) }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "3"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 99
            },
            "start": {
              "column": 12,
              "line": 99
            }
          }
        },
        {
          "id": "181",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.css', …(4) } to strictly equal { name: 'MySkills.css', …(4) }",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "3"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 100
            },
            "start": {
              "column": 14,
              "line": 100
            }
          }
        },
        {
          "id": "182",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { name: 'MySkills.javascript', …(4) }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "4"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 109
            },
            "start": {
              "column": 3,
              "line": 103
            }
          }
        },
        {
          "id": "183",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: '', …(4) } to strictly equal { name: 'MySkills.javascript', …(4) }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "4"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 104
            },
            "start": {
              "column": 13,
              "line": 104
            }
          }
        },
        {
          "id": "184",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.javascript', …(4) } to strictly equal { name: 'MySkills.javascript', …(4) }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "4"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 105
            },
            "start": {
              "column": 18,
              "line": 105
            }
          }
        },
        {
          "id": "185",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.javascript', …(4) } to strictly equal { name: 'MySkills.javascript', …(4) }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "4"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 106
            },
            "start": {
              "column": 12,
              "line": 106
            }
          }
        },
        {
          "id": "186",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.javascript', …(4) } to strictly equal { name: 'MySkills.javascript', …(4) }",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "4"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 107
            },
            "start": {
              "column": 14,
              "line": 107
            }
          }
        },
        {
          "id": "187",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { name: 'MySkills.typescript', …(4) }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "5"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 116
            },
            "start": {
              "column": 3,
              "line": 110
            }
          }
        },
        {
          "id": "188",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: '', …(4) } to strictly equal { name: 'MySkills.typescript', …(4) }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "5"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 111
            },
            "start": {
              "column": 13,
              "line": 111
            }
          }
        },
        {
          "id": "189",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.typescript', …(4) } to strictly equal { name: 'MySkills.typescript', …(4) }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "5"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 112
            },
            "start": {
              "column": 18,
              "line": 112
            }
          }
        },
        {
          "id": "190",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.typescript', …(4) } to strictly equal { name: 'MySkills.typescript', …(4) }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "5"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 113
            },
            "start": {
              "column": 12,
              "line": 113
            }
          }
        },
        {
          "id": "191",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.typescript', …(4) } to strictly equal { name: 'MySkills.typescript', …(4) }",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "5"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 114
            },
            "start": {
              "column": 14,
              "line": 114
            }
          }
        },
        {
          "id": "192",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { name: 'MySkills.vue', …(4) }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "6"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 123
            },
            "start": {
              "column": 3,
              "line": 117
            }
          }
        },
        {
          "id": "193",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: '', …(4) } to strictly equal { name: 'MySkills.vue', …(4) }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "6"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 27,
              "line": 118
            },
            "start": {
              "column": 13,
              "line": 118
            }
          }
        },
        {
          "id": "194",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.vue', …(4) } to strictly equal { name: 'MySkills.vue', …(4) }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "6"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 119
            },
            "start": {
              "column": 18,
              "line": 119
            }
          }
        },
        {
          "id": "195",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.vue', …(4) } to strictly equal { name: 'MySkills.vue', …(4) }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "6"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 120
            },
            "start": {
              "column": 12,
              "line": 120
            }
          }
        },
        {
          "id": "196",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.vue', …(4) } to strictly equal { name: 'MySkills.vue', …(4) }",
          "status": "Killed",
          "testsCompleted": 7,
          "static": false,
          "killedBy": [
            "6"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 121
            },
            "start": {
              "column": 14,
              "line": 121
            }
          }
        },
        {
          "id": "197",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { name: 'MySkills.nuxt', …(4) }",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "7"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 130
            },
            "start": {
              "column": 3,
              "line": 124
            }
          }
        },
        {
          "id": "198",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: '', …(4) } to strictly equal { name: 'MySkills.nuxt', …(4) }",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "7"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 125
            },
            "start": {
              "column": 13,
              "line": 125
            }
          }
        },
        {
          "id": "199",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.nuxt', …(4) } to strictly equal { name: 'MySkills.nuxt', …(4) }",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "7"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 126
            },
            "start": {
              "column": 18,
              "line": 126
            }
          }
        },
        {
          "id": "200",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.nuxt', …(4) } to strictly equal { name: 'MySkills.nuxt', …(4) }",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "7"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 127
            },
            "start": {
              "column": 12,
              "line": 127
            }
          }
        },
        {
          "id": "201",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.nuxt', …(4) } to strictly equal { name: 'MySkills.nuxt', …(4) }",
          "status": "Killed",
          "testsCompleted": 8,
          "static": false,
          "killedBy": [
            "7"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 128
            },
            "start": {
              "column": 14,
              "line": 128
            }
          }
        },
        {
          "id": "202",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { name: 'MySkills.mysql', …(4) }",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "8"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 137
            },
            "start": {
              "column": 3,
              "line": 131
            }
          }
        },
        {
          "id": "203",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: '', …(4) } to strictly equal { name: 'MySkills.mysql', …(4) }",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "8"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 132
            },
            "start": {
              "column": 13,
              "line": 132
            }
          }
        },
        {
          "id": "204",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.mysql', …(4) } to strictly equal { name: 'MySkills.mysql', …(4) }",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "8"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 133
            },
            "start": {
              "column": 18,
              "line": 133
            }
          }
        },
        {
          "id": "205",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.mysql', …(4) } to strictly equal { name: 'MySkills.mysql', …(4) }",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "8"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 134
            },
            "start": {
              "column": 12,
              "line": 134
            }
          }
        },
        {
          "id": "206",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.mysql', …(4) } to strictly equal { name: 'MySkills.mysql', …(4) }",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "8"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 135
            },
            "start": {
              "column": 14,
              "line": 135
            }
          }
        },
        {
          "id": "207",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { name: 'MySkills.mongodb', …(4) }",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 144
            },
            "start": {
              "column": 3,
              "line": 138
            }
          }
        },
        {
          "id": "208",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: '', …(4) } to strictly equal { name: 'MySkills.mongodb', …(4) }",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 139
            },
            "start": {
              "column": 13,
              "line": 139
            }
          }
        },
        {
          "id": "209",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.mongodb', …(4) } to strictly equal { name: 'MySkills.mongodb', …(4) }",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 140
            },
            "start": {
              "column": 18,
              "line": 140
            }
          }
        },
        {
          "id": "210",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.mongodb', …(4) } to strictly equal { name: 'MySkills.mongodb', …(4) }",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 141
            },
            "start": {
              "column": 12,
              "line": 141
            }
          }
        },
        {
          "id": "211",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.mongodb', …(4) } to strictly equal { name: 'MySkills.mongodb', …(4) }",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "9"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 142
            },
            "start": {
              "column": 14,
              "line": 142
            }
          }
        },
        {
          "id": "212",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { name: 'MySkills.rust', …(4) }",
          "status": "Killed",
          "testsCompleted": 11,
          "static": false,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 151
            },
            "start": {
              "column": 3,
              "line": 145
            }
          }
        },
        {
          "id": "213",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: '', …(4) } to strictly equal { name: 'MySkills.rust', …(4) }",
          "status": "Killed",
          "testsCompleted": 11,
          "static": false,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 28,
              "line": 146
            },
            "start": {
              "column": 13,
              "line": 146
            }
          }
        },
        {
          "id": "214",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.rust', …(4) } to strictly equal { name: 'MySkills.rust', …(4) }",
          "status": "Killed",
          "testsCompleted": 11,
          "static": false,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 147
            },
            "start": {
              "column": 18,
              "line": 147
            }
          }
        },
        {
          "id": "215",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.rust', …(4) } to strictly equal { name: 'MySkills.rust', …(4) }",
          "status": "Killed",
          "testsCompleted": 11,
          "static": false,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 148
            },
            "start": {
              "column": 12,
              "line": 148
            }
          }
        },
        {
          "id": "216",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { name: 'MySkills.rust', …(4) } to strictly equal { name: 'MySkills.rust', …(4) }",
          "status": "Killed",
          "testsCompleted": 11,
          "static": false,
          "killedBy": [
            "10"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 19,
              "line": 149
            },
            "start": {
              "column": 14,
              "line": 149
            }
          }
        },
        {
          "id": "217",
          "mutatorName": "ArrayDeclaration",
          "replacement": "[]",
          "statusReason": "Snapshot `My Skills Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "0"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 220
            },
            "start": {
              "column": 23,
              "line": 154
            }
          }
        },
        {
          "id": "218",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 13,
          "static": false,
          "killedBy": [
            "12"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 159
            },
            "start": {
              "column": 3,
              "line": 155
            }
          }
        },
        {
          "id": "219",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { description: '', …(2) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 13,
          "static": false,
          "killedBy": [
            "12"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 46,
              "line": 156
            },
            "start": {
              "column": 20,
              "line": 156
            }
          }
        },
        {
          "id": "220",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 13,
          "static": false,
          "killedBy": [
            "12"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 157
            },
            "start": {
              "column": 18,
              "line": 157
            }
          }
        },
        {
          "id": "221",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 13,
          "static": false,
          "killedBy": [
            "12"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 158
            },
            "start": {
              "column": 12,
              "line": 158
            }
          }
        },
        {
          "id": "222",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 14,
          "static": false,
          "killedBy": [
            "13"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 164
            },
            "start": {
              "column": 3,
              "line": 160
            }
          }
        },
        {
          "id": "223",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { description: '', …(2) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 14,
          "static": false,
          "killedBy": [
            "13"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 56,
              "line": 161
            },
            "start": {
              "column": 20,
              "line": 161
            }
          }
        },
        {
          "id": "224",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 14,
          "static": false,
          "killedBy": [
            "13"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 162
            },
            "start": {
              "column": 18,
              "line": 162
            }
          }
        },
        {
          "id": "225",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 14,
          "static": false,
          "killedBy": [
            "13"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 163
            },
            "start": {
              "column": 12,
              "line": 163
            }
          }
        },
        {
          "id": "226",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 15,
          "static": false,
          "killedBy": [
            "14"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 169
            },
            "start": {
              "column": 3,
              "line": 165
            }
          }
        },
        {
          "id": "227",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { description: '', …(2) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 15,
          "static": false,
          "killedBy": [
            "14"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 166
            },
            "start": {
              "column": 20,
              "line": 166
            }
          }
        },
        {
          "id": "228",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 15,
          "static": false,
          "killedBy": [
            "14"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 167
            },
            "start": {
              "column": 18,
              "line": 167
            }
          }
        },
        {
          "id": "229",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 15,
          "static": false,
          "killedBy": [
            "14"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 168
            },
            "start": {
              "column": 12,
              "line": 168
            }
          }
        },
        {
          "id": "230",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 16,
          "static": false,
          "killedBy": [
            "15"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 174
            },
            "start": {
              "column": 3,
              "line": 170
            }
          }
        },
        {
          "id": "231",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { description: '', …(2) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 16,
          "static": false,
          "killedBy": [
            "15"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 171
            },
            "start": {
              "column": 20,
              "line": 171
            }
          }
        },
        {
          "id": "232",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 16,
          "static": false,
          "killedBy": [
            "15"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 172
            },
            "start": {
              "column": 18,
              "line": 172
            }
          }
        },
        {
          "id": "233",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 16,
          "static": false,
          "killedBy": [
            "15"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 173
            },
            "start": {
              "column": 12,
              "line": 173
            }
          }
        },
        {
          "id": "234",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 17,
          "static": false,
          "killedBy": [
            "16"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 179
            },
            "start": {
              "column": 3,
              "line": 175
            }
          }
        },
        {
          "id": "235",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { description: '', …(2) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 17,
          "static": false,
          "killedBy": [
            "16"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 176
            },
            "start": {
              "column": 20,
              "line": 176
            }
          }
        },
        {
          "id": "236",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 17,
          "static": false,
          "killedBy": [
            "16"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 34,
              "line": 177
            },
            "start": {
              "column": 18,
              "line": 177
            }
          }
        },
        {
          "id": "237",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 17,
          "static": false,
          "killedBy": [
            "16"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 178
            },
            "start": {
              "column": 12,
              "line": 178
            }
          }
        },
        {
          "id": "238",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 18,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 184
            },
            "start": {
              "column": 3,
              "line": 180
            }
          }
        },
        {
          "id": "239",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { description: '', …(2) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 18,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 181
            },
            "start": {
              "column": 20,
              "line": 181
            }
          }
        },
        {
          "id": "240",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 18,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 182
            },
            "start": {
              "column": 18,
              "line": 182
            }
          }
        },
        {
          "id": "241",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 18,
          "static": false,
          "killedBy": [
            "17"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 183
            },
            "start": {
              "column": 12,
              "line": 183
            }
          }
        },
        {
          "id": "242",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 19,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 189
            },
            "start": {
              "column": 3,
              "line": 185
            }
          }
        },
        {
          "id": "243",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { description: '', …(2) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 19,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 186
            },
            "start": {
              "column": 20,
              "line": 186
            }
          }
        },
        {
          "id": "244",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 19,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 187
            },
            "start": {
              "column": 18,
              "line": 187
            }
          }
        },
        {
          "id": "245",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 19,
          "static": false,
          "killedBy": [
            "18"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 188
            },
            "start": {
              "column": 12,
              "line": 188
            }
          }
        },
        {
          "id": "246",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 20,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 194
            },
            "start": {
              "column": 3,
              "line": 190
            }
          }
        },
        {
          "id": "247",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { description: '', …(2) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 20,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 191
            },
            "start": {
              "column": 20,
              "line": 191
            }
          }
        },
        {
          "id": "248",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 20,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 192
            },
            "start": {
              "column": 18,
              "line": 192
            }
          }
        },
        {
          "id": "249",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 20,
          "static": false,
          "killedBy": [
            "19"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 193
            },
            "start": {
              "column": 12,
              "line": 193
            }
          }
        },
        {
          "id": "250",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 21,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 199
            },
            "start": {
              "column": 3,
              "line": 195
            }
          }
        },
        {
          "id": "251",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { description: '', …(2) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 21,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 44,
              "line": 196
            },
            "start": {
              "column": 20,
              "line": 196
            }
          }
        },
        {
          "id": "252",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 21,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 197
            },
            "start": {
              "column": 18,
              "line": 197
            }
          }
        },
        {
          "id": "253",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 21,
          "static": false,
          "killedBy": [
            "20"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 198
            },
            "start": {
              "column": 12,
              "line": 198
            }
          }
        },
        {
          "id": "254",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 22,
          "static": false,
          "killedBy": [
            "21"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 204
            },
            "start": {
              "column": 3,
              "line": 200
            }
          }
        },
        {
          "id": "255",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { description: '', …(2) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 22,
          "static": false,
          "killedBy": [
            "21"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 201
            },
            "start": {
              "column": 20,
              "line": 201
            }
          }
        },
        {
          "id": "256",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 22,
          "static": false,
          "killedBy": [
            "21"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 202
            },
            "start": {
              "column": 18,
              "line": 202
            }
          }
        },
        {
          "id": "257",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 22,
          "static": false,
          "killedBy": [
            "21"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 203
            },
            "start": {
              "column": 12,
              "line": 203
            }
          }
        },
        {
          "id": "258",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 23,
          "static": false,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 209
            },
            "start": {
              "column": 3,
              "line": 205
            }
          }
        },
        {
          "id": "259",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { description: '', …(2) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 23,
          "static": false,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 40,
              "line": 206
            },
            "start": {
              "column": 20,
              "line": 206
            }
          }
        },
        {
          "id": "260",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 23,
          "static": false,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 32,
              "line": 207
            },
            "start": {
              "column": 18,
              "line": 207
            }
          }
        },
        {
          "id": "261",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 23,
          "static": false,
          "killedBy": [
            "22"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 208
            },
            "start": {
              "column": 12,
              "line": 208
            }
          }
        },
        {
          "id": "262",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 24,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 214
            },
            "start": {
              "column": 3,
              "line": 210
            }
          }
        },
        {
          "id": "263",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { description: '', …(2) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 24,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 41,
              "line": 211
            },
            "start": {
              "column": 20,
              "line": 211
            }
          }
        },
        {
          "id": "264",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 24,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 45,
              "line": 212
            },
            "start": {
              "column": 18,
              "line": 212
            }
          }
        },
        {
          "id": "265",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { …(3) } to strictly equal { …(3) }",
          "status": "Killed",
          "testsCompleted": 24,
          "static": false,
          "killedBy": [
            "23"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 213
            },
            "start": {
              "column": 12,
              "line": 213
            }
          }
        },
        {
          "id": "266",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected {} to strictly equal { Object (description, iconClasses, ...) }",
          "status": "Killed",
          "testsCompleted": 25,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 219
            },
            "start": {
              "column": 3,
              "line": 215
            }
          }
        },
        {
          "id": "267",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { description: '', …(2) } to strictly equal { Object (description, iconClasses, ...) }",
          "status": "Killed",
          "testsCompleted": 25,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 37,
              "line": 216
            },
            "start": {
              "column": 20,
              "line": 216
            }
          }
        },
        {
          "id": "268",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { Object (description, iconClasses, ...) } to strictly equal { Object (description, iconClasses, ...) }",
          "status": "Killed",
          "testsCompleted": 25,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 33,
              "line": 217
            },
            "start": {
              "column": 18,
              "line": 217
            }
          }
        },
        {
          "id": "269",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected { Object (description, iconClasses, ...) } to strictly equal { Object (description, iconClasses, ...) }",
          "status": "Killed",
          "testsCompleted": 25,
          "static": false,
          "killedBy": [
            "24"
          ],
          "coveredBy": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 218
            },
            "start": {
              "column": 12,
              "line": 218
            }
          }
        }
      ],
      "source": "<template>\n  <section\n    id=\"skills\"\n    aria-labelledby=\"skills-title\"\n    class=\"section\"\n  >\n    <div class=\"container\">\n      <SectionTitle\n        id=\"skills-title\"\n        icon=\"fa fa-code\"\n        icon-color=\"#007EB8\"\n        :title=\"$t('MySkills.itSkills')\"\n      />\n\n      <div\n        class=\"card\"\n        data-aos=\"fade-up\"\n        data-aos-anchor-placement=\"top-bottom\"\n      >\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div\n              v-for=\"skill in skills\"\n              :key=\"skill.name\"\n              class=\"col-md-6\"\n            >\n              <SkillProgressBar\n                class=\"skill\"\n                :skill=\"skill\"\n              />\n            </div>\n          </div>\n\n          <hr>\n\n          <div class=\"row\">\n            <div class=\"col-md-12 text-center\">\n              <h3\n                class=\"mb-0\"\n              >\n                {{ $t('MySkills.myTools') }}\n              </h3>\n            </div>\n          </div>\n\n          <div class=\"mb-2 row\">\n            <div\n              class=\"col-12 font-italic my-1 small text-center text-muted\"\n            >\n              {{ `(${$t('MySkills.hoverIconsForDetails')})` }}\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-12 d-flex flex-wrap gap-1 justify-content-center text-center\">\n              <MyTool\n                v-for=\"tool in tools\"\n                :key=\"tool.iconClasses\"\n                class=\"tool\"\n                :tool=\"tool\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script lang=\"ts\" setup>\nimport MyTool from \"~/components/MySkills/MyTool/MyTool.vue\";\nimport SkillProgressBar from \"~/components/MySkills/SkillProgressBar/SkillProgressBar.vue\";\nimport SectionTitle from \"~/components/shared/Layouts/SectionTitle/SectionTitle.vue\";\nimport type { Skill } from \"~/models/skill/skill.types\";\nimport type { Tool } from \"~/models/tool/tool.types\";\n\nconst { t } = useI18n();\n\nconst htmlUrl = \"https://fr.wikipedia.org/wiki/HTML5\";\nconst cssUrl = \"https://fr.wikipedia.org/wiki/Feuilles_de_style_en_cascade\";\nconst jsUrl = \"https://fr.wikipedia.org/wiki/JavaScript\";\nconst tsUrl = \"https://www.typescriptlang.org/\";\nconst vueUrl = \"https://vuejs.org/\";\nconst nuxtUrl = \"https://v3.nuxtjs.org/\";\nconst mysqlUrl = \"https://www.mysql.com/fr/\";\nconst mongodbUrl = \"https://www.mongodb.com/\";\nconst rustUrl = \"https://www.rust-lang.org/\";\nconst skills: Skill[] = [\n  {\n    name: t(\"MySkills.html\"),\n    iconClasses: \"fab fa-html5\",\n    color: \"#E44D27\",\n    percent: \"95%\",\n    url: htmlUrl,\n  },\n  {\n    name: t(\"MySkills.css\"),\n    iconClasses: \"fab fa-css3-alt\",\n    color: \"#0162B0\",\n    percent: \"90%\",\n    url: cssUrl,\n  },\n  {\n    name: t(\"MySkills.javascript\"),\n    iconClasses: \"fab fa-js\",\n    color: \"#EFC624\",\n    percent: \"95%\",\n    url: jsUrl,\n  },\n  {\n    name: t(\"MySkills.typescript\"),\n    iconClasses: \"fas fa-rocket\",\n    color: \"#3077C6\",\n    percent: \"85%\",\n    url: tsUrl,\n  },\n  {\n    name: t(\"MySkills.vue\"),\n    iconClasses: \"fab fa-vuejs\",\n    color: \"#38956A\",\n    percent: \"95%\",\n    url: vueUrl,\n  },\n  {\n    name: t(\"MySkills.nuxt\"),\n    iconClasses: \"fas fa-mountain-sun\",\n    color: \"#00DC81\",\n    percent: \"90%\",\n    url: nuxtUrl,\n  },\n  {\n    name: t(\"MySkills.mysql\"),\n    iconClasses: \"fas fa-database\",\n    color: \"#017395\",\n    percent: \"85%\",\n    url: mysqlUrl,\n  },\n  {\n    name: t(\"MySkills.mongodb\"),\n    iconClasses: \"fas fa-leaf\",\n    color: \"#4E9445\",\n    percent: \"90%\",\n    url: mongodbUrl,\n  },\n  {\n    name: t(\"MySkills.rust\"),\n    iconClasses: \"fab fa-rust\",\n    color: \"#E3884F\",\n    percent: \"60%\",\n    url: rustUrl,\n  },\n];\n\nconst tools: Tool[] = [\n  {\n    description: t(\"MySkills.linuxForServers\"),\n    iconClasses: \"fab fa-linux\",\n    color: \"#2C2C2C\",\n  },\n  {\n    description: t(\"MySkills.microServicesArchitecture\"),\n    iconClasses: \"fas fa-sitemap\",\n    color: \"#007EB8\",\n  },\n  {\n    description: t(\"MySkills.gitForVersionControl\"),\n    iconClasses: \"fab fa-git\",\n    color: \"#F05033\",\n  },\n  {\n    description: t(\"MySkills.multipleEnvs\"),\n    iconClasses: \"fas fa-code-branch\",\n    color: \"#6C757D\",\n  },\n  {\n    description: t(\"MySkills.gitHubAndActions\"),\n    iconClasses: \"fab fa-github \",\n    color: \"#000000\",\n  },\n  {\n    description: t(\"MySkills.nodeJsForProjects\"),\n    iconClasses: \"fab fa-node-js \",\n    color: \"#539E43\",\n  },\n  {\n    description: t(\"MySkills.cssFrameworks\"),\n    iconClasses: \"fab fa-css3-alt \",\n    color: \"#0162B0\",\n  },\n  {\n    description: t(\"MySkills.vueJsWithNuxt\"),\n    iconClasses: \"fab fa-vuejs\",\n    color: \"#38956A\",\n  },\n  {\n    description: t(\"MySkills.openSourceNpm\"),\n    iconClasses: \"fab fa-npm\",\n    color: \"#C63635\",\n  },\n  {\n    description: t(\"MySkills.esLintForGoodPractises\"),\n    iconClasses: \"fas fa-spell-check\",\n    color: \"#00B819\",\n  },\n  {\n    description: t(\"MySkills.unitTests\"),\n    iconClasses: \"fas fa-tasks\",\n    color: \"#35485E\",\n  },\n  {\n    description: t(\"MySkills.openSource\"),\n    iconClasses: \"fas fa-hand-holding-heart\",\n    color: \"#C41B1B\",\n  },\n  {\n    description: t(\"MySkills.docker\"),\n    iconClasses: \"fab fa-docker\",\n    color: \"#2F87E3\",\n  },\n];\n</script>"
    },
    "app/components/MySkills/SkillProgressBar/SkillProgressBar.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "270",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Skill Progress Bar Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "92"
          ],
          "coveredBy": [
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99"
          ],
          "location": {
            "end": {
              "column": 3,
              "line": 59
            },
            "start": {
              "column": 59,
              "line": 56
            }
          }
        },
        {
          "id": "271",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Skill Progress Bar Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "92"
          ],
          "coveredBy": [
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 59
            },
            "start": {
              "column": 66,
              "line": 56
            }
          }
        },
        {
          "id": "272",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Skill Progress Bar Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "92"
          ],
          "coveredBy": [
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99"
          ],
          "location": {
            "end": {
              "column": 3,
              "line": 64
            },
            "start": {
              "column": 47,
              "line": 61
            }
          }
        },
        {
          "id": "273",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Skill Progress Bar Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "92"
          ],
          "coveredBy": [
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99"
          ],
          "location": {
            "end": {
              "column": 87,
              "line": 61
            },
            "start": {
              "column": 55,
              "line": 61
            }
          }
        },
        {
          "id": "274",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Skill Progress Bar Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "92"
          ],
          "coveredBy": [
            "92",
            "93",
            "94",
            "95",
            "96",
            "97",
            "98",
            "99"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 64
            },
            "start": {
              "column": 89,
              "line": 61
            }
          }
        }
      ],
      "source": "<template>\n  <div class=\"progress-container\">\n    <span\n      id=\"badge-html\"\n      class=\"progress-badge\"\n    >\n      <WrappedFontAwesomeIcon\n        class=\"skill-icon\"\n        classes=\"me-2\"\n        :icon=\"skill.iconClasses\"\n        :icon-color=\"skill.color\"\n      />\n\n      <b>\n        <a\n          class=\"skill-name text-muted\"\n          :href=\"skill.url\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          {{ skill.name }}\n        </a>\n      </b>\n    </span>\n\n    <div class=\"progress\">\n      <div\n        :aria-label=\"progressBarAriaLabel\"\n        aria-valuemax=\"100\"\n        aria-valuemin=\"0\"\n        class=\"progress-bar progress-bar-primary\"\n        data-aos=\"progress-full\"\n        data-aos-duration=\"2000\"\n        data-aos-offset=\"10\"\n        role=\"progressbar\"\n        :style=\"progressBarStyle\"\n      />\n\n      <span\n        class=\"font-weight-bold progress-value\"\n      >\n        {{ skill.percent }}\n      </span>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { SkillProgressBarProps } from \"~/components/MySkills/SkillProgressBar/skill-progress-bar.types\";\nimport WrappedFontAwesomeIcon from \"~/components/shared/Icons/WrappedFontAwesomeIcon/WrappedFontAwesomeIcon.vue\";\n\nconst props = defineProps<SkillProgressBarProps>();\n\nconst { t } = useI18n();\n\nconst progressBarStyle = computed<Record<string, string>>(() => ({\n  width: props.skill.percent,\n  backgroundColor: props.skill.color,\n}));\n\nconst progressBarAriaLabel = computed<string>(() => t(\"SkillProgressBar.skillProgress\", {\n  skillName: props.skill.name,\n  skillPercent: props.skill.percent,\n}));\n</script>"
    },
    "app/components/NavBar/NavBar.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "275",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "Snapshot `NavBar Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "100"
          ],
          "coveredBy": [
            "100",
            "101",
            "102",
            "103",
            "104"
          ],
          "location": {
            "end": {
              "column": 50,
              "line": 99
            },
            "start": {
              "column": 46,
              "line": 99
            }
          }
        },
        {
          "id": "276",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [ 'collapse', …(2) ] to include 'show'",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "102"
          ],
          "coveredBy": [
            "102",
            "103",
            "104"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 103
            },
            "start": {
              "column": 43,
              "line": 101
            }
          }
        },
        {
          "id": "277",
          "mutatorName": "BooleanLiteral",
          "replacement": "isMobileNavBarCollapsed.value",
          "statusReason": "expected [ 'collapse', …(2) ] to include 'show'",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "102"
          ],
          "coveredBy": [
            "102",
            "103",
            "104"
          ],
          "location": {
            "end": {
              "column": 65,
              "line": 102
            },
            "start": {
              "column": 35,
              "line": 102
            }
          }
        },
        {
          "id": "278",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected [ 'collapse', …(3) ] to not include 'show'",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "104"
          ],
          "coveredBy": [
            "104"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 107
            },
            "start": {
              "column": 40,
              "line": 105
            }
          }
        },
        {
          "id": "279",
          "mutatorName": "BooleanLiteral",
          "replacement": "false",
          "statusReason": "expected [ 'collapse', …(3) ] to not include 'show'",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "104"
          ],
          "coveredBy": [
            "104"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 106
            },
            "start": {
              "column": 35,
              "line": 106
            }
          }
        }
      ],
      "source": "<template>\n  <header>\n    <div class=\"profile-page sidebar-collapse\">\n      <nav\n        class=\"background-primary fixed-top navbar navbar-expand-lg\"\n        data-color-on-scroll=\"100\"\n      >\n        <div class=\"container\">\n          <div class=\"navbar-translate\">\n            <a\n              class=\"navbar-brand text-uppercase\"\n              href=\"#\"\n            >\n              {{ $t('shared.antoineZanardi') }}\n            </a>\n\n            <button\n              aria-controls=\"navigation\"\n              :aria-expanded=\"false\"\n              :aria-label=\"$t('NavBar.openNavigation')\"\n              class=\"navbar-toggler\"\n              data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              type=\"button\"\n              @click=\"onClickFromNavBarToggler\"\n            >\n              <span class=\"bar1 navbar-toggler-bar\"/>\n\n              <span class=\"bar2 navbar-toggler-bar\"/>\n\n              <span class=\"bar3 navbar-toggler-bar\"/>\n            </button>\n          </div>\n\n          <div\n            id=\"navigation\"\n            class=\"collapse justify-content-end navbar-collapse\"\n            :class=\"{ 'show': !isMobileNavBarCollapsed }\"\n          >\n            <ul class=\"navbar-nav w-100\">\n              <li class=\"nav-item\">\n                <a\n                  class=\"nav-link smooth-scroll\"\n                  href=\"#about\"\n                  @click=\"onClickFromNavBarLink\"\n                >\n                  {{ $t('AboutMyProfile.whoAmI') }}\n                </a>\n              </li>\n\n              <li class=\"nav-item\">\n                <a\n                  class=\"nav-link smooth-scroll\"\n                  href=\"#skills\"\n                  @click=\"onClickFromNavBarLink\"\n                >\n                  {{ $t('MySkills.itSkills') }}\n                </a>\n              </li>\n\n              <li class=\"nav-item\">\n                <a\n                  class=\"nav-link smooth-scroll\"\n                  href=\"#portfolio\"\n                  @click=\"onClickFromNavBarLink\"\n                >\n                  {{ $t('MyPortfolio.portfolio') }}\n                </a>\n              </li>\n\n              <li class=\"nav-item\">\n                <a\n                  class=\"nav-link smooth-scroll\"\n                  href=\"#experience\"\n                  @click=\"onClickFromNavBarLink\"\n                >\n                  {{ $t('MyExperience.professionalExperience') }}\n                </a>\n              </li>\n\n              <li class=\"nav-item\">\n                <a\n                  class=\"nav-link smooth-scroll\"\n                  href=\"#education\"\n                  @click=\"onClickFromNavBarLink\"\n                >\n                  {{ $t('MyEducation.education') }}\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  </header>\n</template>\n\n<script lang=\"ts\" setup>\nconst isMobileNavBarCollapsed = ref<boolean>(true);\n\nfunction onClickFromNavBarToggler(): void {\n  isMobileNavBarCollapsed.value = !isMobileNavBarCollapsed.value;\n}\n\nfunction onClickFromNavBarLink(): void {\n  isMobileNavBarCollapsed.value = true;\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.navbar {\n  box-shadow: 0px -5px 20px 5px black;\n\n  #navigation.show {\n    transform: unset;\n  }\n\n  .nav-item {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n  }\n\n  .navbar-toggler {\n    border: 0;\n  }\n}\n</style>"
    },
    "app/components/PageFooter/PageFooter.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "280",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "Snapshot `Page Footer Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "125"
          ],
          "coveredBy": [
            "125",
            "126"
          ],
          "location": {
            "end": {
              "column": 65,
              "line": 29
            },
            "start": {
              "column": 35,
              "line": 29
            }
          }
        }
      ],
      "source": "<template>\n  <footer class=\"footer py-1\">\n    <div\n      class=\"container text-center\"\n      data-aos=\"fade-up\"\n      data-aos-anchor-placement=\"top-bottom\"\n    >\n      <LinkedInButton class=\"me-2\"/>\n\n      <GitHubButton/>\n    </div>\n\n    <div class=\"font-italic h4 my-2 text-center text-muted title\">\n      <span>\n        {{ $t('shared.antoineZanardi') }}\n      </span>\n\n      <span>\n        {{ ` - ${fullYear}` }}\n      </span>\n    </div>\n  </footer>\n</template>\n\n<script lang=\"ts\" setup>\nimport GitHubButton from \"~/components/shared/Buttons/GitHubButton.vue\";\nimport LinkedInButton from \"~/components/shared/Buttons/LinkedInButton.vue\";\n\nconst fullYear = computed<number>(() => new Date().getFullYear());\n</script>"
    },
    "app/components/shared/Icons/WrappedFontAwesomeIcon/WrappedFontAwesomeIcon.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "281",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 2,
              "line": 24
            },
            "start": {
              "column": 58,
              "line": 20
            }
          }
        },
        {
          "id": "282",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 23,
              "line": 21
            },
            "start": {
              "column": 14,
              "line": 21
            }
          }
        },
        {
          "id": "283",
          "mutatorName": "StringLiteral",
          "replacement": "\"Stryker was here!\"",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 14,
              "line": 23
            },
            "start": {
              "column": 12,
              "line": 23
            }
          }
        }
      ],
      "source": "<template>\n  <span>\n    <ClientOnly>\n      <FontAwesomeIcon\n        class=\"font-awesome-icon\"\n        :class=\"classes\"\n        :icon=\"icon\"\n        :size=\"size\"\n        :style=\"{ 'color': iconColor }\"\n      />\n    </ClientOnly>\n  </span>\n</template>\n\n<script lang=\"ts\" setup>\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\n\nimport type { WrappedFontAwesomeIconProps } from \"~/components/shared/Icons/WrappedFontAwesomeIcon/wrapped-font-awesome-icon.types\";\n\nwithDefaults(defineProps<WrappedFontAwesomeIconProps>(), {\n  iconColor: \"#000000\",\n  size: undefined,\n  classes: \"\",\n});\n</script>"
    },
    "app/components/shared/Images/CountryFlag/CountryFlag.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "284",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Country Flag Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "79"
          ],
          "coveredBy": [
            "79",
            "80",
            "81",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 28
            },
            "start": {
              "column": 47,
              "line": 20
            }
          }
        },
        {
          "id": "285",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Country Flag Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "79"
          ],
          "coveredBy": [
            "79",
            "80",
            "81",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 25
            },
            "start": {
              "column": 52,
              "line": 21
            }
          }
        },
        {
          "id": "286",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Country Flag Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "79"
          ],
          "coveredBy": [
            "79",
            "80",
            "81",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 22
            },
            "start": {
              "column": 13,
              "line": 22
            }
          }
        },
        {
          "id": "287",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '/images/flags/' to be '/images/flags/usa-flag.webp' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "82"
          ],
          "coveredBy": [
            "79",
            "80",
            "81",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 25,
              "line": 23
            },
            "start": {
              "column": 10,
              "line": 23
            }
          }
        },
        {
          "id": "288",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '/images/flags/' to be '/images/flags/canada-flag.webp' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "83"
          ],
          "coveredBy": [
            "79",
            "80",
            "81",
            "82",
            "83"
          ],
          "location": {
            "end": {
              "column": 31,
              "line": 24
            },
            "start": {
              "column": 13,
              "line": 24
            }
          }
        }
      ],
      "source": "<template>\n  <NuxtImg\n    :alt=\"`${country} flag`\"\n    class=\"country-flag\"\n    data-bs-toggle=\"tooltip\"\n    height=\"25\"\n    loading=\"lazy\"\n    :src=\"`/images/flags/${countryFlagSrc}`\"\n    :title=\"$t(`Countries.${country}`)\"\n    width=\"25\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport type { CountryFlagProps } from \"~/components/shared/Images/CountryFlag/country-flag.types\";\nimport type { Country } from \"~/models/country/country.types\";\n\nconst props = defineProps<CountryFlagProps>();\n\nconst countryFlagSrc = computed<string>(() => {\n  const countryFlagsSrc: Record<Country, string> = {\n    france: \"france-flag.webp\",\n    usa: \"usa-flag.webp\",\n    canada: \"canada-flag.webp\",\n  };\n\n  return countryFlagsSrc[props.country];\n});\n</script>\n\n<style scoped lang=\"scss\">\n.country-flag {\n  width: 25px;\n  height: 25px;\n}\n</style>"
    },
    "app/components/shared/Layouts/SectionTitle/SectionTitle.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "289",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 72,
              "line": 20
            },
            "start": {
              "column": 48,
              "line": 20
            }
          }
        },
        {
          "id": "290",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 70,
              "line": 20
            },
            "start": {
              "column": 61,
              "line": 20
            }
          }
        }
      ],
      "source": "<template>\n  <h2 class=\"h2 mb-4 text-center title\">\n    <WrappedFontAwesomeIcon\n      id=\"section-title-icon\"\n      classes=\"section-icon me-2\"\n      :icon=\"icon\"\n      :icon-color=\"iconColor\"\n    />\n\n    <span class=\"section-title-text\">\n      {{ title }}\n    </span>\n  </h2>\n</template>\n\n<script setup lang=\"ts\">\nimport WrappedFontAwesomeIcon from \"~/components/shared/Icons/WrappedFontAwesomeIcon/WrappedFontAwesomeIcon.vue\";\nimport type { SectionTitleProps } from \"~/components/shared/Layouts/SectionTitle/section-title.types\";\n\nwithDefaults(defineProps<SectionTitleProps>(), { iconColor: \"#000000\" });\n</script>"
    },
    "app/components/shared/Period/PeriodTimeline.vue": {
      "language": "html",
      "mutants": [
        {
          "id": "291",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 2,
              "line": 81
            },
            "start": {
              "column": 64,
              "line": 77
            }
          }
        },
        {
          "id": "292",
          "mutatorName": "BooleanLiteral",
          "replacement": "true",
          "statusReason": "We can't mutate defineProps macro as it is stated here: https://github.com/stryker-mutator/stryker-js/issues/3305.",
          "status": "Ignored",
          "static": false,
          "location": {
            "end": {
              "column": 26,
              "line": 78
            },
            "start": {
              "column": 21,
              "line": 78
            }
          }
        },
        {
          "id": "293",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 11,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 105
            },
            "start": {
              "column": 48,
              "line": 86
            }
          }
        },
        {
          "id": "294",
          "mutatorName": "BooleanLiteral",
          "replacement": "props.startedAt",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 11,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 87
            },
            "start": {
              "column": 7,
              "line": 87
            }
          }
        },
        {
          "id": "295",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 11,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 87
            },
            "start": {
              "column": 7,
              "line": 87
            }
          }
        },
        {
          "id": "296",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected undefined to be '' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 17,
          "static": false,
          "killedBy": [
            "41"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 23,
              "line": 87
            },
            "start": {
              "column": 7,
              "line": 87
            }
          }
        },
        {
          "id": "297",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected undefined to be '' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 17,
          "static": false,
          "killedBy": [
            "41"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 89
            },
            "start": {
              "column": 25,
              "line": 87
            }
          }
        },
        {
          "id": "298",
          "mutatorName": "StringLiteral",
          "replacement": "\"Stryker was here!\"",
          "statusReason": "Snapshot `Period Timeline Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 88
            },
            "start": {
              "column": 12,
              "line": 88
            }
          }
        },
        {
          "id": "299",
          "mutatorName": "LogicalOperator",
          "replacement": "props.finishedAt && new Date()",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 52,
              "line": 90
            },
            "start": {
              "column": 22,
              "line": 90
            }
          }
        },
        {
          "id": "300",
          "mutatorName": "StringLiteral",
          "replacement": "\"Stryker was here!\"",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 22,
              "line": 92
            },
            "start": {
              "column": 20,
              "line": 92
            }
          }
        },
        {
          "id": "301",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 93
            },
            "start": {
              "column": 7,
              "line": 93
            }
          }
        },
        {
          "id": "302",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected '(  shared.and shared.months, {\"monthC…' to be '( shared.years, {\"yearCount\":2}, 2 sh…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 18,
              "line": 93
            },
            "start": {
              "column": 7,
              "line": 93
            }
          }
        },
        {
          "id": "303",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected '(  shared.and shared.months, {\"monthC…' to be '( shared.years, {\"yearCount\":2}, 2 sh…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "38",
            "39",
            "42",
            "44"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 95
            },
            "start": {
              "column": 20,
              "line": 93
            }
          }
        },
        {
          "id": "304",
          "mutatorName": "AssignmentOperator",
          "replacement": "periodText -= t(\"shared.years\", {\n  yearCount: period.year\n}, period.year)",
          "statusReason": "expected '( NaN shared.and shared.months, {\"mon…' to be '( shared.years, {\"yearCount\":2}, 2 sh…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "38",
            "39",
            "42",
            "44"
          ],
          "location": {
            "end": {
              "column": 77,
              "line": 94
            },
            "start": {
              "column": 5,
              "line": 94
            }
          }
        },
        {
          "id": "305",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '( , {\"yearCount\":2}, 2 shared.and sha…' to be '( shared.years, {\"yearCount\":2}, 2 sh…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "38",
            "39",
            "42",
            "44"
          ],
          "location": {
            "end": {
              "column": 35,
              "line": 94
            },
            "start": {
              "column": 21,
              "line": 94
            }
          }
        },
        {
          "id": "306",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected '( shared.years, {}, 2 shared.and shar…' to be '( shared.years, {\"yearCount\":2}, 2 sh…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "38",
            "39",
            "42",
            "44"
          ],
          "location": {
            "end": {
              "column": 63,
              "line": 94
            },
            "start": {
              "column": 37,
              "line": 94
            }
          }
        },
        {
          "id": "307",
          "mutatorName": "BooleanLiteral",
          "replacement": "props.doesShowYearOnly",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 96
            },
            "start": {
              "column": 7,
              "line": 96
            }
          }
        },
        {
          "id": "308",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected '( shared.years, {\"yearCount\":2}, 2 sh…' to be '( shared.years, {\"yearCount\":2}, 2 )' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "44"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 96
            },
            "start": {
              "column": 7,
              "line": 96
            }
          }
        },
        {
          "id": "309",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 96
            },
            "start": {
              "column": 7,
              "line": 96
            }
          }
        },
        {
          "id": "310",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "38",
            "39",
            "42",
            "43"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 103
            },
            "start": {
              "column": 32,
              "line": 96
            }
          }
        },
        {
          "id": "311",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "38",
            "39",
            "42",
            "43"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 97
            },
            "start": {
              "column": 9,
              "line": 97
            }
          }
        },
        {
          "id": "312",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected '( shared.years, {\"yearCount\":2}, 2sha…' to be '( shared.years, {\"yearCount\":2}, 2 sh…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "38",
            "39",
            "42",
            "43"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 97
            },
            "start": {
              "column": 9,
              "line": 97
            }
          }
        },
        {
          "id": "313",
          "mutatorName": "LogicalOperator",
          "replacement": "period.month || period.year",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "38",
            "39",
            "42",
            "43"
          ],
          "location": {
            "end": {
              "column": 36,
              "line": 97
            },
            "start": {
              "column": 9,
              "line": 97
            }
          }
        },
        {
          "id": "314",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected '( shared.years, {\"yearCount\":2}, 2sha…' to be '( shared.years, {\"yearCount\":2}, 2 sh…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 99
            },
            "start": {
              "column": 38,
              "line": 97
            }
          }
        },
        {
          "id": "315",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected '( shared.years, {\"yearCount\":2}, 2sha…' to be '( shared.years, {\"yearCount\":2}, 2 sh…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 98
            },
            "start": {
              "column": 21,
              "line": 98
            }
          }
        },
        {
          "id": "316",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "expected '( shared.years, {\"yearCount\":2}, 2  s…' to be '( shared.years, {\"yearCount\":2}, 2 sh…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "38",
            "39"
          ],
          "location": {
            "end": {
              "column": 39,
              "line": 98
            },
            "start": {
              "column": 27,
              "line": 98
            }
          }
        },
        {
          "id": "317",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected '( shared.years, {\"yearCount\":1}, 1sha…' to be '( shared.years, {\"yearCount\":1}, 1 )' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "42"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "38",
            "39",
            "42",
            "43"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 100
            },
            "start": {
              "column": 9,
              "line": 100
            }
          }
        },
        {
          "id": "318",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "38",
            "39",
            "42",
            "43"
          ],
          "location": {
            "end": {
              "column": 21,
              "line": 100
            },
            "start": {
              "column": 9,
              "line": 100
            }
          }
        },
        {
          "id": "319",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "38",
            "39",
            "43"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 102
            },
            "start": {
              "column": 23,
              "line": 100
            }
          }
        },
        {
          "id": "320",
          "mutatorName": "AssignmentOperator",
          "replacement": "periodText -= t(\"shared.months\", {\n  monthCount: period.month\n})",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "38",
            "39",
            "43"
          ],
          "location": {
            "end": {
              "column": 69,
              "line": 101
            },
            "start": {
              "column": 7,
              "line": 101
            }
          }
        },
        {
          "id": "321",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "38",
            "39",
            "43"
          ],
          "location": {
            "end": {
              "column": 38,
              "line": 101
            },
            "start": {
              "column": 23,
              "line": 101
            }
          }
        },
        {
          "id": "322",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "38",
            "39",
            "43"
          ],
          "location": {
            "end": {
              "column": 68,
              "line": 101
            },
            "start": {
              "column": 40,
              "line": 101
            }
          }
        },
        {
          "id": "323",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 29,
              "line": 104
            },
            "start": {
              "column": 10,
              "line": 104
            }
          }
        },
        {
          "id": "324",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "33"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 116
            },
            "start": {
              "column": 51,
              "line": 107
            }
          }
        },
        {
          "id": "325",
          "mutatorName": "BooleanLiteral",
          "replacement": "startedAt",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "33"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 17,
              "line": 109
            },
            "start": {
              "column": 7,
              "line": 109
            }
          }
        },
        {
          "id": "326",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "33"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 17,
              "line": 109
            },
            "start": {
              "column": 7,
              "line": 109
            }
          }
        },
        {
          "id": "327",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected undefined to be '' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 17,
              "line": 109
            },
            "start": {
              "column": 7,
              "line": 109
            }
          }
        },
        {
          "id": "328",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected undefined to be '' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 10,
          "static": false,
          "killedBy": [
            "34"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 111
            },
            "start": {
              "column": 19,
              "line": 109
            }
          }
        },
        {
          "id": "329",
          "mutatorName": "StringLiteral",
          "replacement": "\"Stryker was here!\"",
          "statusReason": "Snapshot `Period Timeline Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 14,
              "line": 110
            },
            "start": {
              "column": 12,
              "line": 110
            }
          }
        },
        {
          "id": "330",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "33"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "38",
            "39",
            "42",
            "43"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 115
            },
            "start": {
              "column": 45,
              "line": 115
            }
          }
        },
        {
          "id": "331",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Period Timeline Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 126
            },
            "start": {
              "column": 52,
              "line": 118
            }
          }
        },
        {
          "id": "332",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Period Timeline Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 17,
              "line": 120
            },
            "start": {
              "column": 7,
              "line": 120
            }
          }
        },
        {
          "id": "333",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'shared.today' to be 'janvier 2022' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 6,
          "static": false,
          "killedBy": [
            "30"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 17,
              "line": 120
            },
            "start": {
              "column": 7,
              "line": 120
            }
          }
        },
        {
          "id": "334",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'shared.today' to be 'janvier 2022' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "30"
          ],
          "coveredBy": [
            "30",
            "31",
            "33",
            "38",
            "39",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 124
            },
            "start": {
              "column": 19,
              "line": 120
            }
          }
        },
        {
          "id": "335",
          "mutatorName": "StringLiteral",
          "replacement": "``",
          "statusReason": "expected '' to be 'janvier 2022' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "30"
          ],
          "coveredBy": [
            "30",
            "33",
            "38",
            "39",
            "41",
            "42",
            "43"
          ],
          "location": {
            "end": {
              "column": 99,
              "line": 123
            },
            "start": {
              "column": 48,
              "line": 123
            }
          }
        },
        {
          "id": "336",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Period Timeline Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 26,
              "line": 125
            },
            "start": {
              "column": 12,
              "line": 125
            }
          }
        },
        {
          "id": "337",
          "mutatorName": "ArrowFunction",
          "replacement": "() => undefined",
          "statusReason": "expected false to be truthy",
          "status": "Killed",
          "testsCompleted": 9,
          "static": false,
          "killedBy": [
            "33"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 82,
              "line": 128
            },
            "start": {
              "column": 50,
              "line": 128
            }
          }
        },
        {
          "id": "338",
          "mutatorName": "BooleanLiteral",
          "replacement": "!formattedStartedAt.value",
          "statusReason": "Snapshot `Period Timeline Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 82,
              "line": 128
            },
            "start": {
              "column": 56,
              "line": 128
            }
          }
        },
        {
          "id": "339",
          "mutatorName": "BooleanLiteral",
          "replacement": "formattedStartedAt.value",
          "statusReason": "Snapshot `Period Timeline Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 82,
              "line": 128
            },
            "start": {
              "column": 57,
              "line": 128
            }
          }
        },
        {
          "id": "340",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Period Timeline Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 144
            },
            "start": {
              "column": 53,
              "line": 130
            }
          }
        },
        {
          "id": "341",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Period Timeline Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 132
            },
            "start": {
              "column": 7,
              "line": 132
            }
          }
        },
        {
          "id": "342",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "expected 'PeriodTimeline.obtainedAtAriaLabel, {…' to be 'aria-label' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 4,
          "static": false,
          "killedBy": [
            "28"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 132
            },
            "start": {
              "column": 7,
              "line": 132
            }
          }
        },
        {
          "id": "343",
          "mutatorName": "EqualityOperator",
          "replacement": "props.periodDatesAriaLabel === undefined",
          "statusReason": "Snapshot `Period Timeline Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 47,
              "line": 132
            },
            "start": {
              "column": 7,
              "line": 132
            }
          }
        },
        {
          "id": "344",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "expected 'PeriodTimeline.obtainedAtAriaLabel, {…' to be 'aria-label' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "28"
          ],
          "coveredBy": [
            "28"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 134
            },
            "start": {
              "column": 49,
              "line": 132
            }
          }
        },
        {
          "id": "345",
          "mutatorName": "ConditionalExpression",
          "replacement": "true",
          "statusReason": "Snapshot `Period Timeline Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 16,
              "line": 135
            },
            "start": {
              "column": 7,
              "line": 135
            }
          }
        },
        {
          "id": "346",
          "mutatorName": "ConditionalExpression",
          "replacement": "false",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 11,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 16,
              "line": 135
            },
            "start": {
              "column": 7,
              "line": 135
            }
          }
        },
        {
          "id": "347",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 140
            },
            "start": {
              "column": 18,
              "line": 135
            }
          }
        },
        {
          "id": "348",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 51,
              "line": 136
            },
            "start": {
              "column": 14,
              "line": 136
            }
          }
        },
        {
          "id": "349",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 6,
              "line": 139
            },
            "start": {
              "column": 53,
              "line": 136
            }
          }
        },
        {
          "id": "350",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Snapshot `Period Timeline Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 48,
              "line": 141
            },
            "start": {
              "column": 12,
              "line": 141
            }
          }
        },
        {
          "id": "351",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Snapshot `Period Timeline Component > should match snapshot when rendered. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "25"
          ],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 143
            },
            "start": {
              "column": 50,
              "line": 141
            }
          }
        }
      ],
      "source": "<template>\n  <div\n    id=\"period-timeline\"\n    class=\"d-flex flex-column h-100\"\n  >\n    <a\n      id=\"timeline-logo\"\n      :href=\"url\"\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n    >\n      <NuxtImg\n        :alt=\"imageAlt\"\n        class=\"logo timeline-logo-image white-logo\"\n        loading=\"lazy\"\n        :src=\"`/images/logos/${image}`\"\n      />\n    </a>\n\n    <hr class=\"my-3\">\n\n    <div class=\"d-flex flex-column flex-grow-1\">\n      <div\n        id=\"period-dates\"\n        :aria-label=\"periodDatesAriaLabel\"\n        class=\"align-items-center d-flex flex-column flex-grow-1 justify-content-center\"\n        role=\"region\"\n      >\n        <div\n          id=\"finished-at-date\"\n          class=\"period-date\"\n        >\n          {{ formattedFinishedAt }}\n        </div>\n\n        <WrappedFontAwesomeIcon\n          v-if=\"doesPeriodHaveTwoDates\"\n          id=\"arrow-up-icon\"\n          classes=\"my-3\"\n          icon=\"fa-arrow-up\"\n          icon-color=\"#00000\"\n          size=\"2x\"\n        />\n\n        <div\n          v-if=\"formattedStartedAt\"\n          id=\"started-at-date\"\n          class=\"period-date\"\n        >\n          {{ formattedStartedAt }}\n        </div>\n      </div>\n\n      <div\n        v-if=\"formattedPeriod\"\n        id=\"period-label\"\n        class=\"align-items-center d-flex flex-column\"\n      >\n        <hr class=\"w-100\">\n\n        <div\n          class=\"font-italic font-weight-bold small\"\n        >\n          {{ formattedPeriod }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport type { PeriodTimelineProps } from \"~/components/shared/Period/period-timeline.types\";\nimport { useDates } from \"~/composables/useDates\";\nimport WrappedFontAwesomeIcon from \"~/components/shared/Icons/WrappedFontAwesomeIcon/WrappedFontAwesomeIcon.vue\";\nimport { Period } from \"~/models/period/period.class\";\n\nconst props = withDefaults(defineProps<PeriodTimelineProps>(), {\n  doesShowYearOnly: false,\n  startedAt: undefined,\n  finishedAt: undefined,\n});\n\nconst { t } = useI18n();\nconst { getMonthFullName } = useDates();\n\nconst formattedPeriod = computed<string>(() => {\n  if (!props.startedAt) {\n    return \"\";\n  }\n  const finishedAt = props.finishedAt ?? new Date();\n  const period = new Period(props.startedAt, finishedAt);\n  let periodText = \"\";\n  if (period.year) {\n    periodText += t(\"shared.years\", { yearCount: period.year }, period.year);\n  }\n  if (!props.doesShowYearOnly) {\n    if (period.month && period.year) {\n      periodText += ` ${t(\"shared.and\")} `;\n    }\n    if (period.month) {\n      periodText += t(\"shared.months\", { monthCount: period.month });\n    }\n  }\n  return `( ${periodText} )`;\n});\n\nconst formattedStartedAt = computed<string>(() => {\n  const { startedAt, doesShowYearOnly } = props;\n  if (!startedAt) {\n    return \"\";\n  }\n  const startedAtMonth = getMonthFullName(startedAt);\n  const startedAtYear = startedAt.getFullYear().toString();\n\n  return doesShowYearOnly ? startedAtYear : `${startedAtMonth} ${startedAtYear}`;\n});\n\nconst formattedFinishedAt = computed<string>(() => {\n  const { finishedAt, doesShowYearOnly } = props;\n  if (finishedAt) {\n    const finishedAtYear = finishedAt.getFullYear().toString();\n\n    return doesShowYearOnly ? finishedAtYear : `${getMonthFullName(finishedAt)} ${finishedAtYear}`;\n  }\n  return t(\"shared.today\");\n});\n\nconst doesPeriodHaveTwoDates = computed<boolean>(() => !!formattedStartedAt.value);\n\nconst periodDatesAriaLabel = computed<string>(() => {\n  const { startedAt } = props;\n  if (props.periodDatesAriaLabel !== undefined) {\n    return props.periodDatesAriaLabel;\n  }\n  if (startedAt) {\n    return t(\"PeriodTimeline.periodDatesAriaLabel\", {\n      startedAt: formattedStartedAt.value,\n      finishedAt: formattedFinishedAt.value,\n    });\n  }\n  return t(\"PeriodTimeline.obtainedAtAriaLabel\", {\n    obtainedAt: formattedFinishedAt.value,\n  });\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.period-date {\n  font-size: 1.25rem;\n}\n.logo {\n  max-width: 180px;\n  max-height: 75px;\n  filter: brightness(0) invert(1);\n}\n</style>"
    },
    "app/composables/useDates.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "352",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/useDates.ts(7,22): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "147"
          ],
          "location": {
            "end": {
              "column": 2,
              "line": 16
            },
            "start": {
              "column": 38,
              "line": 7
            }
          }
        },
        {
          "id": "353",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/composables/useDates.ts(10,42): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "30",
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "41",
            "42",
            "43",
            "44",
            "147"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 14
            },
            "start": {
              "column": 52,
              "line": 10
            }
          }
        },
        {
          "id": "354",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "expected '01/01/2022 2022' to be 'janvier 2022' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 1,
          "static": false,
          "killedBy": [
            "30"
          ],
          "coveredBy": [
            "30",
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "41",
            "42",
            "43",
            "44",
            "147"
          ],
          "location": {
            "end": {
              "column": 83,
              "line": 11
            },
            "start": {
              "column": 66,
              "line": 11
            }
          }
        },
        {
          "id": "355",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "app/composables/useDates.ts(11,68): error TS2769: No overload matches this call.\n  Overload 1 of 2, '(locales?: LocalesArgument, options?: DateTimeFormatOptions | undefined): DateTimeFormat', gave the following error.\n    Type '\"\"' is not assignable to type '\"numeric\" | \"2-digit\" | \"long\" | \"short\" | \"narrow\" | undefined'.\n  Overload 2 of 2, '(locales?: string | string[] | undefined, options?: DateTimeFormatOptions | undefined): DateTimeFormat', gave the following error.\n    Type '\"\"' is not assignable to type '\"numeric\" | \"2-digit\" | \"long\" | \"short\" | \"narrow\" | undefined'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "30",
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "41",
            "42",
            "43",
            "44",
            "147"
          ],
          "location": {
            "end": {
              "column": 81,
              "line": 11
            },
            "start": {
              "column": 75,
              "line": 11
            }
          }
        },
        {
          "id": "356",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "app/composables/useDates.ts(15,3): error TS2741: Property 'getMonthFullName' is missing in type '{}' but required in type 'DatesComposable'.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31",
            "32",
            "33",
            "34",
            "35",
            "36",
            "37",
            "38",
            "39",
            "40",
            "41",
            "42",
            "43",
            "44",
            "147"
          ],
          "location": {
            "end": {
              "column": 30,
              "line": 15
            },
            "start": {
              "column": 10,
              "line": 15
            }
          }
        }
      ],
      "source": "import { useI18n } from \"#imports\";\n\ntype DatesComposable = {\n  getMonthFullName: (date: Date) => string;\n};\n\nfunction useDates(): DatesComposable {\n  const { locale } = useI18n();\n\n  const getMonthFullName = (date: Date): string => {\n    const dateTimeFormat = new Intl.DateTimeFormat(locale.value, { month: \"long\" });\n\n    return dateTimeFormat.format(date);\n  };\n  return { getMonthFullName };\n}\n\nexport { useDates };"
    },
    "app/models/company/company.constants.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "357",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 2,
              "line": 25
            },
            "start": {
              "column": 63,
              "line": 9
            }
          }
        },
        {
          "id": "358",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 14
            },
            "start": {
              "column": 13,
              "line": 10
            }
          }
        },
        {
          "id": "359",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 21,
              "line": 11
            },
            "start": {
              "column": 11,
              "line": 11
            }
          }
        },
        {
          "id": "360",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 45,
              "line": 12
            },
            "start": {
              "column": 10,
              "line": 12
            }
          }
        },
        {
          "id": "361",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 27,
              "line": 13
            },
            "start": {
              "column": 12,
              "line": 13
            }
          }
        },
        {
          "id": "362",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 19
            },
            "start": {
              "column": 11,
              "line": 15
            }
          }
        },
        {
          "id": "363",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 19,
              "line": 16
            },
            "start": {
              "column": 11,
              "line": 16
            }
          }
        },
        {
          "id": "364",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 45,
              "line": 17
            },
            "start": {
              "column": 10,
              "line": 17
            }
          }
        },
        {
          "id": "365",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 30,
              "line": 18
            },
            "start": {
              "column": 12,
              "line": 18
            }
          }
        },
        {
          "id": "366",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 24
            },
            "start": {
              "column": 10,
              "line": 20
            }
          }
        },
        {
          "id": "367",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 18,
              "line": 21
            },
            "start": {
              "column": 11,
              "line": 21
            }
          }
        },
        {
          "id": "368",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 33,
              "line": 22
            },
            "start": {
              "column": 10,
              "line": 22
            }
          }
        },
        {
          "id": "369",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 29,
              "line": 23
            },
            "start": {
              "column": 12,
              "line": 23
            }
          }
        }
      ],
      "source": "import type { CompanyName, Company } from \"~/models/company/company.types\";\n\nconst COMPANY_NAMES = [\n  \"SoBook\",\n  \"OhMyCode\",\n  \"Daveo\",\n] as const;\n\nconst COMPANIES: Record<CompanyName, Company> = Object.freeze({\n  OhMyCode: {\n    name: \"OhMyCode\",\n    url: \"https://www.sobook.fr/oh-my-code/\",\n    image: \"omc-logo.webp\",\n  },\n  SoBook: {\n    name: \"SoBook\",\n    url: \"https://www.sobook.fr/oh-my-code/\",\n    image: \"sobook-logo.webp\",\n  },\n  Daveo: {\n    name: \"Daveo\",\n    url: \"https://www.daveo.fr/\",\n    image: \"daveo-logo.webp\",\n  },\n});\n\nexport {\n  COMPANY_NAMES,\n  COMPANIES,\n};"
    },
    "app/models/period/period.class.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "370",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44",
            "142",
            "143",
            "144",
            "145",
            "146"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 12
            },
            "start": {
              "column": 44,
              "line": 6
            }
          }
        },
        {
          "id": "371",
          "mutatorName": "ArithmeticOperator",
          "replacement": "Period.getMonthsDifference(from, to) - firstMonth",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44",
            "142",
            "143",
            "144",
            "145",
            "146"
          ],
          "location": {
            "end": {
              "column": 67,
              "line": 9
            },
            "start": {
              "column": 18,
              "line": 9
            }
          }
        },
        {
          "id": "372",
          "mutatorName": "ArithmeticOperator",
          "replacement": "this.month * monthsInYear",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44",
            "142",
            "143",
            "144",
            "145",
            "146"
          ],
          "location": {
            "end": {
              "column": 53,
              "line": 10
            },
            "start": {
              "column": 28,
              "line": 10
            }
          }
        },
        {
          "id": "373",
          "mutatorName": "AssignmentOperator",
          "replacement": "this.month += this.year * monthsInYear",
          "statusReason": "expected '( shared.years, {\"yearCount\":2}, 2 sh…' to be '( shared.years, {\"yearCount\":2}, 2 sh…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44",
            "142",
            "143",
            "144",
            "145",
            "146"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 11
            },
            "start": {
              "column": 5,
              "line": 11
            }
          }
        },
        {
          "id": "374",
          "mutatorName": "ArithmeticOperator",
          "replacement": "this.year / monthsInYear",
          "statusReason": "expected '( shared.years, {\"yearCount\":2}, 2 sh…' to be '( shared.years, {\"yearCount\":2}, 2 sh…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44",
            "142",
            "143",
            "144",
            "145",
            "146"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 11
            },
            "start": {
              "column": 19,
              "line": 11
            }
          }
        },
        {
          "id": "375",
          "mutatorName": "BlockStatement",
          "replacement": "{}",
          "statusReason": "app/models/period/period.class.ts(14,61): error TS2355: A function whose declared type is neither 'undefined', 'void', nor 'any' must return a value.\n",
          "status": "CompileError",
          "static": false,
          "killedBy": [],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44",
            "142",
            "143",
            "144",
            "145",
            "146"
          ],
          "location": {
            "end": {
              "column": 4,
              "line": 18
            },
            "start": {
              "column": 68,
              "line": 14
            }
          }
        },
        {
          "id": "376",
          "mutatorName": "ArithmeticOperator",
          "replacement": "to.getMonth() - from.getMonth() - monthCountInYear * (to.getFullYear() - from.getFullYear())",
          "statusReason": "expected '( shared.years, {\"yearCount\":-2}, -2 …' to be '( shared.years, {\"yearCount\":2}, 2 sh…' // Object.is equality",
          "status": "Killed",
          "testsCompleted": 5,
          "static": false,
          "killedBy": [
            "38"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44",
            "142",
            "143",
            "144",
            "145",
            "146"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 17
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "377",
          "mutatorName": "ArithmeticOperator",
          "replacement": "to.getMonth() + from.getMonth()",
          "statusReason": "expected 2 to be 4 // Object.is equality",
          "status": "Killed",
          "testsCompleted": 14,
          "static": false,
          "killedBy": [
            "146"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44",
            "142",
            "143",
            "144",
            "145",
            "146"
          ],
          "location": {
            "end": {
              "column": 43,
              "line": 17
            },
            "start": {
              "column": 12,
              "line": 17
            }
          }
        },
        {
          "id": "378",
          "mutatorName": "ArithmeticOperator",
          "replacement": "monthCountInYear / (to.getFullYear() - from.getFullYear())",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44",
            "142",
            "143",
            "144",
            "145",
            "146"
          ],
          "location": {
            "end": {
              "column": 104,
              "line": 17
            },
            "start": {
              "column": 46,
              "line": 17
            }
          }
        },
        {
          "id": "379",
          "mutatorName": "ArithmeticOperator",
          "replacement": "to.getFullYear() + from.getFullYear()",
          "statusReason": "Snapshot `Period Timeline Component > Periods > Started at date > should match snapshot when started at date is provided in props. 1` mismatched",
          "status": "Killed",
          "testsCompleted": 2,
          "static": false,
          "killedBy": [
            "35"
          ],
          "coveredBy": [
            "33",
            "35",
            "36",
            "37",
            "38",
            "39",
            "42",
            "43",
            "44",
            "142",
            "143",
            "144",
            "145",
            "146"
          ],
          "location": {
            "end": {
              "column": 103,
              "line": 17
            },
            "start": {
              "column": 66,
              "line": 17
            }
          }
        }
      ],
      "source": "class Period {\n  public month: number;\n\n  public year: number;\n\n  public constructor(from: Date, to: Date) {\n    const firstMonth = 1;\n    const monthsInYear = 12;\n    this.month = Period.getMonthsDifference(from, to) + firstMonth;\n    this.year = Math.floor(this.month / monthsInYear);\n    this.month -= this.year * monthsInYear;\n  }\n\n  private static getMonthsDifference(from: Date, to: Date): number {\n    const monthCountInYear = 12;\n\n    return to.getMonth() - from.getMonth() + monthCountInYear * (to.getFullYear() - from.getFullYear());\n  }\n}\n\nexport { Period };"
    },
    "app/models/school/school.constants.ts": {
      "language": "typescript",
      "mutants": [
        {
          "id": "380",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 2,
              "line": 44
            },
            "start": {
              "column": 59,
              "line": 11
            }
          }
        },
        {
          "id": "381",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 17
            },
            "start": {
              "column": 10,
              "line": 12
            }
          }
        },
        {
          "id": "382",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 18,
              "line": 13
            },
            "start": {
              "column": 11,
              "line": 13
            }
          }
        },
        {
          "id": "383",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 32,
              "line": 14
            },
            "start": {
              "column": 11,
              "line": 14
            }
          }
        },
        {
          "id": "384",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 22,
              "line": 15
            },
            "start": {
              "column": 14,
              "line": 15
            }
          }
        },
        {
          "id": "385",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 54,
              "line": 16
            },
            "start": {
              "column": 10,
              "line": 16
            }
          }
        },
        {
          "id": "386",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 24
            },
            "start": {
              "column": 12,
              "line": 18
            }
          }
        },
        {
          "id": "387",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 20,
              "line": 19
            },
            "start": {
              "column": 11,
              "line": 19
            }
          }
        },
        {
          "id": "388",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 18,
              "line": 20
            },
            "start": {
              "column": 11,
              "line": 20
            }
          }
        },
        {
          "id": "389",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 22,
              "line": 21
            },
            "start": {
              "column": 14,
              "line": 21
            }
          }
        },
        {
          "id": "390",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 35,
              "line": 22
            },
            "start": {
              "column": 10,
              "line": 22
            }
          }
        },
        {
          "id": "391",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 31,
              "line": 23
            },
            "start": {
              "column": 12,
              "line": 23
            }
          }
        },
        {
          "id": "392",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 31
            },
            "start": {
              "column": 10,
              "line": 25
            }
          }
        },
        {
          "id": "393",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 18,
              "line": 26
            },
            "start": {
              "column": 11,
              "line": 26
            }
          }
        },
        {
          "id": "394",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 19,
              "line": 27
            },
            "start": {
              "column": 11,
              "line": 27
            }
          }
        },
        {
          "id": "395",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 22,
              "line": 28
            },
            "start": {
              "column": 14,
              "line": 28
            }
          }
        },
        {
          "id": "396",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 34,
              "line": 29
            },
            "start": {
              "column": 10,
              "line": 29
            }
          }
        },
        {
          "id": "397",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 29,
              "line": 30
            },
            "start": {
              "column": 12,
              "line": 30
            }
          }
        },
        {
          "id": "398",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 37
            },
            "start": {
              "column": 35,
              "line": 32
            }
          }
        },
        {
          "id": "399",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 43,
              "line": 33
            },
            "start": {
              "column": 11,
              "line": 33
            }
          }
        },
        {
          "id": "400",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 19,
              "line": 34
            },
            "start": {
              "column": 14,
              "line": 34
            }
          }
        },
        {
          "id": "401",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 32,
              "line": 35
            },
            "start": {
              "column": 10,
              "line": 35
            }
          }
        },
        {
          "id": "402",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 56,
              "line": 36
            },
            "start": {
              "column": 12,
              "line": 36
            }
          }
        },
        {
          "id": "403",
          "mutatorName": "ObjectLiteral",
          "replacement": "{}",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 4,
              "line": 43
            },
            "start": {
              "column": 11,
              "line": 38
            }
          }
        },
        {
          "id": "404",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 19,
              "line": 39
            },
            "start": {
              "column": 11,
              "line": 39
            }
          }
        },
        {
          "id": "405",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 19,
              "line": 40
            },
            "start": {
              "column": 14,
              "line": 40
            }
          }
        },
        {
          "id": "406",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 37,
              "line": 41
            },
            "start": {
              "column": 10,
              "line": 41
            }
          }
        },
        {
          "id": "407",
          "mutatorName": "StringLiteral",
          "replacement": "\"\"",
          "statusReason": "Static mutant (and \"ignoreStatic\" was enabled)",
          "status": "Ignored",
          "static": true,
          "coveredBy": [],
          "location": {
            "end": {
              "column": 45,
              "line": 42
            },
            "start": {
              "column": 12,
              "line": 42
            }
          }
        }
      ],
      "source": "import type { School, SchoolName } from \"~/models/school/school.types\";\n\nconst SCHOOL_NAMES = [\n  \"vimeu\",\n  \"epitech\",\n  \"laval\",\n  \"cloudNativeComputingFoundation\",\n  \"google\",\n] as const;\n\nconst SCHOOLS: Record<SchoolName, School> = Object.freeze({\n  vimeu: {\n    name: \"vimeu\",\n    city: \"Friville-Escarbotin\",\n    country: \"france\",\n    url: \"https://lycee-vimeu-friville.ac-amiens.fr/\",\n  },\n  epitech: {\n    name: \"epitech\",\n    city: \"Lille\",\n    country: \"france\",\n    url: \"https://www.epitech.eu/\",\n    image: \"epitech-logo.webp\",\n  },\n  laval: {\n    name: \"laval\",\n    city: \"Québec\",\n    country: \"canada\",\n    url: \"https://www.ulaval.ca/\",\n    image: \"laval-logo.webp\",\n  },\n  cloudNativeComputingFoundation: {\n    name: \"cloudNativeComputingFoundation\",\n    country: \"usa\",\n    url: \"https://www.cncf.io/\",\n    image: \"cloud-native-computed-foundation-logo.webp\",\n  },\n  google: {\n    name: \"google\",\n    country: \"usa\",\n    url: \"https://cloud.google.com/\",\n    image: \"google-cloud-platform-logo.webp\",\n  },\n});\n\nexport { SCHOOL_NAMES, SCHOOLS };"
    }
  },
  "schemaVersion": "1.0",
  "thresholds": {
    "high": 100,
    "low": 100,
    "break": 100
  },
  "testFiles": {
    "tests/unit/specs/components/MySkills/MySkills.nuxt.spec.ts": {
      "tests": [
        {
          "id": "0",
          "name": "My Skills Component should match snapshot when rendered."
        },
        {
          "id": "1",
          "name": "My Skills Component Skills should render 9 skills when rendered."
        },
        {
          "id": "2",
          "name": "My Skills Component Skills 'should render HTML skill when rendere…'"
        },
        {
          "id": "3",
          "name": "My Skills Component Skills 'should render CSS skill when rendered.'"
        },
        {
          "id": "4",
          "name": "My Skills Component Skills 'should render JavaScript skill when r…'"
        },
        {
          "id": "5",
          "name": "My Skills Component Skills 'should render TypeScript skill when r…'"
        },
        {
          "id": "6",
          "name": "My Skills Component Skills 'should render Vue.js skill when rende…'"
        },
        {
          "id": "7",
          "name": "My Skills Component Skills 'should render Nuxt.js skill when rend…'"
        },
        {
          "id": "8",
          "name": "My Skills Component Skills 'should render MySQL skill when render…'"
        },
        {
          "id": "9",
          "name": "My Skills Component Skills 'should render MongoDB skill when rend…'"
        },
        {
          "id": "10",
          "name": "My Skills Component Skills 'should render Rust skill when rendere…'"
        },
        {
          "id": "11",
          "name": "My Skills Component Tools should render 13 tools when rendered."
        },
        {
          "id": "12",
          "name": "My Skills Component Tools 'should render Linux skill when render…'"
        },
        {
          "id": "13",
          "name": "My Skills Component Tools 'should render Microservices skill whe…'"
        },
        {
          "id": "14",
          "name": "My Skills Component Tools 'should render Git skill when rendered.'"
        },
        {
          "id": "15",
          "name": "My Skills Component Tools 'should render code branch skills when…'"
        },
        {
          "id": "16",
          "name": "My Skills Component Tools 'should render GitHub Actions skills w…'"
        },
        {
          "id": "17",
          "name": "My Skills Component Tools 'should render NodeJs skills when rend…'"
        },
        {
          "id": "18",
          "name": "My Skills Component Tools 'should render CSS skills when rendere…'"
        },
        {
          "id": "19",
          "name": "My Skills Component Tools 'should render VueJS skills when rende…'"
        },
        {
          "id": "20",
          "name": "My Skills Component Tools 'should render NPM skills when rendere…'"
        },
        {
          "id": "21",
          "name": "My Skills Component Tools 'should render ESLint skills when rend…'"
        },
        {
          "id": "22",
          "name": "My Skills Component Tools 'should render Unit Tests skills when …'"
        },
        {
          "id": "23",
          "name": "My Skills Component Tools 'should render Open Source skills when…'"
        },
        {
          "id": "24",
          "name": "My Skills Component Tools 'should render Docker skills when rend…'"
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport { MySkills } from \"#components\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\nimport type MyTool from \"~/components/MySkills/MyTool/MyTool.vue\";\nimport type SkillProgressBar from \"~/components/MySkills/SkillProgressBar/SkillProgressBar.vue\";\nimport type { Skill } from \"~/models/skill/skill.types\";\nimport type { Tool } from \"~/models/tool/tool.types\";\n\ndescribe(\"My Skills Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof MySkills>>;\n\n  async function mountMySkillsComponent(options: ComponentMountingOptions<typeof MySkills> = {}): Promise<ReturnType<typeof mount<typeof MySkills>>> {\n    return mountSuspendedComponent(MySkills, { ...options });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountMySkillsComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Skills\", () => {\n    it(\"should render 9 skills when rendered.\", () => {\n      const skills = wrapper.findAllComponents<typeof SkillProgressBar>(\".skill\");\n\n      expect(skills).toHaveLength(9);\n    });\n\n    it.each<{\n      index: number;\n      name: string;\n      iconClasses: string;\n      color: string;\n      percent: string;\n      url: string;\n      test: string;\n    }>([\n      {\n        index: 0,\n        name: \"MySkills.html\",\n        iconClasses: \"fab fa-html5\",\n        color: \"#E44D27\",\n        percent: \"95%\",\n        url: \"https://fr.wikipedia.org/wiki/HTML5\",\n        test: \"should render HTML skill when rendered.\",\n      },\n      {\n        index: 1,\n        name: \"MySkills.css\",\n        iconClasses: \"fab fa-css3-alt\",\n        color: \"#0162B0\",\n        percent: \"90%\",\n        url: \"https://fr.wikipedia.org/wiki/Feuilles_de_style_en_cascade\",\n        test: \"should render CSS skill when rendered.\",\n      },\n      {\n        index: 2,\n        name: \"MySkills.javascript\",\n        iconClasses: \"fab fa-js\",\n        color: \"#EFC624\",\n        percent: \"95%\",\n        url: \"https://fr.wikipedia.org/wiki/JavaScript\",\n        test: \"should render JavaScript skill when rendered.\",\n      },\n      {\n        index: 3,\n        name: \"MySkills.typescript\",\n        iconClasses: \"fas fa-rocket\",\n        color: \"#3077C6\",\n        percent: \"85%\",\n        url: \"https://www.typescriptlang.org/\",\n        test: \"should render TypeScript skill when rendered.\",\n      },\n      {\n        index: 4,\n        name: \"MySkills.vue\",\n        iconClasses: \"fab fa-vuejs\",\n        color: \"#38956A\",\n        percent: \"95%\",\n        url: \"https://vuejs.org/\",\n        test: \"should render Vue.js skill when rendered.\",\n      },\n      {\n        index: 5,\n        name: \"MySkills.nuxt\",\n        iconClasses: \"fas fa-mountain-sun\",\n        color: \"#00DC81\",\n        percent: \"90%\",\n        url: \"https://v3.nuxtjs.org/\",\n        test: \"should render Nuxt.js skill when rendered.\",\n      },\n      {\n        index: 6,\n        name: \"MySkills.mysql\",\n        iconClasses: \"fas fa-database\",\n        color: \"#017395\",\n        percent: \"85%\",\n        url: \"https://www.mysql.com/fr/\",\n        test: \"should render MySQL skill when rendered.\",\n      },\n      {\n        index: 7,\n        name: \"MySkills.mongodb\",\n        iconClasses: \"fas fa-leaf\",\n        color: \"#4E9445\",\n        percent: \"90%\",\n        url: \"https://www.mongodb.com/\",\n        test: \"should render MongoDB skill when rendered.\",\n      },\n      {\n        index: 8,\n        name: \"MySkills.rust\",\n        iconClasses: \"fab fa-rust\",\n        color: \"#E3884F\",\n        percent: \"60%\",\n        url: \"https://www.rust-lang.org/\",\n        test: \"should render Rust skill when rendered.\",\n      },\n    ])(\"$test\", ({ index, name, iconClasses, color, percent, url }) => {\n      const skills = wrapper.findAllComponents<typeof SkillProgressBar>(\".skill\");\n      const expectedSkill: Skill = {\n        name,\n        iconClasses,\n        color,\n        percent,\n        url,\n      };\n\n      expect(skills[index].props(\"skill\")).toStrictEqual<Skill>(expectedSkill);\n    });\n  });\n\n  describe(\"Tools\", () => {\n    it(\"should render 13 tools when rendered.\", () => {\n      const tools = wrapper.findAllComponents<typeof MyTool>(\".tool\");\n\n      expect(tools).toHaveLength(13);\n    });\n\n    it.each<{\n      index: number;\n      description: string;\n      iconClasses: string;\n      color: string;\n      test: string;\n    }>([\n      {\n        index: 0,\n        description: \"MySkills.linuxForServers\",\n        iconClasses: \"fab fa-linux\",\n        color: \"#2C2C2C\",\n        test: \"should render Linux skill when rendered.\",\n      },\n      {\n        index: 1,\n        description: \"MySkills.microServicesArchitecture\",\n        iconClasses: \"fas fa-sitemap\",\n        color: \"#007EB8\",\n        test: \"should render Microservices skill when rendered.\",\n      },\n      {\n        index: 2,\n        description: \"MySkills.gitForVersionControl\",\n        iconClasses: \"fab fa-git\",\n        color: \"#F05033\",\n        test: \"should render Git skill when rendered.\",\n      },\n      {\n        index: 3,\n        description: \"MySkills.multipleEnvs\",\n        iconClasses: \"fas fa-code-branch\",\n        color: \"#6C757D\",\n        test: \"should render code branch skills when rendered.\",\n      },\n      {\n        index: 4,\n        description: \"MySkills.gitHubAndActions\",\n        iconClasses: \"fab fa-github \",\n        color: \"#000000\",\n        test: \"should render GitHub Actions skills when rendered.\",\n      },\n      {\n        index: 5,\n        description: \"MySkills.nodeJsForProjects\",\n        iconClasses: \"fab fa-node-js \",\n        color: \"#539E43\",\n        test: \"should render NodeJs skills when rendered.\",\n      },\n      {\n        index: 6,\n        description: \"MySkills.cssFrameworks\",\n        iconClasses: \"fab fa-css3-alt \",\n        color: \"#0162B0\",\n        test: \"should render CSS skills when rendered.\",\n      },\n      {\n        index: 7,\n        description: \"MySkills.vueJsWithNuxt\",\n        iconClasses: \"fab fa-vuejs\",\n        color: \"#38956A\",\n        test: \"should render VueJS skills when rendered.\",\n      },\n      {\n        index: 8,\n        description: \"MySkills.openSourceNpm\",\n        iconClasses: \"fab fa-npm\",\n        color: \"#C63635\",\n        test: \"should render NPM skills when rendered.\",\n      },\n      {\n        index: 9,\n        description: \"MySkills.esLintForGoodPractises\",\n        iconClasses: \"fas fa-spell-check\",\n        color: \"#00B819\",\n        test: \"should render ESLint skills when rendered.\",\n      },\n      {\n        index: 10,\n        description: \"MySkills.unitTests\",\n        iconClasses: \"fas fa-tasks\",\n        color: \"#35485E\",\n        test: \"should render Unit Tests skills when rendered.\",\n      },\n      {\n        index: 11,\n        description: \"MySkills.openSource\",\n        iconClasses: \"fas fa-hand-holding-heart\",\n        color: \"#C41B1B\",\n        test: \"should render Open Source skills when rendered.\",\n      },\n      {\n        index: 12,\n        description: \"MySkills.docker\",\n        iconClasses: \"fab fa-docker\",\n        color: \"#2F87E3\",\n        test: \"should render Docker skills when rendered.\",\n      },\n    ])(`$test`, ({ index, description, iconClasses, color }) => {\n      const tools = wrapper.findAllComponents<typeof MyTool>(\".tool\");\n      const expectedTool: Tool = {\n        description,\n        iconClasses,\n        color,\n      };\n\n      expect(tools[index].props(\"tool\")).toStrictEqual<Tool>(expectedTool);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/Period/PeriodTimeline.nuxt.spec.ts": {
      "tests": [
        {
          "id": "25",
          "name": "Period Timeline Component should match snapshot when rendered."
        },
        {
          "id": "26",
          "name": "Period Timeline Component Logo should set logo url to anchor when rendered."
        },
        {
          "id": "27",
          "name": "Period Timeline Component Logo should set logo image source when rendered."
        },
        {
          "id": "28",
          "name": "Period Timeline Component Periods Aria Label should set aria label from props when defined in props."
        },
        {
          "id": "29",
          "name": "Period Timeline Component Periods Finished at date should display finished at today formatted label when finished at is not provided in props."
        },
        {
          "id": "30",
          "name": "Period Timeline Component Periods Finished at date should display finished at formatted label when finished at is provided in props."
        },
        {
          "id": "31",
          "name": "Period Timeline Component Periods Finished at date should only display finished at year when showOnlyYear is true in props."
        },
        {
          "id": "32",
          "name": "Period Timeline Component Periods Arrow up icon should not display arrow up icon when period doesn't have two dates."
        },
        {
          "id": "33",
          "name": "Period Timeline Component Periods Arrow up icon should display arrow up icon when period has two dates."
        },
        {
          "id": "34",
          "name": "Period Timeline Component Periods Started at date should not display started at date when it is not provided in props."
        },
        {
          "id": "35",
          "name": "Period Timeline Component Periods Started at date should match snapshot when started at date is provided in props."
        },
        {
          "id": "36",
          "name": "Period Timeline Component Periods Started at date should display started at formatted label when started at is provided in props."
        },
        {
          "id": "37",
          "name": "Period Timeline Component Periods Started at date should only display started at year when showOnlyYear is true in props."
        },
        {
          "id": "38",
          "name": "Period Timeline Component Periods Period should display period formatted label when started at and finished at are provided in props."
        },
        {
          "id": "39",
          "name": "Period Timeline Component Periods Period should match snapshot when started at and finished at are provided in props."
        },
        {
          "id": "40",
          "name": "Period Timeline Component Periods Period should not display period formatted label when started at and finished at are not provided in props."
        },
        {
          "id": "41",
          "name": "Period Timeline Component Periods Period should not display period formatted label when started at is not provided in props."
        },
        {
          "id": "42",
          "name": "Period Timeline Component Periods Period should display only years when started at and finished at are exactly one year apart."
        },
        {
          "id": "43",
          "name": "Period Timeline Component Periods Period should display only months when started at and finished at are exactly one month apart."
        },
        {
          "id": "44",
          "name": "Period Timeline Component Periods Period should display years only when does show year only is true."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { NuxtImg } from \"#components\";\nimport PeriodTimeline from \"~/components/shared/Period/PeriodTimeline.vue\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\nimport type { PeriodTimelineProps } from \"~/components/shared/Period/period-timeline.types\";\nimport type WrappedFontAwesomeIcon from \"~/components/shared/Icons/WrappedFontAwesomeIcon/WrappedFontAwesomeIcon.vue\";\n\ndescribe(\"Period Timeline Component\", () => {\n  const defaultProps: PeriodTimelineProps = {\n    url: \"url\",\n    image: \"image\",\n    imageAlt: \"imageAlt\",\n  };\n  let wrapper: ReturnType<typeof mount<typeof PeriodTimeline>>;\n\n  async function mountPeriodTimelineComponent(options: ComponentMountingOptions<typeof PeriodTimeline> = {}): Promise<ReturnType<typeof mount<typeof PeriodTimeline>>> {\n    return mountSuspendedComponent(PeriodTimeline, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountPeriodTimelineComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Logo\", () => {\n    it(\"should set logo url to anchor when rendered.\", () => {\n      const logo = wrapper.find<HTMLAnchorElement>(\"#timeline-logo\");\n\n      expect(logo.attributes(\"href\")).toBe(\"url\");\n    });\n\n    it(\"should set logo image source when rendered.\", () => {\n      const logoImg = wrapper.findComponent<typeof NuxtImg>(\".timeline-logo-image\");\n\n      expect(logoImg.props(\"src\")).toBe(\"/images/logos/image\");\n    });\n  });\n\n  describe(\"Periods\", () => {\n    describe(\"Aria Label\", () => {\n      it(\"should set aria label from props when defined in props.\", async() => {\n        wrapper = await mountPeriodTimelineComponent({\n          props: {\n            ...defaultProps,\n            periodDatesAriaLabel: \"aria-label\",\n          },\n        });\n        const period = wrapper.find<HTMLDivElement>(\"#period-dates\");\n\n        expect(period.attributes(\"aria-label\")).toBe(\"aria-label\");\n      });\n    });\n\n    describe(\"Finished at date\", () => {\n      it(\"should display finished at today formatted label when finished at is not provided in props.\", () => {\n        const finishedAt = wrapper.find<HTMLDivElement>(\"#finished-at-date\");\n\n        expect(finishedAt.text()).toBe(\"shared.today\");\n      });\n\n      it(\"should display finished at formatted label when finished at is provided in props.\", async() => {\n        wrapper = await mountPeriodTimelineComponent({\n          props: {\n            ...defaultProps,\n            finishedAt: new Date(\"2022-01-01\"),\n          },\n        });\n        const finishedAt = wrapper.find<HTMLDivElement>(\"#finished-at-date\");\n\n        expect(finishedAt.text()).toBe(\"janvier 2022\");\n      });\n\n      it(\"should only display finished at year when showOnlyYear is true in props.\", async() => {\n        wrapper = await mountPeriodTimelineComponent({\n          props: {\n            ...defaultProps,\n            finishedAt: new Date(\"2022-01-01\"),\n            doesShowYearOnly: true,\n          },\n        });\n        const finishedAt = wrapper.find<HTMLDivElement>(\"#finished-at-date\");\n\n        expect(finishedAt.text()).toBe(\"2022\");\n      });\n    });\n\n    describe(\"Arrow up icon\", () => {\n      it(\"should not display arrow up icon when period doesn't have two dates.\", () => {\n        const arrowUp = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\"#arrow-up-icon\");\n\n        expect(arrowUp.exists()).toBeFalsy();\n      });\n\n      it(\"should display arrow up icon when period has two dates.\", async() => {\n        wrapper = await mountPeriodTimelineComponent({\n          props: {\n            ...defaultProps,\n            startedAt: new Date(\"2022-01-01\"),\n            finishedAt: new Date(\"2022-02-01\"),\n          },\n        });\n        const arrowUp = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\"#arrow-up-icon\");\n\n        expect(arrowUp.exists()).toBeTruthy();\n      });\n    });\n\n    describe(\"Started at date\", () => {\n      it(\"should not display started at date when it is not provided in props.\", () => {\n        const startedAt = wrapper.find<HTMLDivElement>(\"#started-at-date\");\n        const periodDates = wrapper.find<HTMLDivElement>(\"#period-dates\");\n\n        expect(startedAt.exists()).toBeFalsy();\n        expect((wrapper.vm as unknown as { formattedStartedAt: string }).formattedStartedAt).toBe(\"\");\n        expect(periodDates.text()).toBe(\"shared.today\");\n      });\n\n      it(\"should match snapshot when started at date is provided in props.\", async() => {\n        wrapper = await mountPeriodTimelineComponent({\n          props: {\n            ...defaultProps,\n            startedAt: new Date(\"2022-01-01\"),\n          },\n        });\n\n        expect(wrapper.html()).toMatchSnapshot();\n      });\n\n      it(\"should display started at formatted label when started at is provided in props.\", async() => {\n        wrapper = await mountPeriodTimelineComponent({\n          props: {\n            ...defaultProps,\n            startedAt: new Date(\"2022-01-01\"),\n          },\n        });\n        const startedAt = wrapper.find<HTMLDivElement>(\"#started-at-date\");\n\n        expect(startedAt.text()).toBe(\"janvier 2022\");\n      });\n\n      it(\"should only display started at year when showOnlyYear is true in props.\", async() => {\n        wrapper = await mountPeriodTimelineComponent({\n          props: {\n            ...defaultProps,\n            startedAt: new Date(\"2022-01-01\"),\n            doesShowYearOnly: true,\n          },\n        });\n        const startedAt = wrapper.find<HTMLDivElement>(\"#started-at-date\");\n\n        expect(startedAt.text()).toBe(\"2022\");\n      });\n    });\n\n    describe(\"Period\", () => {\n      it(\"should display period formatted label when started at and finished at are provided in props.\", async() => {\n        wrapper = await mountPeriodTimelineComponent({\n          props: {\n            ...defaultProps,\n            startedAt: new Date(\"2022-01-01\"),\n            finishedAt: new Date(\"2024-03-01\"),\n          },\n        });\n        const period = wrapper.find<HTMLDivElement>(\"#period-label\");\n\n        expect(period.text()).toBe(\"( shared.years, {\\\"yearCount\\\":2}, 2 shared.and shared.months, {\\\"monthCount\\\":3} )\");\n      });\n\n      it(\"should match snapshot when started at and finished at are provided in props.\", async() => {\n        wrapper = await mountPeriodTimelineComponent({\n          props: {\n            ...defaultProps,\n            startedAt: new Date(\"2022-01-01\"),\n            finishedAt: new Date(\"2024-03-01\"),\n          },\n        });\n\n        expect(wrapper.html()).toMatchSnapshot();\n      });\n\n      it(\"should not display period formatted label when started at and finished at are not provided in props.\", () => {\n        const period = wrapper.find<HTMLDivElement>(\"#period-label\");\n\n        expect(period.exists()).toBeFalsy();\n      });\n\n      it(\"should not display period formatted label when started at is not provided in props.\", async() => {\n        wrapper = await mountPeriodTimelineComponent({\n          props: {\n            ...defaultProps,\n            finishedAt: new Date(\"2024-03-01\"),\n          },\n        });\n        const period = wrapper.find<HTMLDivElement>(\"#period-label\");\n\n        expect(period.exists()).toBeFalsy();\n        expect((wrapper.vm as unknown as { formattedPeriod: string }).formattedPeriod).toBe(\"\");\n      });\n\n      it(\"should display only years when started at and finished at are exactly one year apart.\", async() => {\n        wrapper = await mountPeriodTimelineComponent({\n          props: {\n            ...defaultProps,\n            startedAt: new Date(\"2022-01-01\"),\n            finishedAt: new Date(\"2022-12-31\"),\n          },\n        });\n        const period = wrapper.find<HTMLDivElement>(\"#period-label\");\n\n        expect(period.text()).toBe(\"( shared.years, {\\\"yearCount\\\":1}, 1 )\");\n      });\n\n      it(\"should display only months when started at and finished at are exactly one month apart.\", async() => {\n        wrapper = await mountPeriodTimelineComponent({\n          props: {\n            ...defaultProps,\n            startedAt: new Date(\"2022-01-01\"),\n            finishedAt: new Date(\"2022-01-31\"),\n          },\n        });\n        const period = wrapper.find<HTMLDivElement>(\"#period-label\");\n\n        expect(period.text()).toBe(\"( shared.months, {\\\"monthCount\\\":1} )\");\n      });\n\n      it(\"should display years only when does show year only is true.\", async() => {\n        wrapper = await mountPeriodTimelineComponent({\n          props: {\n            ...defaultProps,\n            startedAt: new Date(\"2022-01-01\"),\n            finishedAt: new Date(\"2024-03-01\"),\n            doesShowYearOnly: true,\n          },\n        });\n        const period = wrapper.find<HTMLDivElement>(\"#period-label\");\n\n        expect(period.text()).toBe(\"( shared.years, {\\\"yearCount\\\":2}, 2 )\");\n      });\n    });\n  });\n});"
    },
    "tests/unit/specs/components/MyEducation/EducationDegreeCard/EducationDegreeCard.nuxt.spec.ts": {
      "tests": [
        {
          "id": "45",
          "name": "Education Degree Card Component should match snapshot when rendered."
        },
        {
          "id": "46",
          "name": "Education Degree Card Component Period Timeline should pass education degree started date when rendered."
        },
        {
          "id": "47",
          "name": "Education Degree Card Component Period Timeline should pass education degree obtained date when rendered."
        },
        {
          "id": "48",
          "name": "Education Degree Card Component Period Timeline should pass school image when rendered."
        },
        {
          "id": "49",
          "name": "Education Degree Card Component Period Timeline should pass school image alt as translated name when rendered."
        },
        {
          "id": "50",
          "name": "Education Degree Card Component Period Timeline should pass interrogative image alt when school translated name is not found."
        },
        {
          "id": "51",
          "name": "Education Degree Card Component Period Timeline should pass default school image when school image is not set in education degree."
        },
        {
          "id": "52",
          "name": "Education Degree Card Component Period Timeline should pass school url when rendered."
        },
        {
          "id": "53",
          "name": "Education Degree Card Component Degree should render degree name when rendered."
        },
        {
          "id": "54",
          "name": "Education Degree Card Component School should render school name with city when city is set in school props."
        },
        {
          "id": "55",
          "name": "Education Degree Card Component School should render school name without city when city is not set in school props."
        },
        {
          "id": "56",
          "name": "Education Degree Card Component School should render interrogative when school translated name is not found."
        },
        {
          "id": "57",
          "name": "Education Degree Card Component School should pass school country to country flag when rendered."
        },
        {
          "id": "58",
          "name": "Education Degree Card Component Paragraphs should render degree paragraphs when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type PeriodTimeline from \"~/components/shared/Period/PeriodTimeline.vue\";\nimport type { EducationDegreeCardProps } from \"~/components/MyEducation/EducationDegreeCard/education-degree-card.types\";\nimport EducationDegreeCard from \"~/components/MyEducation/EducationDegreeCard/EducationDegreeCard.vue\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\nimport type CountryFlag from \"~/components/shared/Images/CountryFlag/CountryFlag.vue\";\nimport { SCHOOLS } from \"~/models/school/school.constants\";\nimport type { EducationDegree } from \"~/models/education-degree/education-degree.types\";\n\ndescribe(\"Education Degree Card Component\", () => {\n  const defaultProps: EducationDegreeCardProps = {\n    educationDegree: {\n      degree: {\n        name: `Degrees.ITMasterDegree`,\n        description: [\"MyEducation.firstThreeYearsInEpitech\", \"MyEducation.lastYearsInEpitech\"],\n        startedAt: new Date(\"2014-01-01T00:00:00.000Z\"),\n        obtainedAt: new Date(\"2019-01-01T00:00:00.000Z\"),\n      },\n      school: {\n        ...SCHOOLS.epitech,\n        translatedName: `Schools.${SCHOOLS.epitech.name}`,\n      },\n    },\n  };\n  let wrapper: ReturnType<typeof mount<typeof EducationDegreeCard>>;\n\n  async function mountEducationDegreeCardComponent(options: ComponentMountingOptions<typeof EducationDegreeCard> = {}):\n  Promise<ReturnType<typeof mount<typeof EducationDegreeCard>>> {\n    return mountSuspendedComponent(EducationDegreeCard, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountEducationDegreeCardComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Period Timeline\", () => {\n    it(\"should pass education degree started date when rendered.\", () => {\n      const periodTimeline = wrapper.findComponent<typeof PeriodTimeline>(\".education-timeline\");\n\n      expect(periodTimeline.props(\"startedAt\")).toBe(defaultProps.educationDegree.degree.startedAt);\n    });\n\n    it(\"should pass education degree obtained date when rendered.\", () => {\n      const periodTimeline = wrapper.findComponent<typeof PeriodTimeline>(\".education-timeline\");\n\n      expect(periodTimeline.props(\"finishedAt\")).toBe(defaultProps.educationDegree.degree.obtainedAt);\n    });\n\n    it(\"should pass school image when rendered.\", () => {\n      const periodTimeline = wrapper.findComponent<typeof PeriodTimeline>(\".education-timeline\");\n\n      expect(periodTimeline.props(\"image\")).toBe(defaultProps.educationDegree.school.image);\n    });\n\n    it(\"should pass school image alt as translated name when rendered.\", () => {\n      const periodTimeline = wrapper.findComponent<typeof PeriodTimeline>(\".education-timeline\");\n\n      expect(periodTimeline.props(\"imageAlt\")).toBe(defaultProps.educationDegree.school.translatedName);\n    });\n\n    it(\"should pass interrogative image alt when school translated name is not found.\", async() => {\n      const educationDegreeWithoutTranslatedName: EducationDegree = {\n        ...defaultProps.educationDegree,\n        school: {\n          ...defaultProps.educationDegree.school,\n          translatedName: undefined,\n        },\n      };\n      wrapper = await mountEducationDegreeCardComponent({ props: { educationDegree: educationDegreeWithoutTranslatedName } });\n      const periodTimeline = wrapper.findComponent<typeof PeriodTimeline>(\".education-timeline\");\n\n      expect(periodTimeline.props(\"imageAlt\")).toBe(\"?\");\n    });\n\n    it(\"should pass default school image when school image is not set in education degree.\", async() => {\n      const educationDegreeWithoutImage: EducationDegree = {\n        ...defaultProps.educationDegree,\n        school: {\n          ...SCHOOLS.epitech,\n          image: undefined,\n        },\n      };\n      wrapper = await mountEducationDegreeCardComponent({ props: { educationDegree: educationDegreeWithoutImage } });\n      const periodTimeline = wrapper.findComponent<typeof PeriodTimeline>(\".education-timeline\");\n\n      expect(periodTimeline.props(\"image\")).toBe(\"college-icon.webp\");\n    });\n\n    it(\"should pass school url when rendered.\", () => {\n      const periodTimeline = wrapper.findComponent<typeof PeriodTimeline>(\".education-timeline\");\n\n      expect(periodTimeline.props(\"url\")).toBe(defaultProps.educationDegree.school.url);\n    });\n  });\n\n  describe(\"Degree\", () => {\n    it(\"should render degree name when rendered.\", () => {\n      const degreeName = wrapper.find<HTMLDivElement>(\".degree-name\");\n\n      expect(degreeName.text()).toBe(\"Degrees.ITMasterDegree\");\n    });\n  });\n\n  describe(\"School\", () => {\n    it(\"should render school name with city when city is set in school props.\", () => {\n      const schoolLabel = wrapper.find<HTMLDivElement>(\".school-name\");\n\n      expect(schoolLabel.text()).toBe(\"Schools.epitech, Lille\");\n    });\n\n    it(\"should render school name without city when city is not set in school props.\", async() => {\n      const educationDegreeWithoutCity: EducationDegree = {\n        ...defaultProps.educationDegree,\n        school: {\n          ...defaultProps.educationDegree.school,\n          city: undefined,\n        },\n      };\n      wrapper = await mountEducationDegreeCardComponent({ props: { educationDegree: educationDegreeWithoutCity } });\n      const schoolLabel = wrapper.find<HTMLDivElement>(\".school-name\");\n\n      expect(schoolLabel.text()).toBe(\"Schools.epitech\");\n    });\n\n    it(\"should render interrogative when school translated name is not found.\", async() => {\n      const educationDegreeWithoutTranslatedName: EducationDegree = {\n        ...defaultProps.educationDegree,\n        school: {\n          ...defaultProps.educationDegree.school,\n          translatedName: undefined,\n          city: undefined,\n        },\n      };\n      wrapper = await mountEducationDegreeCardComponent({ props: { educationDegree: educationDegreeWithoutTranslatedName } });\n      const schoolLabel = wrapper.find<HTMLDivElement>(\".school-name\");\n\n      expect(schoolLabel.text()).toBe(\"?\");\n    });\n\n    it(\"should pass school country to country flag when rendered.\", () => {\n      const countryFlag = wrapper.findComponent<typeof CountryFlag>(\".school-flag\");\n\n      expect(countryFlag.props(\"country\")).toBe(defaultProps.educationDegree.school.country);\n    });\n  });\n\n  describe(\"Paragraphs\", () => {\n    it(\"should render degree paragraphs when rendered.\", () => {\n      const degreeParagraphs = wrapper.findAll<HTMLParagraphElement>(\".degree-description\");\n\n      expect(degreeParagraphs).toHaveLength(2);\n      expect(degreeParagraphs[0].text()).toBe(\"MyEducation.firstThreeYearsInEpitech\");\n      expect(degreeParagraphs[1].text()).toBe(\"MyEducation.lastYearsInEpitech\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/AboutMe/AboutMyPersonalInfo/AboutMyPersonalInfo.nuxt.spec.ts": {
      "tests": [
        {
          "id": "59",
          "name": "AboutMyPersonalInfo Component should match snapshot when rendered."
        },
        {
          "id": "60",
          "name": "AboutMyPersonalInfo Component Age should render age when rendered."
        },
        {
          "id": "61",
          "name": "AboutMyPersonalInfo Component Phone Number should render formatted phone number when rendered."
        },
        {
          "id": "62",
          "name": "AboutMyPersonalInfo Component Phone Number should render ? when phone number in runtime config doesn't have a correct format."
        },
        {
          "id": "63",
          "name": "AboutMyPersonalInfo Component Address should render address when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport { mockNuxtImport } from \"@nuxt/test-utils/runtime\";\n\nimport { TEST_NUXT_RUNTIME_CONFIG } from \"@tests/unit/utils/constants/nuxt-test.constants\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\n\nimport AboutMyPersonalInfo from \"@/components/AboutMe/AboutMyPersonalInfo/AboutMyPersonalInfo.vue\";\n\nconst { useRuntimeConfig: mockedUseRuntimeConfig } = vi.hoisted(() => ({\n  useRuntimeConfig: vi.fn<() => typeof TEST_NUXT_RUNTIME_CONFIG>(() => TEST_NUXT_RUNTIME_CONFIG),\n}));\n\ndescribe(\"AboutMyPersonalInfo Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof AboutMyPersonalInfo>>;\n\n  async function mountAboutMyPersonalInfoComponent(options: ComponentMountingOptions<typeof AboutMyPersonalInfo> = {}):\n  Promise<ReturnType<typeof mount<typeof AboutMyPersonalInfo>>> {\n    return mountSuspendedComponent(AboutMyPersonalInfo, { ...options });\n  }\n\n  beforeAll(() => {\n    mockNuxtImport(\"useRuntimeConfig\", () => mockedUseRuntimeConfig);\n  });\n\n  beforeEach(async() => {\n    mockedUseRuntimeConfig.mockImplementation(() => TEST_NUXT_RUNTIME_CONFIG);\n    wrapper = await mountAboutMyPersonalInfoComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Age\", () => {\n    it(\"should render age when rendered.\", () => {\n      const age = wrapper.find<HTMLDivElement>(\"#age\");\n\n      expect(age.text()).toBe(\"25 ans\");\n    });\n  });\n\n  describe(\"Phone Number\", () => {\n    it(\"should render formatted phone number when rendered.\", () => {\n      const phoneNumber = wrapper.find<HTMLDivElement>(\"#phone-number\");\n\n      expect(phoneNumber.text()).toBe(\"01 23 45 67 89\");\n    });\n\n    it(\"should render ? when phone number in runtime config doesn't have a correct format.\", async() => {\n      mockedUseRuntimeConfig.mockImplementation(() => ({\n        public: {\n          ...TEST_NUXT_RUNTIME_CONFIG.public,\n          phoneNumber: \"o\",\n        },\n      }));\n      wrapper = await mountAboutMyPersonalInfoComponent();\n      const phoneNumber = wrapper.find<HTMLDivElement>(\"#phone-number\");\n\n      expect(phoneNumber.text()).toBe(\"?\");\n    });\n  });\n\n  describe(\"Address\", () => {\n    it(\"should render address when rendered.\", () => {\n      const address = wrapper.find<HTMLDivElement>(\"#address\");\n\n      expect(address.text()).toBe(\"1234 Elm Street\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/Icons/WrappedFontAwesomeIcon/WrappedFontAwesomeIcon.nuxt.spec.ts": {
      "tests": [
        {
          "id": "64",
          "name": "Wrapped Font Awesome Icon Component should match snapshot when rendered."
        },
        {
          "id": "65",
          "name": "Wrapped Font Awesome Icon Component Icon should pass icon when rendered."
        },
        {
          "id": "66",
          "name": "Wrapped Font Awesome Icon Component Icon should pass undefined size when it is not provided in props."
        },
        {
          "id": "67",
          "name": "Wrapped Font Awesome Icon Component Icon should pass provided size when it is provided in props."
        },
        {
          "id": "68",
          "name": "Wrapped Font Awesome Icon Component Icon should pass empty class when it is not provided in props."
        },
        {
          "id": "69",
          "name": "Wrapped Font Awesome Icon Component Icon should pass provided class when it is provided in props."
        },
        {
          "id": "70",
          "name": "Wrapped Font Awesome Icon Component Icon should set icon color to default when it is not provided in props."
        },
        {
          "id": "71",
          "name": "Wrapped Font Awesome Icon Component Icon should set icon color to provided color when it is provided in props."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { WrappedFontAwesomeIconProps } from \"~/components/shared/Icons/WrappedFontAwesomeIcon/wrapped-font-awesome-icon.types\";\nimport WrappedFontAwesomeIcon from \"~/components/shared/Icons/WrappedFontAwesomeIcon/WrappedFontAwesomeIcon.vue\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Wrapped Font Awesome Icon Component\", () => {\n  const defaultProps: WrappedFontAwesomeIconProps = {\n    icon: \"icon\",\n  };\n  let wrapper: ReturnType<typeof mount<typeof WrappedFontAwesomeIcon>>;\n\n  async function mountWrappedFontAwesomeIconComponent(options: ComponentMountingOptions<typeof WrappedFontAwesomeIcon> = {}):\n  Promise<ReturnType<typeof mount<typeof WrappedFontAwesomeIcon>>> {\n    return mountSuspendedComponent(WrappedFontAwesomeIcon, {\n      props: defaultProps,\n      global: {\n        stubs: {\n          ClientOnly: false,\n        },\n      },\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountWrappedFontAwesomeIconComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Icon\", () => {\n    it(\"should pass icon when rendered.\", () => {\n      const icon = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\".font-awesome-icon\");\n\n      expect(icon.props(\"icon\")).toBe(\"icon\");\n    });\n\n    it(\"should pass undefined size when it is not provided in props.\", () => {\n      const icon = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\".font-awesome-icon\");\n\n      expect(icon.attributes(\"size\")).toBeUndefined();\n    });\n\n    it(\"should pass provided size when it is provided in props.\", async() => {\n      wrapper = await mountWrappedFontAwesomeIconComponent({\n        props: {\n          ...defaultProps,\n          size: \"2x\",\n        },\n      });\n      const icon = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\".font-awesome-icon\");\n\n      expect(icon.props(\"size\")).toBe(\"2x\");\n    });\n\n    it(\"should pass empty class when it is not provided in props.\", () => {\n      const icon = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\".font-awesome-icon\");\n\n      expect(icon.attributes(\"class\")).toBe(\"font-awesome-icon\");\n    });\n\n    it(\"should pass provided class when it is provided in props.\", async() => {\n      wrapper = await mountWrappedFontAwesomeIconComponent({\n        props: {\n          ...defaultProps,\n          classes: \"test-class\",\n        },\n      });\n      const icon = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\".font-awesome-icon\");\n\n      expect(icon.attributes(\"class\")).toBe(\"font-awesome-icon test-class\");\n    });\n\n    it(\"should set icon color to default when it is not provided in props.\", () => {\n      const icon = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\".font-awesome-icon\");\n\n      expect(icon.attributes(\"style\")).toBe(\"color: #000000;\");\n    });\n\n    it(\"should set icon color to provided color when it is provided in props.\", async() => {\n      wrapper = await mountWrappedFontAwesomeIconComponent({\n        props: {\n          ...defaultProps,\n          iconColor: \"#FFFFFF\",\n        },\n      });\n      const icon = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\".font-awesome-icon\");\n\n      expect(icon.attributes(\"style\")).toBe(\"color: #FFFFFF;\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/MyExperience/ProfessionalExperienceCard/ProfessionalExperienceCard.nuxt.spec.ts": {
      "tests": [
        {
          "id": "72",
          "name": "Professional Experience Card Component should match snapshot when rendered."
        },
        {
          "id": "73",
          "name": "Professional Experience Card Component Period Timeline should pass job started date when rendered."
        },
        {
          "id": "74",
          "name": "Professional Experience Card Component Period Timeline should pass job finished date when rendered."
        },
        {
          "id": "75",
          "name": "Professional Experience Card Component Period Timeline should pass company image when rendered."
        },
        {
          "id": "76",
          "name": "Professional Experience Card Component Period Timeline should pass company url when rendered."
        },
        {
          "id": "77",
          "name": "Professional Experience Card Component Job should render job name when rendered."
        },
        {
          "id": "78",
          "name": "Professional Experience Card Component Job should render job description when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\nimport type { ProfessionalExperienceCardProps } from \"~/components/MyExperience/ProfessionalExperienceCard/professional-experience-card.types\";\nimport ProfessionalExperienceCard from \"~/components/MyExperience/ProfessionalExperienceCard/ProfessionalExperienceCard.vue\";\nimport type PeriodTimeline from \"~/components/shared/Period/PeriodTimeline.vue\";\nimport { COMPANIES } from \"~/models/company/company.constants\";\n\ndescribe(\"Professional Experience Card Component\", () => {\n  const defaultProps: ProfessionalExperienceCardProps = {\n    professionalExperience: {\n      job: {\n        name: \"MyExperience.internFullStackDeveloper\",\n        description: [\"MyExperience.distributionProject\", \"MyExperience.thisFinalInternship\"],\n        startedAt: new Date(\"2018-09-01T00:00:00.000Z\"),\n        finishedAt: new Date(\"2019-08-30T00:00:00.000Z\"),\n      },\n      company: COMPANIES.OhMyCode,\n    },\n  };\n  let wrapper: ReturnType<typeof mount<typeof ProfessionalExperienceCard>>;\n\n  async function mountProfessionalExperienceCardComponent(options: ComponentMountingOptions<typeof ProfessionalExperienceCard> = {}):\n  Promise<ReturnType<typeof mount<typeof ProfessionalExperienceCard>>> {\n    return mountSuspendedComponent(ProfessionalExperienceCard, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountProfessionalExperienceCardComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Period Timeline\", () => {\n    it(\"should pass job started date when rendered.\", () => {\n      const periodTimeline = wrapper.findComponent<typeof PeriodTimeline>(\".experience-timeline\");\n\n      expect(periodTimeline.props(\"startedAt\")).toBe(defaultProps.professionalExperience.job.startedAt);\n    });\n\n    it(\"should pass job finished date when rendered.\", () => {\n      const periodTimeline = wrapper.findComponent<typeof PeriodTimeline>(\".experience-timeline\");\n\n      expect(periodTimeline.props(\"finishedAt\")).toBe(defaultProps.professionalExperience.job.finishedAt);\n    });\n\n    it(\"should pass company image when rendered.\", () => {\n      const periodTimeline = wrapper.findComponent<typeof PeriodTimeline>(\".experience-timeline\");\n\n      expect(periodTimeline.props(\"image\")).toBe(defaultProps.professionalExperience.company.image);\n    });\n\n    it(\"should pass company url when rendered.\", () => {\n      const periodTimeline = wrapper.findComponent<typeof PeriodTimeline>(\".experience-timeline\");\n\n      expect(periodTimeline.props(\"url\")).toBe(defaultProps.professionalExperience.company.url);\n    });\n  });\n\n  describe(\"Job\", () => {\n    it(\"should render job name when rendered.\", () => {\n      const jobName = wrapper.find<HTMLDivElement>(\".job-name\");\n\n      expect(jobName.text()).toBe(\"MyExperience.internFullStackDeveloper\");\n    });\n\n    it(\"should render job description when rendered.\", () => {\n      const jobDescriptions = wrapper.findAll<HTMLParagraphElement>(\".job-description\");\n\n      expect(jobDescriptions).toHaveLength(2);\n      expect(jobDescriptions[0].text()).toBe(\"MyExperience.distributionProject\");\n      expect(jobDescriptions[1].text()).toBe(\"MyExperience.thisFinalInternship\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/Images/CountryFlag.nuxt.spec.ts": {
      "tests": [
        {
          "id": "79",
          "name": "Country Flag Component should match snapshot when rendered."
        },
        {
          "id": "80",
          "name": "Country Flag Component Flag should render France flag when country is France."
        },
        {
          "id": "81",
          "name": "Country Flag Component Flag 'should render France flag when countr…'"
        },
        {
          "id": "82",
          "name": "Country Flag Component Flag 'should render USA flag when country i…'"
        },
        {
          "id": "83",
          "name": "Country Flag Component Flag 'should render Canada flag when countr…'"
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type { NuxtImg } from \"#components\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\nimport type { CountryFlagProps } from \"~/components/shared/Images/CountryFlag/country-flag.types\";\nimport type { Country } from \"~/models/country/country.types\";\n\nimport CountryFlag from \"@/components/shared/Images/CountryFlag/CountryFlag.vue\";\n\ndescribe(\"Country Flag Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof CountryFlag>>;\n  const defaultProps: CountryFlagProps = {\n    country: \"france\",\n  };\n\n  async function mountCountryFlagComponent(options: ComponentMountingOptions<typeof CountryFlag> = {}): Promise<ReturnType<typeof mount<typeof CountryFlag>>> {\n    return mountSuspendedComponent(CountryFlag, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountCountryFlagComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Flag\", () => {\n    it(\"should render France flag when country is France.\", () => {\n      const flag = wrapper.findComponent<typeof NuxtImg>(\".country-flag\");\n\n      expect(flag.attributes(\"src\")).toBe(\"/images/flags/france-flag.webp\");\n    });\n\n    it.each<{\n      country: Country;\n      expectedFlag: string;\n      test: string;\n    }>([\n      {\n        country: \"france\",\n        expectedFlag: \"/images/flags/france-flag.webp\",\n        test: \"should render France flag when country is France.\",\n      },\n      {\n        country: \"usa\",\n        expectedFlag: \"/images/flags/usa-flag.webp\",\n        test: \"should render USA flag when country is USA.\",\n      },\n      {\n        country: \"canada\",\n        expectedFlag: \"/images/flags/canada-flag.webp\",\n        test: \"should render Canada flag when country is Canada.\",\n      },\n    ])(\"$test\", async({ country, expectedFlag }) => {\n      wrapper = await mountCountryFlagComponent({ props: { country } });\n      const flag = wrapper.findComponent<typeof NuxtImg>(\".country-flag\");\n\n      expect(flag.attributes(\"src\")).toBe(expectedFlag);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/MyExperience/MyExperience.nuxt.spec.ts": {
      "tests": [
        {
          "id": "84",
          "name": "My Experience Component should match snapshot when rendered."
        },
        {
          "id": "85",
          "name": "My Experience Component Experiences should render 6 experiences when rendered."
        },
        {
          "id": "86",
          "name": "My Experience Component Experiences should render fullstack developer experience card at Daveo when rendered."
        },
        {
          "id": "87",
          "name": "My Experience Component Experiences should render it engineer at OhMyCode when rendered."
        },
        {
          "id": "88",
          "name": "My Experience Component Experiences should render second intern at OhMyCode when rendered."
        },
        {
          "id": "89",
          "name": "My Experience Component Experiences should render first intern at OhMyCode when rendered."
        },
        {
          "id": "90",
          "name": "My Experience Component Experiences should render freelance developer at SoBook when rendered."
        },
        {
          "id": "91",
          "name": "My Experience Component Experiences should render first intern at SoBook when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type ProfessionalExperienceCard from \"~/components/MyExperience/ProfessionalExperienceCard/ProfessionalExperienceCard.vue\";\nimport { MyExperience } from \"#components\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\nimport { COMPANIES } from \"~/models/company/company.constants\";\nimport type { ProfessionalExperience } from \"~/models/professional-experience/professional-experience.types\";\n\ndescribe(\"My Experience Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof MyExperience>>;\n\n  async function mountMyExperienceComponent(options: ComponentMountingOptions<typeof MyExperience> = {}):\n  Promise<ReturnType<typeof mount<typeof MyExperience>>> {\n    return mountSuspendedComponent(MyExperience, { ...options });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountMyExperienceComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Experiences\", () => {\n    it(\"should render 6 experiences when rendered.\", () => {\n      const experiences = wrapper.findAllComponents<typeof ProfessionalExperienceCard>(\".professional-experience-card\");\n\n      expect(experiences).toHaveLength(6);\n    });\n\n    it(\"should render fullstack developer experience card at Daveo when rendered.\", () => {\n      const experiences = wrapper.findAllComponents<typeof ProfessionalExperienceCard>(\".professional-experience-card\");\n      const expectedExperience: ProfessionalExperience = {\n        company: COMPANIES.Daveo,\n        job: {\n          name: \"MyExperience.fullStackDeveloperConsultant\",\n          startedAt: new Date(\"2022-04-01\"),\n          description: [\n            \"MyExperience.iJoinedDaveo\",\n            \"MyExperience.whatIsConsulting\",\n            \"MyExperience.myMissionsAsConsultant\",\n            \"MyExperience.cloudProductCertifications\",\n            \"MyExperience.conferenceAndWorkshops\",\n          ],\n        },\n      };\n\n      expect(experiences[0].props(\"professionalExperience\")).toStrictEqual<ProfessionalExperience>(expectedExperience);\n    });\n\n    it(\"should render it engineer at OhMyCode when rendered.\", () => {\n      const experiences = wrapper.findAllComponents<typeof ProfessionalExperienceCard>(\".professional-experience-card\");\n      const expectedExperience: ProfessionalExperience = {\n        company: COMPANIES.OhMyCode,\n        job: {\n          name: \"MyExperience.itR&DEngineer\",\n          startedAt: new Date(\"2019-09-01\"),\n          finishedAt: new Date(\"2022-03-31\"),\n          description: [\n            \"MyExperience.firstPermanentContract\",\n            \"MyExperience.asProjectManager\",\n            \"MyExperience.softSkills\",\n            \"MyExperience.expertiseAndTechnicalSkills\",\n          ],\n        },\n      };\n\n      expect(experiences[1].props(\"professionalExperience\")).toStrictEqual<ProfessionalExperience>(expectedExperience);\n    });\n\n    it(\"should render second intern at OhMyCode when rendered.\", () => {\n      const experiences = wrapper.findAllComponents<typeof ProfessionalExperienceCard>(\".professional-experience-card\");\n      const expectedExperience: ProfessionalExperience = {\n        company: COMPANIES.OhMyCode,\n        job: {\n          name: \"MyExperience.internFullStackDeveloper\",\n          startedAt: new Date(\"2018-09-01\"),\n          finishedAt: new Date(\"2019-08-30\"),\n          description: [\n            \"MyExperience.distributionProject\",\n            \"MyExperience.thisFinalInternship\",\n          ],\n        },\n      };\n\n      expect(experiences[2].props(\"professionalExperience\")).toStrictEqual<ProfessionalExperience>(expectedExperience);\n    });\n\n    it(\"should render first intern at OhMyCode when rendered.\", () => {\n      const experiences = wrapper.findAllComponents<typeof ProfessionalExperienceCard>(\".professional-experience-card\");\n      const expectedExperience: ProfessionalExperience = {\n        company: COMPANIES.OhMyCode,\n        job: {\n          name: \"MyExperience.internFullStackDeveloper\",\n          startedAt: new Date(\"2016-09-01\"),\n          finishedAt: new Date(\"2017-04-30\"),\n          description: [\n            \"MyExperience.firstStepsInOhMyCode\",\n            \"MyExperience.allFunctionalitiesInOnApp\",\n          ],\n        },\n      };\n\n      expect(experiences[3].props(\"professionalExperience\")).toStrictEqual<ProfessionalExperience>(expectedExperience);\n    });\n\n    it(\"should render freelance developer at SoBook when rendered.\", () => {\n      const experiences = wrapper.findAllComponents<typeof ProfessionalExperienceCard>(\".professional-experience-card\");\n      const expectedExperience: ProfessionalExperience = {\n        company: COMPANIES.SoBook,\n        job: {\n          name: \"MyExperience.freelanceFullStackDeveloper\",\n          startedAt: new Date(\"2016-02-01\"),\n          finishedAt: new Date(\"2016-08-30\"),\n          description: [\n            \"MyExperience.reiterateAsFreelance\",\n            \"MyExperience.moreResponsibilities\",\n          ],\n        },\n      };\n\n      expect(experiences[4].props(\"professionalExperience\")).toStrictEqual<ProfessionalExperience>(expectedExperience);\n    });\n\n    it(\"should render first intern at SoBook when rendered.\", () => {\n      const experiences = wrapper.findAllComponents<typeof ProfessionalExperienceCard>(\".professional-experience-card\");\n      const expectedExperience: ProfessionalExperience = {\n        company: COMPANIES.SoBook,\n        job: {\n          name: \"MyExperience.internFullStackDeveloper\",\n          startedAt: new Date(\"2015-07-01\"),\n          finishedAt: new Date(\"2015-12-31\"),\n          description: [\"MyExperience.firstInternship\"],\n        },\n      };\n\n      expect(experiences[5].props(\"professionalExperience\")).toStrictEqual<ProfessionalExperience>(expectedExperience);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/MySkills/SkillProgressBar/SkillProgressBar.nuxt.spec.ts": {
      "tests": [
        {
          "id": "92",
          "name": "Skill Progress Bar Component should match snapshot when rendered."
        },
        {
          "id": "93",
          "name": "Skill Progress Bar Component Icon should pass skill icon when rendered."
        },
        {
          "id": "94",
          "name": "Skill Progress Bar Component Icon should pass skill color when rendered."
        },
        {
          "id": "95",
          "name": "Skill Progress Bar Component Skill should render skill name when rendered."
        },
        {
          "id": "96",
          "name": "Skill Progress Bar Component Skill should set skill url to anchor when rendered."
        },
        {
          "id": "97",
          "name": "Skill Progress Bar Component Progress Bar should set aria label to skill name and percent when rendered."
        },
        {
          "id": "98",
          "name": "Skill Progress Bar Component Progress Bar should set progress bar style when rendered."
        },
        {
          "id": "99",
          "name": "Skill Progress Bar Component Progress Bar should set progress bar percent in progress bar label when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\nimport type WrappedFontAwesomeIcon from \"~/components/shared/Icons/WrappedFontAwesomeIcon/WrappedFontAwesomeIcon.vue\";\nimport type { SkillProgressBarProps } from \"~/components/MySkills/SkillProgressBar/skill-progress-bar.types\";\nimport SkillProgressBar from \"~/components/MySkills/SkillProgressBar/SkillProgressBar.vue\";\n\ndescribe(\"Skill Progress Bar Component\", () => {\n  const defaultProps: SkillProgressBarProps = {\n    skill: {\n      name: \"MySkills.html\",\n      iconClasses: \"fab fa-html5\",\n      color: \"#E44D27\",\n      percent: \"95%\",\n      url: \"https://fr.wikipedia.org/wiki/HTML5\",\n    },\n  };\n  let wrapper: ReturnType<typeof mount<typeof SkillProgressBar>>;\n\n  async function mountSkillProgressBarComponent(options: ComponentMountingOptions<typeof SkillProgressBar> = {}):\n  Promise<ReturnType<typeof mount<typeof SkillProgressBar>>> {\n    return mountSuspendedComponent(SkillProgressBar, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountSkillProgressBarComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Icon\", () => {\n    it(\"should pass skill icon when rendered.\", () => {\n      const icon = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\".skill-icon\");\n\n      expect(icon.props(\"icon\")).toBe(defaultProps.skill.iconClasses);\n    });\n\n    it(\"should pass skill color when rendered.\", () => {\n      const icon = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\".skill-icon\");\n\n      expect(icon.props(\"iconColor\")).toBe(defaultProps.skill.color);\n    });\n  });\n\n  describe(\"Skill\", () => {\n    it(\"should render skill name when rendered.\", () => {\n      const skillName = wrapper.find<HTMLAnchorElement>(\".skill-name\");\n\n      expect(skillName.text()).toBe(defaultProps.skill.name);\n    });\n\n    it(\"should set skill url to anchor when rendered.\", () => {\n      const skillUrl = wrapper.find<HTMLAnchorElement>(\".skill-name\");\n\n      expect(skillUrl.attributes(\"href\")).toBe(defaultProps.skill.url);\n    });\n  });\n\n  describe(\"Progress Bar\", () => {\n    it(\"should set aria label to skill name and percent when rendered.\", () => {\n      const progressBar = wrapper.find<HTMLDivElement>(\".progress-bar\");\n\n      expect(progressBar.attributes(\"aria-label\")).toBe(\"SkillProgressBar.skillProgress, {\\\"skillName\\\":\\\"MySkills.html\\\",\\\"skillPercent\\\":\\\"95%\\\"}\");\n    });\n\n    it(\"should set progress bar style when rendered.\", () => {\n      const progressBar = wrapper.find<HTMLDivElement>(\".progress-bar\");\n      const expectedStyle = `width: ${defaultProps.skill.percent}; background-color: ${defaultProps.skill.color};`;\n\n      expect(progressBar.attributes(\"style\")).toBe(expectedStyle);\n    });\n\n    it(\"should set progress bar percent in progress bar label when rendered.\", () => {\n      const progressBarLabel = wrapper.find<HTMLDivElement>(\".progress-value\");\n\n      expect(progressBarLabel.text()).toBe(defaultProps.skill.percent);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/NavBar/NavBar.nuxt.spec.ts": {
      "tests": [
        {
          "id": "100",
          "name": "NavBar Component should match snapshot when rendered."
        },
        {
          "id": "101",
          "name": "NavBar Component Navigation should not have show class when rendered."
        },
        {
          "id": "102",
          "name": "NavBar Component Navigation should toggle show class when clicked on a navbar toggler."
        },
        {
          "id": "103",
          "name": "NavBar Component Navigation should remove show class when clicked on a navbar toggler after toggling."
        },
        {
          "id": "104",
          "name": "NavBar Component Navigation should remove show class when clicked on a nav link after toggling."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport { NavBar } from \"#components\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"NavBar Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof NavBar>>;\n\n  async function mountNavBarComponent(options: ComponentMountingOptions<typeof NavBar> = {}): Promise<ReturnType<typeof mount<typeof NavBar>>> {\n    return mountSuspendedComponent(NavBar, options);\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountNavBarComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Navigation\", () => {\n    it(\"should not have show class when rendered.\", () => {\n      const nav = wrapper.find<HTMLDivElement>(\"#navigation\");\n\n      expect(nav.classes()).not.toContain(\"show\");\n    });\n\n    it(\"should toggle show class when clicked on a navbar toggler.\", async() => {\n      const nav = wrapper.find<HTMLDivElement>(\"#navigation\");\n      const toggler = wrapper.find<HTMLButtonElement>(\".navbar-toggler\");\n      await toggler.trigger(\"click\");\n\n      expect(nav.classes()).toContain(\"show\");\n    });\n\n    it(\"should remove show class when clicked on a navbar toggler after toggling.\", async() => {\n      const nav = wrapper.find<HTMLDivElement>(\"#navigation\");\n      const toggler = wrapper.find<HTMLButtonElement>(\".navbar-toggler\");\n      await toggler.trigger(\"click\");\n      await toggler.trigger(\"click\");\n\n      expect(nav.classes()).not.toContain(\"show\");\n    });\n\n    it(\"should remove show class when clicked on a nav link after toggling.\", async() => {\n      const nav = wrapper.find<HTMLDivElement>(\"#navigation\");\n      const toggler = wrapper.find<HTMLButtonElement>(\".navbar-toggler\");\n      await toggler.trigger(\"click\");\n      const navLink = wrapper.find<HTMLAnchorElement>(\".nav-link\");\n      await navLink.trigger(\"click\");\n\n      expect(nav.classes()).not.toContain(\"show\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/MyPortfolio/MyPortfolio.nuxt.spec.ts": {
      "tests": [
        {
          "id": "105",
          "name": "My Portfolio Component should match snapshot when rendered."
        },
        {
          "id": "106",
          "name": "My Portfolio Component Projects should render 4 projects when rendered."
        },
        {
          "id": "107",
          "name": "My Portfolio Component Projects should render my portfolio project when rendered."
        },
        {
          "id": "108",
          "name": "My Portfolio Component Projects should render my Werewolves Assistant project when rendered."
        },
        {
          "id": "109",
          "name": "My Portfolio Component Projects should render book distribution project when rendered."
        },
        {
          "id": "110",
          "name": "My Portfolio Component Projects should render my GitHub profile project when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type MyProject from \"~/components/MyPortfolio/MyProject/MyProject.vue\";\nimport { MyPortfolio } from \"#components\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\nimport type { Project } from \"~/models/project/project.types\";\n\ndescribe(\"My Portfolio Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof MyPortfolio>>;\n\n  async function mountMyPortfolioComponent(options: ComponentMountingOptions<typeof MyPortfolio> = {}): Promise<ReturnType<typeof mount<typeof MyPortfolio>>> {\n    return mountSuspendedComponent(MyPortfolio, { ...options });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountMyPortfolioComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Projects\", () => {\n    it(\"should render 4 projects when rendered.\", () => {\n      const projects = wrapper.findAllComponents<typeof MyProject>(\".project\");\n\n      expect(projects).toHaveLength(4);\n    });\n\n    it(\"should render my portfolio project when rendered.\", () => {\n      const projects = wrapper.findAllComponents<typeof MyProject>(\".project\");\n      const expectedProject: Project = {\n        name: \"MyPortfolio.projects.portfolio.name\",\n        description: \"MyPortfolio.projects.portfolio.description\",\n        image: \"portfolio-thumbnail.webp\",\n        url: \"https://www.antoinezanardi.fr\",\n      };\n\n      expect(projects[0].props(\"project\")).toStrictEqual<Project>(expectedProject);\n    });\n\n    it(\"should render my Werewolves Assistant project when rendered.\", () => {\n      const projects = wrapper.findAllComponents<typeof MyProject>(\".project\");\n      const expectedProject: Project = {\n        name: \"MyPortfolio.projects.werewolvesAssistant.name\",\n        description: \"MyPortfolio.projects.werewolvesAssistant.description\",\n        image: \"werewolves-assistant-thumbnail.webp\",\n        url: \"https://werewolves-assistant.com\",\n      };\n\n      expect(projects[1].props(\"project\")).toStrictEqual<Project>(expectedProject);\n    });\n\n    it(\"should render book distribution project when rendered.\", () => {\n      const projects = wrapper.findAllComponents<typeof MyProject>(\".project\");\n      const expectedProject: Project = {\n        name: \"MyPortfolio.projects.distribution.name\",\n        description: \"MyPortfolio.projects.distribution.description\",\n        image: \"distribution-thumbnail.webp\",\n        url: \"https://www.airvey-editions.fr\",\n      };\n\n      expect(projects[2].props(\"project\")).toStrictEqual<Project>(expectedProject);\n    });\n\n    it(\"should render my GitHub profile project when rendered.\", () => {\n      const projects = wrapper.findAllComponents<typeof MyProject>(\".project\");\n      const expectedProject: Project = {\n        name: \"MyPortfolio.projects.gitHub.name\",\n        description: \"MyPortfolio.projects.gitHub.description\",\n        image: \"github.webp\",\n        url: \"https://github.com/antoinezanardi\",\n      };\n\n      expect(projects[3].props(\"project\")).toStrictEqual<Project>(expectedProject);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/shared/Layouts/SectionTitle/SectionTitle.nuxt.spec.ts": {
      "tests": [
        {
          "id": "111",
          "name": "Section Title Component should match snapshot when rendered."
        },
        {
          "id": "112",
          "name": "Section Title Component Icon should set icon source when rendered."
        },
        {
          "id": "113",
          "name": "Section Title Component Icon should set icon color to default when it is not provided in props."
        },
        {
          "id": "114",
          "name": "Section Title Component Icon should set icon color to provided color when it is provided in props."
        },
        {
          "id": "115",
          "name": "Section Title Component Title should set title when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport type WrappedFontAwesomeIcon from \"~/components/shared/Icons/WrappedFontAwesomeIcon/WrappedFontAwesomeIcon.vue\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\nimport type { SectionTitleProps } from \"~/components/shared/Layouts/SectionTitle/section-title.types\";\n\nimport SectionTitle from \"@/components/shared/Layouts/SectionTitle/SectionTitle.vue\";\n\ndescribe(\"Section Title Component\", () => {\n  const defaultProps: SectionTitleProps = {\n    icon: \"icon\",\n    title: \"title\",\n  };\n  let wrapper: ReturnType<typeof mount<typeof SectionTitle>>;\n\n  async function mountSectionTitleComponent(options: ComponentMountingOptions<typeof SectionTitle> = {}):\n  Promise<ReturnType<typeof mount<typeof SectionTitle>>> {\n    return mountSuspendedComponent(SectionTitle, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountSectionTitleComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Icon\", () => {\n    it(\"should set icon source when rendered.\", () => {\n      const icon = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\"#section-title-icon\");\n\n      expect(icon.props(\"icon\")).toBe(\"icon\");\n    });\n\n    it(\"should set icon color to default when it is not provided in props.\", () => {\n      const icon = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\"#section-title-icon\");\n\n      expect(icon.attributes(\"iconcolor\")).toBe(\"#000000\");\n    });\n\n    it(\"should set icon color to provided color when it is provided in props.\", async() => {\n      wrapper = await mountSectionTitleComponent({\n        props: {\n          ...defaultProps,\n          iconColor: \"#FFFFFF\",\n        },\n      });\n      const icon = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\"#section-title-icon\");\n\n      expect(icon.attributes(\"iconcolor\")).toBe(\"#FFFFFF\");\n    });\n  });\n\n  describe(\"Title\", () => {\n    it(\"should set title when rendered.\", () => {\n      const title = wrapper.find<HTMLSpanElement>(\".section-title-text\");\n\n      expect(title.text()).toBe(\"title\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/MySkills/MyTool/MyTool.nuxt.spec.ts": {
      "tests": [
        {
          "id": "116",
          "name": "My Tool Component should match snapshot when rendered."
        },
        {
          "id": "117",
          "name": "My Tool Component Tool Icon should pass icon classes when rendered."
        },
        {
          "id": "118",
          "name": "My Tool Component Tool Icon should pass tool color when rendered."
        },
        {
          "id": "119",
          "name": "My Tool Component Tool Icon should pass tool description when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\nimport type { MyToolProps } from \"~/components/MySkills/MyTool/my-tool.types\";\nimport MyTool from \"~/components/MySkills/MyTool/MyTool.vue\";\nimport type WrappedFontAwesomeIcon from \"~/components/shared/Icons/WrappedFontAwesomeIcon/WrappedFontAwesomeIcon.vue\";\n\ndescribe(\"My Tool Component\", () => {\n  const defaultProps: MyToolProps = {\n    tool: {\n      color: \"#3498db\",\n      description: \"MySkills.tools.vuejs\",\n      iconClasses: \"fab fa-vuejs\",\n    },\n  };\n  let wrapper: ReturnType<typeof mount<typeof MyTool>>;\n\n  async function mountMyToolComponent(options: ComponentMountingOptions<typeof MyTool> = {}): Promise<ReturnType<typeof mount<typeof MyTool>>> {\n    return mountSuspendedComponent(MyTool, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountMyToolComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Tool Icon\", () => {\n    it(\"should pass icon classes when rendered.\", () => {\n      const toolIcon = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\".tool\");\n\n      expect(toolIcon.attributes(\"icon\")).toBe(defaultProps.tool.iconClasses);\n    });\n\n    it(\"should pass tool color when rendered.\", () => {\n      const toolIcon = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\".tool\");\n\n      expect(toolIcon.attributes(\"iconcolor\")).toBe(defaultProps.tool.color);\n    });\n\n    it(\"should pass tool description when rendered.\", () => {\n      const toolIcon = wrapper.findComponent<typeof WrappedFontAwesomeIcon>(\".tool\");\n\n      expect(toolIcon.attributes(\"title\")).toBe(defaultProps.tool.description);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/MyPortfolio/MyProject/MyProject.nuxt.spec.ts": {
      "tests": [
        {
          "id": "120",
          "name": "My Project Component should match snapshot when rendered."
        },
        {
          "id": "121",
          "name": "My Project Component Image should set alt to project name when rendered."
        },
        {
          "id": "122",
          "name": "My Project Component Image should set image source when rendered."
        },
        {
          "id": "123",
          "name": "My Project Component Project should render project name when rendered."
        },
        {
          "id": "124",
          "name": "My Project Component Project should render project description when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\nimport MyProject from \"~/components/MyPortfolio/MyProject/MyProject.vue\";\nimport type { MyProjectProps } from \"~/components/MyPortfolio/MyProject/my-project.types\";\nimport type { NuxtImg } from \"#components\";\n\ndescribe(\"My Project Component\", () => {\n  const defaultProps: MyProjectProps = {\n    project: {\n      name: \"MyPortfolio.projects.portfolio.name\",\n      description: \"MyPortfolio.projects.portfolio.description\",\n      image: \"portfolio-thumbnail.webp\",\n      url: \"https://www.antoinezanardi.fr\",\n    },\n  };\n  let wrapper: ReturnType<typeof mount<typeof MyProject>>;\n\n  async function mountMyProjectComponent(options: ComponentMountingOptions<typeof MyProject> = {}): Promise<ReturnType<typeof mount<typeof MyProject>>> {\n    return mountSuspendedComponent(MyProject, {\n      props: defaultProps,\n      ...options,\n    });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountMyProjectComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Image\", () => {\n    it(\"should set alt to project name when rendered.\", () => {\n      const image = wrapper.findComponent<typeof NuxtImg>(\".project-image\");\n\n      expect(image.attributes(\"alt\")).toBe(defaultProps.project.name);\n    });\n\n    it(\"should set image source when rendered.\", () => {\n      const image = wrapper.findComponent<typeof NuxtImg>(\".project-image\");\n\n      expect(image.props(\"src\")).toBe(\"/images/projects/portfolio-thumbnail.webp\");\n    });\n  });\n\n  describe(\"Project\", () => {\n    it(\"should render project name when rendered.\", () => {\n      const projectName = wrapper.find<HTMLHeadingElement>(\".project-name\");\n\n      expect(projectName.text()).toBe(\"MyPortfolio.projects.portfolio.name\");\n    });\n\n    it(\"should render project description when rendered.\", () => {\n      const projectDescription = wrapper.find<HTMLParagraphElement>(\".project-desc\");\n\n      expect(projectDescription.text()).toBe(\"MyPortfolio.projects.portfolio.description\");\n    });\n  });\n});"
    },
    "tests/unit/specs/components/PageFooter/PageFooter.nuxt.spec.ts": {
      "tests": [
        {
          "id": "125",
          "name": "Page Footer Component should match snapshot when rendered."
        },
        {
          "id": "126",
          "name": "Page Footer Component Text should display Antoine ZANARDI and full year when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport { PageFooter } from \"#components\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"Page Footer Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof PageFooter>>;\n\n  async function mountPageFooterComponent(options: ComponentMountingOptions<typeof PageFooter> = {}): Promise<ReturnType<typeof mount<typeof PageFooter>>> {\n    return mountSuspendedComponent(PageFooter, { ...options });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountPageFooterComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Text\", () => {\n    it(\"should display Antoine ZANARDI and full year when rendered.\", () => {\n      const title = wrapper.find<HTMLDivElement>(\".title\");\n\n      expect(title.text()).toBe(\"Antoine Zanardi - 2022\");\n    });\n  });\n});"
    },
    "tests/unit/specs/app.nuxt.spec.ts": {
      "tests": [
        {
          "id": "127",
          "name": "App Component should match snapshot when rendered."
        },
        {
          "id": "128",
          "name": "App Component should use head for sso purposes when rendered."
        },
        {
          "id": "129",
          "name": "App Component should stamp a comment in HTML when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\nimport { stampInHtml } from \"dev-stamp\";\n\nimport App from \"@/App.vue\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\n\nvi.mock(\"dev-stamp\");\n\ndescribe(\"App Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof App>>;\n\n  async function mountAppComponent(options: ComponentMountingOptions<typeof App> = {}): Promise<ReturnType<typeof mount<typeof App>>> {\n    return mountSuspendedComponent(App, { ...options });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountAppComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  it(\"should use head for sso purposes when rendered.\", () => {\n    const expectedUseHeadAttribute = {\n      title: \"Antoine ZANARDI\",\n      meta: [{ name: \"description\", content: \"App.meta.description\" }],\n      htmlAttrs: { lang: \"fr\" },\n    };\n\n    expect(useHead).toHaveBeenCalledExactlyOnceWith(expectedUseHeadAttribute);\n  });\n\n  it(\"should stamp a comment in HTML when rendered.\", () => {\n    const expectedComment = \"👋 Hey ! J'ai aussi créé 💮 `dev-stamp` qui a généré ce message ! Retrouvez le sur GitHub ou npm !\";\n\n    expect(stampInHtml).toHaveBeenCalledExactlyOnceWith(expectedComment);\n  });\n});"
    },
    "tests/unit/specs/components/shared/Buttons/LinkedInButton.nuxt.spec.ts": {
      "tests": [
        {
          "id": "130",
          "name": "LinkedIn Button Component should match snapshot when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\n\nimport LinkedInButton from \"@/components/shared/Buttons/LinkedInButton.vue\";\n\ndescribe(\"LinkedIn Button Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof LinkedInButton>>;\n\n  async function mountLinkedInButtonComponent(options: ComponentMountingOptions<typeof LinkedInButton> = {}):\n  Promise<ReturnType<typeof mount<typeof LinkedInButton>>> {\n    return mountSuspendedComponent(LinkedInButton, { ...options });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountLinkedInButtonComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/components/MyEducation/MyEducation.nuxt.spec.ts": {
      "tests": [
        {
          "id": "131",
          "name": "MyEducation Component should match snapshot when rendered."
        },
        {
          "id": "132",
          "name": "MyEducation Component Education Degrees should render 5 education degree cards when rendered."
        },
        {
          "id": "133",
          "name": "MyEducation Component Education Degrees should render GCP ACE education degree card when rendered."
        },
        {
          "id": "134",
          "name": "MyEducation Component Education Degrees should render CKAD education degree card when rendered."
        },
        {
          "id": "135",
          "name": "MyEducation Component Education Degrees should render IT Master degree card when rendered."
        },
        {
          "id": "136",
          "name": "MyEducation Component Education Degrees should render IT certification degree card when rendered."
        },
        {
          "id": "137",
          "name": "MyEducation Component Education Degrees should render high school degree card when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport { MyEducation } from \"#components\";\nimport type EducationDegreeCard from \"~/components/MyEducation/EducationDegreeCard/EducationDegreeCard.vue\";\nimport { SCHOOLS } from \"~/models/school/school.constants\";\nimport type { EducationDegree } from \"~/models/education-degree/education-degree.types\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"MyEducation Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof MyEducation>>;\n\n  async function mountMyEducationComponent(options: ComponentMountingOptions<typeof MyEducation> = {}): Promise<ReturnType<typeof mount<typeof MyEducation>>> {\n    return mountSuspendedComponent(MyEducation, { ...options });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountMyEducationComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n\n  describe(\"Education Degrees\", () => {\n    it(\"should render 5 education degree cards when rendered.\", () => {\n      const educationDegreeCards = wrapper.findAllComponents<typeof EducationDegreeCard>(\".education-degree-card\");\n\n      expect(educationDegreeCards).toHaveLength(5);\n    });\n\n    it(\"should render GCP ACE education degree card when rendered.\", () => {\n      const educationDegreeCards = wrapper.findAllComponents<typeof EducationDegreeCard>(\".education-degree-card\");\n      const expectedEducationDegree: EducationDegree = {\n        degree: {\n          name: `Degrees.gcpACE`,\n          description: [\"MyEducation.gcpACECertification\"],\n          obtainedAt: new Date(\"2022-12-01\"),\n        },\n        school: {\n          ...SCHOOLS.google,\n          translatedName: `Schools.${SCHOOLS.google.name}`,\n        },\n      };\n\n      expect(educationDegreeCards[0].props(\"educationDegree\")).toStrictEqual<EducationDegree>(expectedEducationDegree);\n    });\n\n    it(\"should render CKAD education degree card when rendered.\", () => {\n      const educationDegreeCards = wrapper.findAllComponents<typeof EducationDegreeCard>(\".education-degree-card\");\n      const expectedEducationDegree: EducationDegree = {\n        degree: {\n          name: `Degrees.CKAD`,\n          description: [\"MyEducation.kubernetesCertification\"],\n          obtainedAt: new Date(\"2022-08-01\"),\n        },\n        school: {\n          ...SCHOOLS.cloudNativeComputingFoundation,\n          translatedName: `Schools.${SCHOOLS.cloudNativeComputingFoundation.name}`,\n        },\n      };\n\n      expect(educationDegreeCards[1].props(\"educationDegree\")).toStrictEqual<EducationDegree>(expectedEducationDegree);\n    });\n\n    it(\"should render IT Master degree card when rendered.\", () => {\n      const educationDegreeCards = wrapper.findAllComponents<typeof EducationDegreeCard>(\".education-degree-card\");\n      const expectedEducationDegree: EducationDegree = {\n        degree: {\n          name: `Degrees.ITMasterDegree`,\n          description: [\"MyEducation.firstThreeYearsInEpitech\", \"MyEducation.lastYearsInEpitech\"],\n          startedAt: new Date(\"2014-01-01\"),\n          obtainedAt: new Date(\"2019-01-01\"),\n        },\n        school: {\n          ...SCHOOLS.epitech,\n          translatedName: `Schools.${SCHOOLS.epitech.name}`,\n        },\n      };\n\n      expect(educationDegreeCards[2].props(\"educationDegree\")).toStrictEqual<EducationDegree>(expectedEducationDegree);\n    });\n\n    it(\"should render IT certification degree card when rendered.\", () => {\n      const educationDegreeCards = wrapper.findAllComponents<typeof EducationDegreeCard>(\".education-degree-card\");\n      const expectedEducationDegree: EducationDegree = {\n        degree: {\n          name: `Degrees.ITCertification`,\n          description: [\"MyEducation.internationalExperienceForManagement\", \"MyEducation.softManagementSkills\"],\n          startedAt: new Date(\"2017-01-01\"),\n          obtainedAt: new Date(\"2018-01-01\"),\n        },\n        school: {\n          ...SCHOOLS.laval,\n          translatedName: `Schools.${SCHOOLS.laval.name}`,\n        },\n      };\n\n      expect(educationDegreeCards[3].props(\"educationDegree\")).toStrictEqual<EducationDegree>(expectedEducationDegree);\n    });\n\n    it(\"should render high school degree card when rendered.\", () => {\n      const educationDegreeCards = wrapper.findAllComponents<typeof EducationDegreeCard>(\".education-degree-card\");\n      const expectedEducationDegree: EducationDegree = {\n        degree: {\n          name: `Degrees.highSchoolDiploma`,\n          description: [\"MyEducation.scientistHighSchoolDiploma\"],\n          startedAt: new Date(\"2011-01-01\"),\n          obtainedAt: new Date(\"2014-01-01\"),\n        },\n        school: {\n          ...SCHOOLS.vimeu,\n          translatedName: `Schools.${SCHOOLS.vimeu.name}`,\n        },\n      };\n\n      expect(educationDegreeCards[4].props(\"educationDegree\")).toStrictEqual<EducationDegree>(expectedEducationDegree);\n    });\n  });\n});"
    },
    "tests/unit/specs/components/MyProfile/MyProfile.nuxt.spec.ts": {
      "tests": [
        {
          "id": "138",
          "name": "My Profile Component should match snapshot when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport { MyProfile } from \"#components\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"My Profile Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof MyProfile>>;\n\n  async function mountMyProfileComponent(options: ComponentMountingOptions<typeof MyProfile> = {}): Promise<ReturnType<typeof mount<typeof MyProfile>>> {\n    return mountSuspendedComponent(MyProfile, { ...options });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountMyProfileComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/components/AboutMe/AboutMyProfile/AboutMyProfile.nuxt.spec.ts": {
      "tests": [
        {
          "id": "139",
          "name": "AboutMyProfile Component should match snapshot when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\n\nimport AboutMyProfile from \"@/components/AboutMe/AboutMyProfile/AboutMyProfile.vue\";\n\ndescribe(\"AboutMyProfile Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof AboutMyProfile>>;\n\n  async function mountAboutMyProfileComponent(options: ComponentMountingOptions<typeof AboutMyProfile> = {}): Promise<ReturnType<typeof mount<typeof AboutMyProfile>>> {\n    return mountSuspendedComponent(AboutMyProfile, { ...options });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountAboutMyProfileComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/components/shared/Buttons/GitHubButton.nuxt.spec.ts": {
      "tests": [
        {
          "id": "140",
          "name": "GitHub Button Component should match snapshot when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\n\nimport GitHubButton from \"@/components/shared/Buttons/GitHubButton.vue\";\n\ndescribe(\"GitHub Button Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof GitHubButton>>;\n\n  async function mountGitHubButtonComponent(options: ComponentMountingOptions<typeof GitHubButton> = {}): Promise<ReturnType<typeof mount<typeof GitHubButton>>> {\n    return mountSuspendedComponent(GitHubButton, { ...options });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountGitHubButtonComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/components/AboutMe/AboutMe.nuxt.spec.ts": {
      "tests": [
        {
          "id": "141",
          "name": "About Me Component should match snapshot when rendered."
        }
      ],
      "source": "import type { mount } from \"@vue/test-utils\";\nimport type { ComponentMountingOptions } from \"@vue/test-utils/dist/mount\";\n\nimport { AboutMe } from \"#components\";\nimport { mountSuspendedComponent } from \"@tests/unit/utils/helpers/mount.helpers\";\n\ndescribe(\"About Me Component\", () => {\n  let wrapper: ReturnType<typeof mount<typeof AboutMe>>;\n\n  async function mountAboutMeComponent(options: ComponentMountingOptions<typeof AboutMe> = {}): Promise<ReturnType<typeof mount<typeof AboutMe>>> {\n    return mountSuspendedComponent(AboutMe, { ...options });\n  }\n\n  beforeEach(async() => {\n    wrapper = await mountAboutMeComponent();\n  });\n\n  it(\"should match snapshot when rendered.\", () => {\n    expect(wrapper).toBeTruthy();\n    expect(wrapper.html()).toMatchSnapshot();\n  });\n});"
    },
    "tests/unit/specs/models/period/period.class.spec.ts": {
      "tests": [
        {
          "id": "142",
          "name": "Period Class constructor should set month and year properties when there are only 2 months."
        },
        {
          "id": "143",
          "name": "Period Class constructor should set month and year properties when there are 13 months."
        },
        {
          "id": "144",
          "name": "Period Class constructor should set month and year properties when there are 25 months."
        },
        {
          "id": "145",
          "name": "Period Class constructor should set only year property when there are 12 months."
        },
        {
          "id": "146",
          "name": "Period Class constructor should set only month property when there are 4 months."
        }
      ],
      "source": "import { Period } from \"~/models/period/period.class\";\n\ndescribe(\"Period Class\", () => {\n  describe(\"constructor\", () => {\n    it(\"should set month and year properties when there are only 2 months.\", () => {\n      const period = new Period(new Date(\"2022-01-01\"), new Date(\"2022-02-01\"));\n\n      expect(period.month).toBe(2);\n      expect(period.year).toBe(0);\n    });\n\n    it(\"should set month and year properties when there are 13 months.\", () => {\n      const period = new Period(new Date(\"2022-01-01\"), new Date(\"2023-02-01\"));\n\n      expect(period.month).toBe(2);\n      expect(period.year).toBe(1);\n    });\n\n    it(\"should set month and year properties when there are 25 months.\", () => {\n      const period = new Period(new Date(\"2022-01-01\"), new Date(\"2024-02-01\"));\n\n      expect(period.month).toBe(2);\n      expect(period.year).toBe(2);\n    });\n\n    it(\"should set only year property when there are 12 months.\", () => {\n      const period = new Period(new Date(\"2022-01-01\"), new Date(\"2022-12-31\"));\n\n      expect(period.month).toBe(0);\n      expect(period.year).toBe(1);\n    });\n\n    it(\"should set only month property when there are 4 months.\", () => {\n      const period = new Period(new Date(\"2022-12-24\"), new Date(\"2023-03-24\"));\n\n      expect(period.month).toBe(4);\n      expect(period.year).toBe(0);\n    });\n  });\n});"
    },
    "tests/unit/specs/composables/useDates.spec.ts": {
      "tests": [
        {
          "id": "147",
          "name": "Use Dates Composable getMonthFullName should return the full month name when called."
        }
      ],
      "source": "import { useDates } from \"~/composables/useDates\";\n\ndescribe(\"Use Dates Composable\", () => {\n  describe(\"getMonthFullName\", () => {\n    it(\"should return the full month name when called.\", () => {\n      const date = new Date(\"2021-01-01\");\n      const expectedMonthFullName = \"janvier\";\n      const { getMonthFullName } = useDates();\n      const result = getMonthFullName(date);\n\n      expect(result).toBe(expectedMonthFullName);\n    });\n  });\n});"
    }
  },
  "projectRoot": "/Users/antoinezanardi/WebstormProjects/antoinezanardi.fr",
  "config": {
    "cleanTempDir": "always",
    "incremental": true,
    "incrementalFile": "tests/stryker/incremental/incremental.json",
    "checkers": [
      "typescript"
    ],
    "tsconfigFile": "tsconfig.json",
    "testRunner": "vitest",
    "ignoreStatic": true,
    "mutate": [
      "app/App.vue",
      "app/**/*.{ts,vue}",
      "!app/utils/**/*.constants.ts",
      "!app/plugins/**/*.ts"
    ],
    "plugins": [
      "@stryker-mutator/vitest-runner",
      "@stryker-mutator/typescript-checker",
      "./config/stryker/plugins/stryker-define-props-ignorer-plugin.mjs",
      "./config/stryker/plugins/stryker-define-emits-ignorer-plugin.mjs",
      "./config/stryker/plugins/stryker-define-page-meta-ignorer-plugin.mjs",
      "./config/stryker/plugins/stryker-define-model-ignorer-plugin.mjs",
      "./config/stryker/plugins/stryker-define-expose-ignorer-plugin.mjs"
    ],
    "ignorers": [
      "defineProps",
      "defineEmits",
      "definePageMeta",
      "defineModel",
      "defineExpose"
    ],
    "ignorePatterns": [
      "!.nuxt/",
      ".github/",
      ".husky/",
      ".output/",
      ".run/",
      ".idea/",
      "dist",
      "config/commitlint",
      "config/cucumber",
      "config/eslint",
      "config/lint-staged",
      "config/stryker",
      "tests/acceptance",
      "tests/stryker",
      "tests/unit/coverage",
      "scripts/",
      "server/",
      ".editorconfig",
      ".npmrc",
      ".nvmrc",
      "release.config.mjs",
      ".DS_Store",
      ".validate-branch-namerc.json",
      "CHANGELOG.md",
      "LICENSE",
      "pnpm-lock.yaml",
      "sonar-project.properties",
      "README.md"
    ],
    "vitest": {
      "configFile": "config/vitest/vitest.global-unit-tests-config.ts",
      "related": true
    },
    "reporters": [
      "clear-text",
      "progress",
      "html",
      "json"
    ],
    "htmlReporter": {
      "fileName": "tests/stryker/coverage/index.html"
    },
    "jsonReporter": {
      "fileName": "tests/stryker/coverage/mutation.json"
    },
    "thresholds": {
      "high": 100,
      "low": 100,
      "break": 100
    },
    "dryRunTimeoutMinutes": 10,
    "disableTypeChecks": true,
    "configFile": "config/stryker/stryker.conf.mjs",
    "allowConsoleColors": true,
    "checkerNodeArgs": [],
    "commandRunner": {
      "command": "npm test"
    },
    "coverageAnalysis": "perTest",
    "clearTextReporter": {
      "allowColor": true,
      "allowEmojis": false,
      "logTests": true,
      "maxTestsToLog": 3,
      "reportTests": true,
      "reportMutants": true,
      "reportScoreTable": true,
      "skipFull": false
    },
    "dashboard": {
      "baseUrl": "https://dashboard.stryker-mutator.io/api/reports",
      "reportType": "full"
    },
    "dryRunOnly": false,
    "eventReporter": {
      "baseDir": "reports/mutation/events"
    },
    "force": false,
    "fileLogLevel": "off",
    "inPlace": false,
    "logLevel": "info",
    "maxConcurrentTestRunners": 9007199254740991,
    "maxTestRunnerReuse": 0,
    "mutator": {
      "plugins": null,
      "excludedMutations": []
    },
    "appendPlugins": [],
    "symlinkNodeModules": true,
    "tempDirName": ".stryker-tmp",
    "testRunnerNodeArgs": [],
    "timeoutFactor": 1.5,
    "timeoutMS": 5000,
    "warnings": true,
    "disableBail": false,
    "allowEmpty": false,
    "typescriptChecker": {
      "prioritizePerformanceOverAccuracy": true
    }
  },
  "framework": {
    "name": "StrykerJS",
    "version": "9.1.1",
    "branding": {
      "homepageUrl": "https://stryker-mutator.io",
      "imageUrl": "data:image/svg+xml;utf8,%3Csvg viewBox='0 0 1458 1458' xmlns='http://www.w3.org/2000/svg' fill-rule='evenodd' clip-rule='evenodd' stroke-linejoin='round' stroke-miterlimit='2'%3E%3Cpath fill='none' d='M0 0h1458v1458H0z'/%3E%3CclipPath id='a'%3E%3Cpath d='M0 0h1458v1458H0z'/%3E%3C/clipPath%3E%3Cg clip-path='url(%23a)'%3E%3Cpath d='M1458 729c0 402.655-326.345 729-729 729S0 1131.655 0 729C0 326.445 326.345 0 729 0s729 326.345 729 729' fill='%23e74c3c' fill-rule='nonzero'/%3E%3Cpath d='M778.349 1456.15L576.6 1254.401l233-105 85-78.668v-64.332l-257-257-44-187-50-208 251.806-82.793L1076.6 389.401l380.14 379.15c-19.681 367.728-311.914 663.049-678.391 687.599z' fill-opacity='.3'/%3E%3Cpath d='M753.4 329.503c41.79 0 74.579 7.83 97.925 25.444 23.571 18.015 41.69 43.956 55.167 77.097l11.662 28.679 165.733-58.183-14.137-32.13c-26.688-60.655-64.896-108.61-114.191-144.011-49.329-35.423-117.458-54.302-204.859-54.302-50.78 0-95.646 7.376-134.767 21.542-40.093 14.671-74.09 34.79-102.239 60.259-28.84 26.207-50.646 57.06-65.496 92.701-14.718 35.052-22.101 72.538-22.101 112.401 0 72.536 20.667 133.294 61.165 182.704 38.624 47.255 98.346 88.037 179.861 121.291 42.257 17.475 78.715 33.125 109.227 46.994 27.193 12.361 49.294 26.124 66.157 41.751 15.309 14.186 26.497 30.584 33.63 49.258 7.721 20.214 11.16 45.69 11.16 76.402 0 28.021-4.251 51.787-13.591 71.219-8.832 18.374-20.171 33.178-34.523 44.219-14.787 11.374-31.193 19.591-49.393 24.466-19.68 5.359-39.14 7.993-58.69 7.993-29.359 0-54.387-3.407-75.182-10.747-20.112-7.013-37.144-16.144-51.259-27.486-13.618-11.009-24.971-23.766-33.744-38.279-9.64-15.8-17.272-31.924-23.032-48.408l-10.965-31.376-161.669 60.585 10.734 30.124c10.191 28.601 24.197 56.228 42.059 82.748 18.208 27.144 41.322 51.369 69.525 72.745 27.695 21.075 60.904 38.218 99.481 51.041 37.777 12.664 82.004 19.159 132.552 19.159 49.998 0 95.818-8.321 137.611-24.622 42.228-16.471 78.436-38.992 108.835-67.291 30.719-28.597 54.631-62.103 71.834-100.642 17.263-38.56 25.923-79.392 25.923-122.248 0-54.339-8.368-100.37-24.208-138.32-16.29-38.759-38.252-71.661-65.948-98.797-26.965-26.418-58.269-48.835-93.858-67.175-33.655-17.241-69.196-33.11-106.593-47.533-35.934-13.429-65.822-26.601-89.948-39.525-22.153-11.868-40.009-24.21-53.547-37.309-11.429-11.13-19.83-23.678-24.718-37.664-5.413-15.49-7.98-33.423-7.98-53.577 0-40.883 11.293-71.522 37.086-90.539 28.443-20.825 64.985-30.658 109.311-30.658z' fill='%23f1c40f' fill-rule='nonzero'/%3E%3Cpath d='M720 0h18v113h-18zM1458 738v-18h-113v18h113zM720 1345h18v113h-18zM113 738v-18H0v18h113z'/%3E%3C/g%3E%3C/svg%3E"
    },
    "dependencies": {
      "@stryker-mutator/typescript-checker": "9.1.1",
      "typescript": "5.9.2"
    }
  }
}