name: 🚀 Deploy To Production Workflow

on:
  release:
    types: [ created ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  deployment:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    env:
      NUXT_PUBLIC_EMAIL: ${{ secrets.NUXT_PUBLIC_EMAIL }}
      NUXT_PUBLIC_PHONE_NUMBER: ${{ secrets.NUXT_PUBLIC_PHONE_NUMBER }}
      NUXT_PUBLIC_ADDRESS: ${{ secrets.NUXT_PUBLIC_ADDRESS }}
    steps:
      - name: Setup GitHub repository 🔧
        uses: actions/checkout@v5

      - name: Install pnpm 🏗️
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup NodeJS ✨
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: Restore pnpm dependencies from cache 🥡
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-v3-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install project dependencies 📦
        run: pnpm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Generate app ✨
        run: pnpm run generate

      - name: Copy App Engine configuration 📄
        run: cp app.yaml .output/public

      - name: Auth to GCP ☁️
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Deploy 🚀
        uses: 'google-github-actions/deploy-appengine@v2'
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          working_directory: .output/public
          flags: "--service-account=${{ secrets.GCP_SERVICE_ACCOUNT }}"