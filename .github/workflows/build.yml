name: ⚙️ Build Workflow
on:
  pull_request:
    branches:
      - master
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  UNIT_TESTS_COVERAGE_REPORTS_PATH: tests/unit/coverage
  UNIT_TESTS_COVERAGE_BASE_CACHE_KEY: tests-unit-coverage
  ACCEPTANCE_TESTS_REPORTS_PATH: tests/acceptance/reports
  GH_TOKEN: ${{ github.token }}
  STRYKER_REPORT_PATH: tests/stryker/coverage
  STRYKER_INCREMENTAL_PATH: tests/stryker/incremental

jobs:
  code-ql:
    name: CodeQL Scan ❇️
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5

      - name: Initialize CodeQL ⚙️
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: AutoBuild 🌡️
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis ❇️
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript"

  lint-workflows:
    name: Lint GitHub Workflows 🐙
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5

      - name: Create dummy package.json for ActionLint 📄
        run: |
          echo '{
            "name": "dummy-package",
            "version": "1.0.0",
            "private": true
          }' > package.json

      - name: Lint GitHub Workflows 🐙
        uses: raven-actions/actionlint@v2.0.1
        with:
          matcher: true
          fail-on-error: true
          shellcheck: true
          pyflakes: true
          cache: true
          group-result: true

  install:
    name: Install ⚙️
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5

      - name: Install pnpm 🏗️
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup NodeJS ✨
        uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Cache pnpm dependencies 🥡
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install project dependencies 📦
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install

  build:
    name: Build ✨
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5

      - name: Install pnpm 🏗️
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup NodeJS ✨
        uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Restore pnpm dependencies from cache 🥡
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Create Nuxt types ⛰️
        run: pnpm run postinstall

      - name: Type check 🪨
        run: pnpm run typecheck

      - name: Generate app ✨
        run: pnpm run generate

  lint:
    name: Lint Codebase 🔍
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5

      - name: Install pnpm 🏗️
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup NodeJS ✨
        uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Restore pnpm dependencies from cache 🥡
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Create Nuxt types ⛰️
        run: pnpm run postinstall

      - name: Check and lint code 🔍
        run: pnpm run lint

  unit-tests:
    name: Unit Tests 🧪
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5

      - name: Compute safe branch name 🍃
        id: safe-branch-name
        uses: ./.github/actions/compute-safe-branch-name

      - name: Install pnpm 🏗️
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup NodeJS ✨
        uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Restore pnpm dependencies from cache 🥡
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Create Nuxt types ⛰️
        run: pnpm run postinstall

      - name: Unit tests 🧪
        id: unit-tests
        continue-on-error: true
        run: pnpm run test:unit:cov

      - name: Save unit tests coverage in cache 🥡
        uses: actions/cache/save@v4
        id: cache-unit-tests-coverage
        if: ${{ hashFiles('tests/unit/coverage/lcov.info') != '' }}
        with:
          path: ${{ env.UNIT_TESTS_COVERAGE_REPORTS_PATH }}
          key: ${{ env.UNIT_TESTS_COVERAGE_BASE_CACHE_KEY }}-${{ steps.safe-branch-name.outputs.safe-branch-name }}-${{ hashFiles('tests/unit/coverage/lcov.info') }}

      - name: Save unit tests coverage report as artifact 💎
        uses: actions/upload-artifact@v4
        with:
          name: unit-tests-coverage-report
          path: ${{ env.UNIT_TESTS_COVERAGE_REPORTS_PATH }}
          retention-days: 2

      - name: Exit with error if unit tests failed 🚨
        if: steps.unit-tests.outcome != 'success'
        run: exit 1

  mutant-tests:
    name: Mutant Tests 👽
    runs-on: ubuntu-latest
    env:
      STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
      VERSION: ${{ github.head_ref }}
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5

      - name: Install pnpm 🏗️
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup NodeJS ✨
        uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Restore pnpm dependencies from cache 🥡
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Create Nuxt types ⛰️
        run: pnpm run postinstall

      - name: Mutant tests 👽
        id: mutant-tests
        run: pnpm run test:stryker

      - name: Save stryker report as artifact 💎
        uses: actions/upload-artifact@v4
        with:
          name: stryker-html-report
          path: ${{ env.STRYKER_REPORT_PATH }}/index.html
          retention-days: 2

      - name: Save stryker incremental as artifact 💎
        uses: actions/upload-artifact@v4
        with:
          name: stryker-incremental
          path: ${{ env.STRYKER_INCREMENTAL_PATH }}/incremental.json
          retention-days: 2

  e2e-tests:
    name: Acceptance Tests 🥒
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5

      - name: Install pnpm 🏗️
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup NodeJS ✨
        uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Restore pnpm dependencies from cache 🥡
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Create Nuxt types ⛰️
        run: pnpm run postinstall

      - name: Prepare E2E tests 🧭
        run: pnpm run test:cucumber:prepare

      - name: E2E tests ⚗️
        id: e2e-tests
        continue-on-error: true
        run: pnpm run test:cucumber

      - name: Save E2E tests reports as artifact 💎
        uses: actions/upload-artifact@v4
        with:
          name: e2e-tests-reports
          path: ${{ env.ACCEPTANCE_TESTS_REPORTS_PATH }}
          retention-days: 2

      - name: Exit with error if E2E tests failed 🚨
        if: steps.e2e-tests.outcome != 'success'
        run: exit 1

  sonarcloud:
    name: SonarCloud Analysis 🌥️
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      pull-requests: write
    needs:
      - unit-tests
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Compute safe branch name 🍃
        id: safe-branch-name
        uses: ./.github/actions/compute-safe-branch-name

      - name: Install pnpm 🏗️
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Restore pnpm dependencies from cache 🥡
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Restore tests coverage from cache 🥡
        uses: actions/cache/restore@v4
        id: cache-unit-tests-coverage
        with:
          path: ${{ env.UNIT_TESTS_COVERAGE_REPORTS_PATH }}
          key: ${{ env.UNIT_TESTS_COVERAGE_BASE_CACHE_KEY }}-${{ steps.safe-branch-name.outputs.safe-branch-name }}-
          restore-keys: |
            ${{ env.UNIT_TESTS_COVERAGE_BASE_CACHE_KEY }}-${{ steps.safe-branch-name.outputs.safe-branch-name }}-

      - name: SonarCloud Scan 🌥️
        uses: SonarSource/sonarqube-scan-action@v6.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
