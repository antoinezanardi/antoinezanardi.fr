name: ⚙️ Build Workflow
on:
  pull_request:
    branches:
      - master
      - develop

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  code-ql:
    name: CodeQL Scan ❇️
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository 📡
        uses: actions/checkout@v5

      - name: Perform CodeQL Analysis ❇️
        uses: ./.github/actions/code-ql

  lint-workflows:
    name: Lint GitHub Workflows 🐙
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5

      - name: Create dummy package.json for ActionLint 📄
        run: |
          echo '{
            "name": "dummy-package",
            "version": "1.0.0",
            "private": true
          }' > package.json

      - name: Lint GitHub Workflows 🐙
        uses: raven-actions/actionlint@v2.0.1
        with:
          matcher: true
          fail-on-error: true
          shellcheck: true
          pyflakes: true
          cache: true
          group-result: true

  install:
    name: Install ⚙️
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5

      - name: Install project 📦
        uses: ./.github/actions/install-project

  build:
    name: Build ✨
    runs-on: ubuntu-latest
    env:
      NUXT_PUBLIC_EMAIL: ${{ vars.NUXT_PUBLIC_EMAIL }}
      NUXT_PUBLIC_PHONE_NUMBER: ${{ vars.NUXT_PUBLIC_PHONE_NUMBER }}
      NUXT_PUBLIC_ADDRESS: ${{ vars.NUXT_PUBLIC_ADDRESS }}
      NUXT_SITE_NAME: ${{ vars.STAGING_SITE_NAME }}
      NUXT_SITE_URL: ${{ vars.STAGING_URL }}
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5

      - name: Install project 📦
        uses: ./.github/actions/install-project

      - name: Generate app ✨
        run: pnpm run generate

  lint:
    name: Lint Codebase 🔍
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5

      - name: Install project 📦
        uses: ./.github/actions/install-project

      - name: Check and lint code 🔍
        run: pnpm run lint

  unit-tests:
    name: Unit Tests 🧪
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5

      - name: Unit Tests 🧪
        uses: ./.github/actions/unit-tests

  mutant-tests:
    name: Mutant Tests 👽
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment:
      name: Stryker Dashboard
      url: ${{ steps.mutant-tests.outputs.mutant-tests-dashboard-url }}
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5

      - name: Mutant Tests 👽
        id: mutant-tests
        uses: ./.github/actions/mutant-tests
        with:
          stryker-dashboard-api-key: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}

  acceptance-tests:
    name: Acceptance Tests 🥒
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5

      - name: Acceptance Tests 🥒
        uses: ./.github/actions/acceptance-tests

  badges:
    name: Generate Badges 💠
    runs-on: ubuntu-latest
    needs:
      - unit-tests
      - acceptance-tests
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5

      - name: Generate Badges 💠
        uses: ./.github/actions/badges
        with:
          byob-token: ${{ secrets.BYOB_TOKEN }}
          unit-tests-count: ${{ needs.unit-tests.outputs.vitest-tests-count }}
          unit-tests-covered-statements: ${{ needs.unit-tests.outputs.vitest-statements-count }}
          unit-tests-covered-branches: ${{ needs.unit-tests.outputs.vitest-branches-count }}
          unit-tests-covered-functions: ${{ needs.unit-tests.outputs.vitest-functions-count }}
          unit-tests-covered-lines: ${{ needs.unit-tests.outputs.vitest-lines-count }}
          unit-tests-statements-percent: ${{ needs.unit-tests.outputs.vitest-statements-percent }}
          unit-tests-branches-percent: ${{ needs.unit-tests.outputs.vitest-branches-percent }}
          unit-tests-functions-percent: ${{ needs.unit-tests.outputs.vitest-functions-percent }}
          unit-tests-lines-percent: ${{ needs.unit-tests.outputs.vitest-lines-percent }}
          acceptance-tests-count: ${{ needs.acceptance-tests.outputs.cucumber-tests-count }}

  sonarcloud:
    name: SonarCloud Analysis 🌥️
    runs-on: ubuntu-latest
    timeout-minutes: 20
    permissions:
      contents: read
      pull-requests: write
    needs:
      - unit-tests
    if: github.actor != 'renovate[bot]'
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: SonarCloud Scan 🌥️
        uses: ./.github/actions/sonarcloud
        with:
          sonarcloud-token: ${{ secrets.SONARCLOUD_TOKEN }}
