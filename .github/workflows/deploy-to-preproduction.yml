name: ‚õµÔ∏è Deploy on Preproduction Workflow

on:
  push:
    branches:
      - "develop"
      - "feat/vercel-for-develop-branch"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  deployment:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    env:
      NUXT_PUBLIC_EMAIL: ${{ secrets.NUXT_PUBLIC_EMAIL }}
      NUXT_PUBLIC_PHONE_NUMBER: ${{ secrets.NUXT_PUBLIC_PHONE_NUMBER }}
      NUXT_PUBLIC_ADDRESS: ${{ secrets.NUXT_PUBLIC_ADDRESS }}
    steps:
      - name: Setup GitHub repository üîß
        uses: actions/checkout@v5

      - name: Install pnpm üèóÔ∏è
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup NodeJS ‚ú®
        uses: actions/setup-node@v5
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: Restore pnpm dependencies from cache ü•°
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-v3-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install project dependencies üì¶
        run: pnpm install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Generate app ‚ú®
        run: pnpm run generate

      - name: Deploy to Vercel ‚õµ
        uses: amondnet/vercel-action@v41.1.4
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}